{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { Button, Col } from 'antd';\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\nimport Router from 'next/router';\nimport PerformerVideo from './video-item';\nimport './index.less';\nexport default (({\n  performer,\n  videos,\n  searching,\n  success\n}) => {\n  const ref = React.useRef(null);\n  const [paddleShowing, setPaddleShowing] = React.useState(false);\n  React.useEffect(() => {\n    const videoListElement = document.querySelector('.video-list');\n\n    if (!videoListElement) {\n      return;\n    }\n\n    if (videoListElement.clientWidth < videoListElement.scrollWidth) {\n      setPaddleShowing(true);\n    }\n  }, [performer]);\n\n  const scrollTo = width => {\n    const e = ref.current;\n    e.scroll({\n      left: width,\n      behavior: 'smooth'\n    });\n  };\n\n  return !searching && success && performer.videos.length > 0 && __jsx(\"div\", {\n    className: \"video-carousel\"\n  }, __jsx(\"div\", {\n    className: \"video-header\"\n  }, __jsx(\"span\", {\n    className: \"shop-name\"\n  }, `${performer.username}'s Videos`), __jsx(Button, {\n    type: \"primary\",\n    onClick: () => {\n      Router.push(`/videos?username=${performer.username}`);\n    }\n  }, \"See all Items\")), __jsx(LeftCircleFilled, {\n    className: \"left-paddle paddle\",\n    hidden: !paddleShowing,\n    onClick: () => scrollTo(-ref.current.clientWidth)\n  }), __jsx(\"div\", {\n    className: \"video-list\",\n    ref: ref\n  }, performer.videos.map(id => __jsx(Col, {\n    xl: 6,\n    md: 8,\n    sm: 10,\n    xs: 16,\n    key: id,\n    className: \"pad12-5\"\n  }, __jsx(PerformerVideo, {\n    video: videos[id],\n    key: id\n  })))), __jsx(RightCircleFilled, {\n    hidden: !paddleShowing,\n    className: \"right-paddle paddle\",\n    onClick: () => scrollTo(ref.current.clientWidth)\n  }));\n});","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/performer-assets/video-carousel/index.tsx"],"names":["React","Button","Col","LeftCircleFilled","RightCircleFilled","Router","PerformerVideo","performer","videos","searching","success","ref","useRef","paddleShowing","setPaddleShowing","useState","useEffect","videoListElement","document","querySelector","clientWidth","scrollWidth","scrollTo","width","e","current","scroll","left","behavior","length","username","push","map","id"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,MAA5B;AAEA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,mBAApD;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,cAAP,MAA2B,cAA3B;AAEA,OAAO,cAAP;AASA,gBAAe,CAAC;AACdC,EAAAA,SADc;AACHC,EAAAA,MADG;AACKC,EAAAA,SADL;AACgBC,EAAAA;AADhB,CAAD,KAED;AACZ,QAAMC,GAAG,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAZ;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCd,KAAK,CAACe,QAAN,CAAe,KAAf,CAA1C;AACAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,MAAM;AACpB,UAAMC,gBAAgB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAzB;;AACA,QAAI,CAACF,gBAAL,EAAuB;AACrB;AACD;;AAED,QAAIA,gBAAgB,CAACG,WAAjB,GAA+BH,gBAAgB,CAACI,WAApD,EAAiE;AAC/DP,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD;AACF,GATD,EASG,CAACP,SAAD,CATH;;AAWA,QAAMe,QAAQ,GAAIC,KAAD,IAAmB;AAClC,UAAMC,CAAc,GAAGb,GAAG,CAACc,OAA3B;AACAD,IAAAA,CAAC,CAACE,MAAF,CAAS;AAAEC,MAAAA,IAAI,EAAEJ,KAAR;AAAeK,MAAAA,QAAQ,EAAE;AAAzB,KAAT;AACD,GAHD;;AAKA,SACE,CAACnB,SAAD,IACGC,OADH,IAEGH,SAAS,CAACC,MAAV,CAAiBqB,MAAjB,GAA0B,CAF7B,IAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAM,IAAA,SAAS,EAAC;AAAhB,KAA8B,GAAEtB,SAAS,CAACuB,QAAS,WAAnD,CADF,EAEE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACbzB,MAAAA,MAAM,CAAC0B,IAAP,CAAa,oBAAmBxB,SAAS,CAACuB,QAAS,EAAnD;AACD;AAJH,qBAFF,CADF,EAYE,MAAC,gBAAD;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,MAAM,EAAE,CAACjB,aAFX;AAGE,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAAC,CAACX,GAAG,CAACc,OAAJ,CAAYL,WAAd;AAHzB,IAZF,EAiBE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAET;AAAjC,KACGJ,SAAS,CAACC,MAAV,CAAiBwB,GAAjB,CAAsBC,EAAD,IACpB,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAmC,IAAA,GAAG,EAAEA,EAAxC;AAA4C,IAAA,SAAS,EAAC;AAAtD,KACE,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEzB,MAAM,CAACyB,EAAD,CAA7B;AAAmC,IAAA,GAAG,EAAEA;AAAxC,IADF,CADD,CADH,CAjBF,EAwBE,MAAC,iBAAD;AACE,IAAA,MAAM,EAAE,CAACpB,aADX;AAEE,IAAA,SAAS,EAAC,qBAFZ;AAGE,IAAA,OAAO,EAAE,MAAMS,QAAQ,CAACX,GAAG,CAACc,OAAJ,CAAYL,WAAb;AAHzB,IAxBF,CAJJ;AAoCD,CAzDD","sourcesContent":["import * as React from 'react';\nimport { Button, Col } from 'antd';\nimport { IVideo, IPerformer } from 'src/interfaces';\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\nimport Router from 'next/router';\nimport PerformerVideo from './video-item';\n\nimport './index.less';\n\ninterface IProps {\n  performer: IPerformer;\n  videos: Record<string, IVideo>;\n  searching: boolean;\n  success: boolean;\n}\n\nexport default ({\n  performer, videos, searching, success\n}: IProps) => {\n  const ref = React.useRef(null);\n  const [paddleShowing, setPaddleShowing] = React.useState(false);\n  React.useEffect(() => {\n    const videoListElement = document.querySelector('.video-list');\n    if (!videoListElement) {\n      return;\n    }\n\n    if (videoListElement.clientWidth < videoListElement.scrollWidth) {\n      setPaddleShowing(true);\n    }\n  }, [performer]);\n\n  const scrollTo = (width: number) => {\n    const e: HTMLElement = ref.current;\n    e.scroll({ left: width, behavior: 'smooth' });\n  };\n\n  return (\n    !searching\n    && success\n    && performer.videos.length > 0 && (\n      <div className=\"video-carousel\">\n        <div className=\"video-header\">\n          <span className=\"shop-name\">{`${performer.username}'s Videos`}</span>\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              Router.push(`/videos?username=${performer.username}`);\n            }}\n          >\n            See all Items\n          </Button>\n        </div>\n        <LeftCircleFilled\n          className=\"left-paddle paddle\"\n          hidden={!paddleShowing}\n          onClick={() => scrollTo(-ref.current.clientWidth)}\n        />\n        <div className=\"video-list\" ref={ref}>\n          {performer.videos.map((id) => (\n            <Col xl={6} md={8} sm={10} xs={16} key={id} className=\"pad12-5\">\n              <PerformerVideo video={videos[id]} key={id} />\n            </Col>\n          ))}\n        </div>\n        <RightCircleFilled\n          hidden={!paddleShowing}\n          className=\"right-paddle paddle\"\n          onClick={() => scrollTo(ref.current.clientWidth)}\n        />\n      </div>\n    )\n  );\n};\n"]},"metadata":{},"sourceType":"module"}