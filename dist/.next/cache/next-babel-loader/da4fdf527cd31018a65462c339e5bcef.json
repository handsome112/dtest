{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Select, message } from 'antd';\nimport { settingService } from 'src/services';\nimport { getResponseError } from '@lib/utils';\nconst {\n  Option\n} = Select;\n\nconst filter = (value, option) => option.children.toLowerCase().indexOf(value.toLowerCase()) > -1;\n\nconst TimezonesSelect = _ref => {\n  let props = Object.assign({}, _ref);\n  const [timezones, setTimezones] = React.useState([]);\n  React.useEffect(() => {\n    const getTimezoneList = async () => {\n      try {\n        const resp = await settingService.getTimezones();\n        setTimezones(resp.data);\n      } catch (e) {\n        const err = await Promise.resolve(e);\n        message.error(getResponseError(err));\n      }\n    };\n\n    getTimezoneList();\n  }, []);\n  return __jsx(Select, _extends({}, props, {\n    showSearch: true,\n    filterOption: filter,\n    placeholder: \"Select your timezone\"\n  }), timezones.length > 0 && timezones.map(zone => __jsx(Option, {\n    key: zone,\n    value: zone\n  }, zone)));\n};\n\nTimezonesSelect.defaultProps = {\n  autoFocus: false,\n  disabled: false\n};\nexport default TimezonesSelect;","map":null,"metadata":{},"sourceType":"module"}