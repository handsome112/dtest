{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport moment from 'moment';\nimport { CrownTwoTone, InfoCircleOutlined } from '@ant-design/icons';\nimport { Menu, Dropdown } from 'antd';\nimport { chatBoxMessageClassName } from '@lib/utils';\nimport './Message.less';\nexport default function Message(dataProps) {\n  var data = dataProps.data,\n      showTimestamp = dataProps.showTimestamp,\n      isOwner = dataProps.isOwner,\n      canDelete = dataProps.canDelete,\n      onDelete = dataProps.onDelete;\n  var friendlyTimestamp = moment(data.timestamp).format('LLLL'); // const randomColor = Math.floor(Math.random() * 16777215).toString(16);\n\n  var menu = __jsx(Menu, null, __jsx(Menu.Item, {\n    onClick: onDelete\n  }, __jsx(\"a\", null, \"delete\")));\n\n  return __jsx(\"div\", {\n    className: chatBoxMessageClassName(dataProps) // className={[\n    //   'message',\n    //   `${isMine && data.type !== 'tip' ? 'mine' : ''}`,\n    //   `${data.type === 'tip' ? 'tip' : ''}`,\n    //   `${startsSequence ? 'start' : ''}`,\n    //   `${endsSequence ? 'end' : ''}`\n    // ].join(' ')}\n\n  }, data.text && !data.isSystem && __jsx(\"div\", {\n    className: \"bubble-container\"\n  }, __jsx(\"div\", {\n    className: \"bubble\",\n    title: friendlyTimestamp\n  }, canDelete && __jsx(Dropdown, {\n    overlay: menu,\n    placement: \"topRight\"\n  }, __jsx(\"span\", null, __jsx(InfoCircleOutlined, null), ' ')), data.senderInfo && __jsx(\"span\", {\n    className: \"u-name\"\n  }, isOwner && __jsx(CrownTwoTone, {\n    twoToneColor: \"#eb2f96\"\n  }), data.senderInfo.username, data.type !== 'tip' ? ': ' : ' '), !data.imageUrl && data.text, ' ', data.imageUrl && __jsx(\"a\", {\n    title: \"Click to view full content\",\n    href: data.imageUrl.indexOf('http') === -1 ? '#' : data.imageUrl,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(\"img\", {\n    src: data.imageUrl,\n    width: \"180px\",\n    alt: \"\"\n  })))), data.text && data.isSystem && __jsx(\"p\", {\n    style: {\n      textAlign: 'center',\n      fontSize: '14px'\n    }\n  }, data.text), showTimestamp && !data.isSystem && __jsx(\"div\", {\n    className: \"timestamp\"\n  }, friendlyTimestamp));\n}","map":null,"metadata":{},"sourceType":"module"}