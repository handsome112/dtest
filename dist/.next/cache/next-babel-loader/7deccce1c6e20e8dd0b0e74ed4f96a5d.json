{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createSelector } from 'reselect';\n\nvar userSelecter = function userSelecter(state) {\n  return state.user.current;\n};\n\nvar performerSelecter = function performerSelecter(state) {\n  return state.performer.current;\n};\n\nvar studioSelecter = function studioSelecter(state) {\n  return state.studio.current;\n};\n\nvar authSelecter = function authSelecter(state) {\n  return state.auth;\n};\n\nexport var currentUserSelecter = createSelector(userSelecter, performerSelecter, studioSelecter, authSelecter, function (user, performer, studio, auth) {\n  if (!auth.loggedIn) return null;\n\n  if (user !== null && user !== void 0 && user._id) {\n    return _objectSpread(_objectSpread({}, user), {}, {\n      role: 'user'\n    });\n  }\n\n  if (performer !== null && performer !== void 0 && performer._id) {\n    return _objectSpread(_objectSpread({}, performer), {}, {\n      role: 'performer'\n    });\n  }\n\n  if (studio !== null && studio !== void 0 && studio._id) {\n    return _objectSpread(_objectSpread({}, studio), {}, {\n      role: 'studio'\n    });\n  }\n\n  return null;\n});","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/redux/selectors.ts"],"names":["createSelector","userSelecter","state","user","current","performerSelecter","performer","studioSelecter","studio","authSelecter","auth","currentUserSelecter","loggedIn","_id","role"],"mappings":";;;;;;AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACC,IAAN,CAAWC,OAAtB;AAAA,CAArB;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,KAAD;AAAA,SAAWA,KAAK,CAACI,SAAN,CAAgBF,OAA3B;AAAA,CAA1B;;AACA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACL,KAAD;AAAA,SAAWA,KAAK,CAACM,MAAN,CAAaJ,OAAxB;AAAA,CAAvB;;AACA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACP,KAAD;AAAA,SAAWA,KAAK,CAACQ,IAAjB;AAAA,CAArB;;AAEA,OAAO,IAAMC,mBAAmB,GAAGX,cAAc,CAC/CC,YAD+C,EAE/CI,iBAF+C,EAG/CE,cAH+C,EAI/CE,YAJ+C,EAK/C,UAACN,IAAD,EAAOG,SAAP,EAAkBE,MAAlB,EAA0BE,IAA1B,EAAmC;AACjC,MAAI,CAACA,IAAI,CAACE,QAAV,EAAoB,OAAO,IAAP;;AAEpB,MAAIT,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEU,GAAV,EAAe;AACb,2CAAYV,IAAZ;AAAkBW,MAAAA,IAAI,EAAE;AAAxB;AACD;;AAED,MAAIR,SAAJ,aAAIA,SAAJ,eAAIA,SAAS,CAAEO,GAAf,EAAoB;AAClB,2CAAYP,SAAZ;AAAuBQ,MAAAA,IAAI,EAAE;AAA7B;AACD;;AAED,MAAIN,MAAJ,aAAIA,MAAJ,eAAIA,MAAM,CAAEK,GAAZ,EAAiB;AACf,2CAAYL,MAAZ;AAAoBM,MAAAA,IAAI,EAAE;AAA1B;AACD;;AAED,SAAO,IAAP;AACD,CArB8C,CAA1C","sourcesContent":["import { createSelector } from 'reselect';\n\nconst userSelecter = (state) => state.user.current;\nconst performerSelecter = (state) => state.performer.current;\nconst studioSelecter = (state) => state.studio.current;\nconst authSelecter = (state) => state.auth;\n\nexport const currentUserSelecter = createSelector(\n  userSelecter,\n  performerSelecter,\n  studioSelecter,\n  authSelecter,\n  (user, performer, studio, auth) => {\n    if (!auth.loggedIn) return null;\n\n    if (user?._id) {\n      return { ...user, role: 'user' };\n    }\n\n    if (performer?._id) {\n      return { ...performer, role: 'performer' };\n    }\n\n    if (studio?._id) {\n      return { ...studio, role: 'studio' };\n    }\n\n    return null;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}