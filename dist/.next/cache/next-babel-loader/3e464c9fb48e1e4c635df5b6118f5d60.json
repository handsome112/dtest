{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/streaming/description.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport { List, Row, Col } from 'antd';\nimport NumberFormat from '@components/common/layout/numberformat';\n\nconst ListItem = ({\n  description,\n  title\n}) => __jsx(List.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, __jsx(Row, {\n  style: {\n    width: '100%'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, __jsx(Col, {\n  className: \"light-text\",\n  sm: {\n    span: 6\n  },\n  xs: {\n    span: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }\n}, title), __jsx(Col, {\n  style: {\n    fontWeight: 'bold'\n  },\n  sm: {\n    span: 18\n  },\n  xs: {\n    span: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }\n}, description)));\n\nlet interval;\nexport const Description = ({\n  roomJoined,\n  receivedToken\n}) => {\n  const {\n    0: callTime,\n    1: setCallTime\n  } = useState(0);\n  useEffect(() => {\n    if (roomJoined) {\n      interval = setInterval(() => {\n        setCallTime(callTime + 1);\n      }, 60 * 1000);\n    } else {\n      setCallTime(0);\n      interval && clearInterval(interval);\n    }\n  }, [roomJoined]);\n  const dataSource = [{\n    title: 'Call time',\n    description: `${callTime} minute(s)`\n  }, {\n    title: 'Status',\n    description: roomJoined ? 'Live' : ''\n  }, {\n    title: 'Received Token',\n    description: __jsx(NumberFormat, {\n      value: receivedToken,\n      suffix: \" token(s)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }\n    })\n  }];\n  return __jsx(List, {\n    dataSource: dataSource,\n    renderItem: item => __jsx(ListItem, {\n      description: item.description,\n      title: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"module"}