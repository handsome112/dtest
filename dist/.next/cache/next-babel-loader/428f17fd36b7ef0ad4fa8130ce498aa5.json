{"ast":null,"code":"var _this = this;\n\nvar __jsx = React.createElement;\nimport { Table, Tag } from 'antd';\nimport React from 'react';\nimport { formatDate } from 'src/lib';\nexport var RefundRequestTable = function RefundRequestTable(_ref) {\n  var requests = _ref.requests,\n      rowKey = _ref.rowKey,\n      pageSize = _ref.pageSize,\n      total = _ref.total,\n      onChange = _ref.onChange;\n  var columns = [{\n    title: 'Performer',\n    dataIndex: 'performerId',\n    key: 'performerId',\n    render: function render(data, record) {\n      var _record$performerInfo;\n\n      return __jsx(\"span\", null, (record === null || record === void 0 ? void 0 : (_record$performerInfo = record.performerInfo) === null || _record$performerInfo === void 0 ? void 0 : _record$performerInfo.username) || 'N/A');\n    }\n  }, {\n    title: 'Product',\n    dataIndex: 'sourceId',\n    key: 'sourceId',\n    render: function render(data, record) {\n      return __jsx(\"span\", null, record.productInfo && record.productInfo.name || 'N/A');\n    }\n  }, {\n    title: 'Qty',\n    dataIndex: 'sourceId',\n    render: function render(data, record) {\n      return __jsx(\"span\", null, record.orderInfo && record.orderInfo.quantity || 'N/A');\n    }\n  }, {\n    title: 'Tokens',\n    dataIndex: 'token',\n    align: 'center',\n    render: function render(data) {\n      return __jsx(\"span\", null, data);\n    }\n  }, {\n    title: 'Order Number',\n    align: 'center',\n    render: function render(record) {\n      var _record$orderInfo;\n\n      return (record === null || record === void 0 ? void 0 : (_record$orderInfo = record.orderInfo) === null || _record$orderInfo === void 0 ? void 0 : _record$orderInfo.orderNumber) || 'N/A';\n    }\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    filters: [{\n      text: 'Resolved',\n      value: 'resolved'\n    }, {\n      text: 'Pending',\n      value: 'pending'\n    }, {\n      text: 'Rejected',\n      value: 'rejected'\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.status.includes(value);\n    },\n    render: function render(status) {\n      switch (status) {\n        case 'resolved':\n          return __jsx(Tag, {\n            color: \"green\"\n          }, \"Resolved\");\n\n        case 'pending':\n          return __jsx(Tag, {\n            color: \"warning\"\n          }, \"Pending\");\n\n        case 'rejected':\n          return __jsx(Tag, {\n            color: \"default\"\n          }, \"Rejected\");\n\n        default:\n          return __jsx(Tag, {\n            color: \"default\"\n          }, \"Rejected\");\n      }\n    }\n  }, {\n    title: 'Last updated at',\n    dataIndex: 'updatedAt',\n    sorter: true,\n    key: 'updatedAt',\n    render: function render(date) {\n      return __jsx(\"span\", null, formatDate(date));\n    }\n  }];\n  return __jsx(Table, {\n    columns: columns,\n    rowKey: rowKey,\n    dataSource: requests,\n    pagination: {\n      total: total,\n      pageSize: pageSize\n    },\n    onChange: onChange.bind(_this)\n  });\n};","map":null,"metadata":{},"sourceType":"module"}