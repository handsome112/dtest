{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Form, Button, InputNumber } from 'antd';\nimport FormInputItem from '@components/common/base/input-item-list';\nimport { formItemLayout, tailFormItemLayout } from 'src/lib';\nvar leftFormItem = [{\n  name: 'privateCallPrice',\n  rules: [{\n    validator: function validator(_, value) {\n      return new Promise(function (resolve, reject) {\n        if (parseInt(value, 10) > 0) return resolve(null);\n        return reject(new Error('The price must be greater than 0!'));\n      });\n    }\n  }],\n  label: 'Private call tokens/minute',\n  children: __jsx(InputNumber, {\n    type: \"number\"\n  })\n}, {\n  name: 'groupCallPrice',\n  rules: [{\n    validator: function validator(_, value) {\n      return new Promise(function (resolve, reject) {\n        if (parseInt(value, 10) > 0) return resolve(null);\n        return reject(new Error('The price must be greater than 0!'));\n      });\n    }\n  }],\n  label: 'Group call tokens/minute',\n  children: __jsx(InputNumber, {\n    type: \"number\"\n  })\n}];\nvar initFormValue = {\n  privateCallPrice: 0,\n  groupCallPrice: 0\n};\nexport default (function (_ref) {\n  var onFinish = _ref.onFinish,\n      privateCallPrice = _ref.privateCallPrice,\n      groupCallPrice = _ref.groupCallPrice,\n      loading = _ref.loading;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  return __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: onFinish,\n    name: \"defaultPriceForm\",\n    className: \"performerEditForm\",\n    initialValues: _objectSpread(_objectSpread({}, initFormValue), {}, {\n      privateCallPrice: privateCallPrice,\n      groupCallPrice: groupCallPrice\n    })\n  }), __jsx(FormInputItem, {\n    fields: leftFormItem\n  }), __jsx(Form.Item, tailFormItemLayout, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading\n  }, \"Save Change\")));\n});","map":null,"metadata":{},"sourceType":"module"}