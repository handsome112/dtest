{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col, Pagination, message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport React, { PureComponent } from 'react';\nimport PurchasedGalleryCard from 'src/components/galleries/purchased-gallery-card';\nimport { galleryService } from 'src/services';\nimport { getResponseError } from 'src/lib';\nimport { omit } from 'lodash';\n\nclass PurchasedGalleriesPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      limit: 12,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      data: [],\n      total: 0,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  async loadData() {\n    const query = omit(this.state, ['data', 'total', 'loading']);\n    await this.setState({\n      loading: true\n    });\n\n    try {\n      await this.setState({\n        loading: true\n      });\n      const resp = await galleryService.purchased(_objectSpread({}, query));\n      await this.setState({\n        data: resp.data.data,\n        total: resp.data.total\n      });\n    } catch (error) {\n      this.showError(error);\n    } finally {\n      await this.setState({\n        loading: false\n      });\n    }\n  }\n\n  async showError(e) {\n    const err = await Promise.resolve(e);\n    message.error(getResponseError(err));\n  }\n\n  async pageChange(page) {\n    const {\n      limit\n    } = this.state;\n    await this.setState({\n      offset: (page - 1) * limit\n    });\n    this.loadData();\n  }\n\n  render() {\n    const {\n      data,\n      loading,\n      total,\n      limit\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My Purchased Galleries\")), __jsx(\"div\", {\n      className: \"main-profile-background\"\n    }, __jsx(PageHeader, {\n      title: \"Purchased Gallery\"\n    }), __jsx(\"div\", {\n      className: \"purchased-videos-page pad40\"\n    }, !loading && data !== null && data !== void 0 && data.length ? __jsx(Row, null, data.map(gallery => __jsx(Col, {\n      lg: 6,\n      md: 8,\n      sm: 12,\n      xs: 24,\n      key: gallery._id,\n      style: {\n        padding: '0 10px'\n      }\n    }, __jsx(PurchasedGalleryCard, {\n      gallery: gallery.targetInfo\n    }))), total > limit && __jsx(Col, {\n      sm: 24,\n      style: {\n        textAlign: 'center'\n      }\n    }, __jsx(Pagination, {\n      onChange: this.pageChange.bind(this),\n      defaultCurrent: 1,\n      pageSize: limit,\n      total: total\n    }))) : __jsx(\"div\", {\n      className: \"pad20\"\n    }, \"You have not purchased any galleries yet.\"))));\n  }\n\n}\n\n_defineProperty(PurchasedGalleriesPage, \"authenticate\", true);\n\n_defineProperty(PurchasedGalleriesPage, \"layout\", 'primary');\n\nexport default PurchasedGalleriesPage;","map":null,"metadata":{},"sourceType":"module"}