{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport '../stream-chat/Messenger.less';\nimport { connect } from 'react-redux';\nimport { deactiveConversation } from '@redux/message/actions';\nimport { Button } from 'antd';\nimport ConversationList from './ConversationList';\nimport MessageList from './MessageList';\n\nvar Messenger = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Messenger, _PureComponent);\n\n  var _super = _createSuper(Messenger);\n\n  function Messenger() {\n    _classCallCheck(this, Messenger);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Messenger, [{\n    key: \"onClose\",\n    value: function onClose() {\n      var dispatchDeactiveConversation = this.props.deactiveConversation;\n      dispatchDeactiveConversation();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          toSource = _this$props.toSource,\n          toId = _this$props.toId,\n          activeConversation = _this$props.activeConversation;\n      return __jsx(\"div\", {\n        className: \"messenger\"\n      }, __jsx(\"div\", {\n        className: !activeConversation._id ? 'sidebar' : 'sidebar active'\n      }, __jsx(ConversationList, {\n        toSource: toSource,\n        toId: toId\n      })), __jsx(\"div\", {\n        className: !activeConversation._id ? 'chat-content' : 'chat-content active'\n      }, __jsx(Button, {\n        onClick: this.onClose.bind(this),\n        className: \"close-btn\"\n      }, \"close\"), __jsx(MessageList, null)));\n    }\n  }]);\n\n  return Messenger;\n}(PureComponent);\n\nvar mapStates = function mapStates(state) {\n  var activeConversation = state.conversation.activeConversation;\n  return {\n    activeConversation: activeConversation\n  };\n};\n\nvar mapDispatch = {\n  deactiveConversation: deactiveConversation\n};\nexport default connect(mapStates, mapDispatch)(Messenger);","map":null,"metadata":{},"sourceType":"module"}