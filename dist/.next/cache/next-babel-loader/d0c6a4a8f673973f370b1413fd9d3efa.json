{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Button, Col } from 'antd';\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\nimport ProductCard from 'src/components/products/product-card';\nimport Router from 'next/router';\nimport './product-carousel.less';\n\nvar Products = function Products(_ref) {\n  _s();\n\n  var performer = _ref.performer,\n      products = _ref.products,\n      searching = _ref.searching,\n      success = _ref.success,\n      purchaseProduct = _ref.purchaseProduct;\n  var ref = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      paddleShowing = _React$useState2[0],\n      setPaddleShowing = _React$useState2[1];\n\n  React.useEffect(function () {\n    var productListElement = document.getElementsByClassName('product-list');\n\n    if (productListElement.length && productListElement[0].clientWidth < productListElement[0].scrollWidth) {\n      setPaddleShowing(true);\n    }\n  }, [performer]);\n\n  var scrollTo = function scrollTo(width) {\n    var e = ref.current;\n    e.scroll({\n      left: width,\n      behavior: 'smooth'\n    });\n  };\n\n  return !searching && success && performer.products.length > 0 && __jsx(\"div\", {\n    className: \"product-carousel\"\n  }, __jsx(\"div\", {\n    className: \"product-header\"\n  }, __jsx(\"span\", {\n    className: \"shop-name\"\n  }, \"\".concat(performer.username, \"'s Shop\")), __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      Router.push(\"/products?username=\".concat(performer.username));\n    }\n  }, \"See all Items\")), __jsx(LeftCircleFilled, {\n    className: \"left-paddle paddle\",\n    hidden: !paddleShowing,\n    onClick: function onClick() {\n      return scrollTo(-ref.current.clientWidth);\n    }\n  }), __jsx(\"div\", {\n    className: \"product-list\",\n    ref: ref\n  }, performer.products.map(function (id) {\n    return __jsx(Col, {\n      xl: 6,\n      md: 8,\n      sm: 10,\n      xs: 16,\n      key: id,\n      className: \"pad12-5\"\n    }, __jsx(ProductCard, {\n      key: id,\n      product: products[id],\n      onHandlePurchase: purchaseProduct\n    })) // <PerformerProduct\n    //   product={products[id]}\n    //   key={id}\n    //   purchaseProduct={purchaseProduct}\n    // />\n    ;\n  })), __jsx(RightCircleFilled, {\n    hidden: !paddleShowing,\n    className: \"right-paddle paddle\",\n    onClick: function onClick() {\n      return scrollTo(ref.current.clientWidth);\n    }\n  }));\n};\n\n_s(Products, \"1UGqCe/BqpO6wbU9d6nSG3PcxYE=\");\n\n_c = Products;\nProducts.defaultProps = {\n  purchaseProduct: null\n};\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/performer-assets/product-carousel/index.tsx"],"names":["React","Button","Col","LeftCircleFilled","RightCircleFilled","ProductCard","Router","Products","performer","products","searching","success","purchaseProduct","ref","useRef","useState","paddleShowing","setPaddleShowing","useEffect","productListElement","document","getElementsByClassName","length","clientWidth","scrollWidth","scrollTo","width","e","current","scroll","left","behavior","username","push","map","id","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, Col } from 'antd';\nimport { IProduct, IPerformer } from 'src/interfaces';\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\nimport ProductCard from 'src/components/products/product-card';\nimport Router from 'next/router';\n\nimport './product-carousel.less';\n\ninterface IProps {\n  performer: IPerformer;\n  products: Record<string, IProduct>;\n  searching: boolean;\n  success: boolean;\n  purchaseProduct?: (item: IProduct, type: 'product') => void;\n}\n\nconst Products = ({\n  performer,\n  products,\n  searching,\n  success,\n  purchaseProduct\n}: IProps) => {\n  const ref = React.useRef(null);\n  const [paddleShowing, setPaddleShowing] = React.useState(false);\n  React.useEffect(() => {\n    const productListElement = document.getElementsByClassName('product-list');\n    if (\n      productListElement.length\n      && productListElement[0].clientWidth < productListElement[0].scrollWidth\n    ) {\n      setPaddleShowing(true);\n    }\n  }, [performer]);\n  const scrollTo = (width?: number) => {\n    const e: HTMLElement = ref.current;\n    e.scroll({ left: width, behavior: 'smooth' });\n  };\n  return (\n    !searching\n    && success\n    && performer.products.length > 0 && (\n      <div className=\"product-carousel\">\n        <div className=\"product-header\">\n          <span className=\"shop-name\">{`${performer.username}'s Shop`}</span>\n          <Button type=\"primary\" onClick={() => { Router.push(`/products?username=${performer.username}`); }}>See all Items</Button>\n        </div>\n        <LeftCircleFilled\n          className=\"left-paddle paddle\"\n          hidden={!paddleShowing}\n          onClick={() => scrollTo(-ref.current.clientWidth)}\n        />\n        <div className=\"product-list\" ref={ref}>\n          {performer.products.map((id) => (\n            <Col xl={6} md={8} sm={10} xs={16} key={id} className=\"pad12-5\">\n              <ProductCard\n                key={id}\n                product={products[id]}\n                onHandlePurchase={purchaseProduct}\n              />\n            </Col>\n\n            // <PerformerProduct\n            //   product={products[id]}\n            //   key={id}\n            //   purchaseProduct={purchaseProduct}\n            // />\n          ))}\n        </div>\n        <RightCircleFilled\n          hidden={!paddleShowing}\n          className=\"right-paddle paddle\"\n          onClick={() => scrollTo(ref.current.clientWidth)}\n        />\n      </div>\n    )\n  );\n};\nProducts.defaultProps = {\n  purchaseProduct: null\n};\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}