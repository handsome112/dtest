{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/no-unescaped-entities */\nimport React, { PureComponent } from 'react';\nimport { Row, Col, message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport { getMembers, updateMemberStatus } from 'src/redux/studio/actions';\nimport StudioModelsSearch from '@components/studio/models-manager/search-online-status';\nimport StudioModelsTable from '@components/studio/models-manager/studio-models-table';\nimport { connect } from 'react-redux';\nimport './index.less';\nimport { getResponseError, getSearchData } from 'src/lib';\nimport { studioService } from '@services/studio.service';\n\nvar StudioModelsPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(StudioModelsPage, _PureComponent);\n\n  var _super = _createSuper(StudioModelsPage);\n\n  function StudioModelsPage(props) {\n    var _this;\n\n    _classCallCheck(this, StudioModelsPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      query: {\n        limit: 12,\n        offset: 0,\n        sortBy: 'createdAt',\n        sort: 'desc'\n      }\n    };\n    return _this;\n  }\n\n  _createClass(StudioModelsPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatchGetMembers = this.props.getMembers;\n      var query = this.state.query;\n      dispatchGetMembers(query);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevStates) {\n      var dispatchGetMembers = this.props.getMembers;\n      var query = this.state.query;\n\n      if (prevStates.query !== query) {\n        dispatchGetMembers(query);\n      }\n    }\n  }, {\n    key: \"handleTableChange\",\n    value: function handleTableChange(pagination, filters, sorter) {\n      var query = this.state.query;\n      this.setState({\n        query: getSearchData(pagination, filters, sorter, query)\n      });\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(data) {\n      var query = this.state.query;\n      this.setState({\n        query: _objectSpread(_objectSpread({}, query), data)\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(record) {\n        var dispatchUpdateMemberStatus, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatchUpdateMemberStatus = this.props.updateMemberStatus;\n                _context.next = 4;\n                return studioService.updateMemberStatus(record._id, record.status === 'active' ? 'inactive' : 'active');\n\n              case 4:\n                dispatchUpdateMemberStatus(record._id);\n                _context.next = 13;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                _context.next = 11;\n                return Promise.resolve(_context.t0);\n\n              case 11:\n                error = _context.sent;\n                message.error(getResponseError(error));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          searching = _this$props.searching,\n          total = _this$props.total,\n          placeholderAvatarUrl = _this$props.placeholderAvatarUrl;\n      var query = this.state.query;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Studio's Models\")), __jsx(\"div\", {\n        className: \"studio-models-background\"\n      }, __jsx(PageHeader, {\n        title: \"Models\",\n        extra: __jsx(Link, {\n          href: \"/studio/models/add\"\n        }, __jsx(\"a\", null, \"Add new member\"))\n      }), __jsx(\"div\", {\n        className: \"studio-models-box\"\n      }, __jsx(Row, null, __jsx(Col, {\n        xs: 24,\n        sm: 12\n      }, __jsx(StudioModelsSearch, {\n        searching: searching,\n        onSearch: this.onSearch.bind(this)\n      })), __jsx(Col, {\n        xs: 24,\n        sm: 12\n      })), __jsx(StudioModelsTable, {\n        dataSource: data,\n        loading: searching,\n        pagination: {\n          pageSize: query.limit,\n          current: Math.round(query.offset / query.limit) + 1,\n          total: total\n        },\n        update: this.update.bind(this),\n        onChange: this.handleTableChange.bind(this),\n        placeholderAvatarUrl: placeholderAvatarUrl\n      }))));\n    }\n  }]);\n\n  return StudioModelsPage;\n}(PureComponent);\n\n_defineProperty(StudioModelsPage, \"authenticate\", 'studio');\n\n_defineProperty(StudioModelsPage, \"layout\", 'primary');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread(_objectSpread({}, state.studio.members), {}, {\n    placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n  });\n};\n\nvar mapDispatchs = {\n  getMembers: getMembers,\n  updateMemberStatus: updateMemberStatus\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioModelsPage);","map":null,"metadata":{},"sourceType":"module"}