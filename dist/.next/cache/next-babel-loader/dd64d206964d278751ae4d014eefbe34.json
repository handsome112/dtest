{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from 'react';\nimport { Form, Input, Button, Row, Col } from 'antd';\nimport Countries from '@components/common/base/select/countries';\nimport './index.less';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 0\n    }\n  }\n};\n\nconst UserProfile = ({\n  firstName,\n  lastName,\n  onFinish,\n  email,\n  country,\n  phone,\n  city,\n  loading,\n  address,\n  zipcode,\n  state,\n  countries\n}) => {\n  const [form] = Form.useForm();\n  return __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    onFinish: onFinish,\n    name: \"contactSettingForm\",\n    className: \"performerEditForm\",\n    initialValues: {\n      country,\n      firstName,\n      lastName,\n      email,\n      phone,\n      city,\n      address,\n      zipcode,\n      state\n    },\n    layout: \"vertical\"\n  }), __jsx(Row, {\n    gutter: 25\n  }, __jsx(Col, {\n    sm: 12,\n    xs: 24\n  }, __jsx(Form.Item, {\n    name: \"firstName\",\n    label: \"First Name\",\n    rules: [{\n      pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n      message: 'Alphanumeric'\n    }, {\n      whitespace: true,\n      message: 'Please input your first name!'\n    }, {\n      required: true,\n      message: 'Please input your first name!'\n    }]\n  }, __jsx(Input, {\n    placeholder: \"First name\"\n  })), __jsx(Form.Item, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    rules: [{\n      pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n      message: 'Alphanumeric'\n    }, {\n      whitespace: true,\n      message: 'Please input your last name!'\n    }, {\n      required: true,\n      message: 'Please input your first name!'\n    }]\n  }, __jsx(Input, {\n    placeholder: \"Last name\"\n  })), __jsx(Form.Item, {\n    name: \"country\",\n    label: \"Country\",\n    rules: [{\n      required: true,\n      message: 'Please input your country!'\n    }]\n  }, __jsx(Countries, {\n    defaultValue: country,\n    countries: countries\n  })), __jsx(Form.Item, {\n    name: \"state\",\n    label: \"State Name\"\n  }, __jsx(Input, {\n    placeholder: \"samplestate\"\n  })), __jsx(Form.Item, {\n    name: \"city\",\n    label: \"City\"\n  }, __jsx(Input, {\n    placeholder: \"samplecity\"\n  }))), __jsx(Col, {\n    sm: 12,\n    xs: 24\n  }, __jsx(Form.Item, {\n    name: \"zipcode\",\n    label: \"Zip\"\n  }, __jsx(Input, {\n    placeholder: \"012345-678\"\n  })), __jsx(Form.Item, {\n    name: \"address\",\n    label: \"Address\"\n  }, __jsx(Input, {\n    placeholder: \"Address\"\n  })), __jsx(Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }]\n  }, __jsx(Input, {\n    placeholder: \"test@example.com\"\n  })), __jsx(Form.Item, {\n    name: \"phone\",\n    label: \"Mobile Phone\",\n    rules: [{\n      min: 8,\n      max: 14,\n      message: '8-14 digits'\n    }]\n  }, __jsx(Input, {\n    placeholder: \"+18000 0000\"\n  })))), __jsx(Form.Item, tailFormItemLayout, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading\n  }, \"Save Changes\")));\n};\n\nexport default UserProfile;","map":null,"metadata":{},"sourceType":"module"}