{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/user/performer-filter.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Row, Col, Drawer, Button, Menu, Space } from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport classnames from 'classnames';\nimport './performer-filter.less';\n\nconst PerformerFilter = ({\n  countries,\n  categories,\n  setFilter,\n  category,\n  country,\n  gender,\n  clearFilter\n}) => {\n  const [visible, setVisible] = React.useState(false);\n  const [selectedMenuKeys, setSelectedMenuKeys] = React.useState([]);\n  const [lastSelectedMenuKey, setLastSelectedMenuKey] = React.useState();\n\n  const onOpenChange = keys => {\n    const menuKeys = keys.filter(key => key !== lastSelectedMenuKey);\n    setSelectedMenuKeys(menuKeys);\n    setLastSelectedMenuKey(menuKeys[0]);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    align: \"middle\",\n    className: \"performer-filter\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    icon: __jsx(FilterOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }),\n    type: \"primary\",\n    onClick: () => setVisible(true),\n    className: \"mr-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Filter\"), __jsx(Space, {\n    className: \"ant-space-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Popular Filter:\"), __jsx(Button, {\n    onClick: clearFilter,\n    className: classnames(gender === '' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"All\"), __jsx(Button, {\n    onClick: () => setFilter('gender', gender === 'female' ? '' : 'female'),\n    className: classnames(gender === 'female' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Female\"), __jsx(Button, {\n    onClick: () => setFilter('gender', gender === 'transgender' ? '' : 'transgender'),\n    className: classnames(gender === 'transgender' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Transgender\"), __jsx(Button, {\n    onClick: () => setFilter('gender', gender === 'male' ? '' : 'male'),\n    className: classnames(gender === 'male' ? 'active' : ''),\n    type: \"dashed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Male\")))), __jsx(Drawer, {\n    visible: visible,\n    placement: \"left\",\n    onClose: () => setVisible(false),\n    title: __jsx(Row, {\n      justify: \"space-between\",\n      align: \"middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Filter by:\"), __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(Button, {\n      type: \"link\",\n      onClick: () => clearFilter(),\n      size: \"small\",\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, \"Clear Filter\"))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: ({\n      key\n    }) => setFilter('category', key),\n    onDeselect: () => setFilter('category', ''),\n    selectedKeys: [category],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.SubMenu, {\n    title: \"Category\",\n    key: \"category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, categories.length > 0 && categories.map(c => __jsx(Menu.Item, {\n    key: c._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, c.name)))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    onSelect: ({\n      key\n    }) => setFilter('gender', key),\n    onDeselect: () => setFilter('gender', ''),\n    selectedKeys: [gender],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.SubMenu, {\n    title: \"Gender\",\n    key: \"gender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(Menu.Item, {\n    key: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, \"Female\"), __jsx(Menu.Item, {\n    key: \"transgender\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Transgender\"), __jsx(Menu.Item, {\n    key: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Male\"))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: ({\n      key\n    }) => setFilter('country', key),\n    onDeselect: () => setFilter('country', ''),\n    selectedKeys: [country],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(Menu.SubMenu, {\n    title: \"Country\",\n    key: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, countries.length > 0 && countries.map(c => __jsx(Menu.Item, {\n    key: c.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, c.name))))));\n};\n\nPerformerFilter.defaultProps = {\n  countries: [],\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  country: ''\n};\nexport default PerformerFilter;","map":null,"metadata":{},"sourceType":"module"}