{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { flatten, omit } from 'lodash';\nimport { put, select, all } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { earningService, studioService, payoutRequestService } from '@services/index';\nimport { updateStudio, updateStudioSuccess, updateStudioFail, setUpdatingStudio, updateStudioPaymentInfo, updateStudioDirectDeposit, updateStudioBitpay, updateStudioPaxum, getMembers, getMembersSuccess, getMembersFail, getMembersSearching, getMembersCommissions, getMembersCommissionsSuccess, getMembersCommissionsFail, getMembersCommissionsSearching, getStudioEarning, getStudioEarningFail, getStudioEarningSuccess, setGettingStudioEarning, getStudioPayoutRequest, getStudioPayoutRequestFail, getStudioPayoutRequestSuccess, setGettingStudioPayoutRequest, getPerformerRequest, getPerformerRequestFail, getPerformerRequestSuccess, setGettingPerformerRequest, getStudioStats, getStudioStatsSuccess, getStudioStatsFail } from './actions';\nvar studioSagas = [{\n  on: updateStudio,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var updated, err;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return put(setUpdatingStudio());\n\n          case 3:\n            _context.next = 5;\n            return studioService.update(data.payload);\n\n          case 5:\n            updated = _context.sent;\n            _context.next = 8;\n            return put(updateStudioSuccess(updated.data));\n\n          case 8:\n            _context.next = 17;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 14;\n            return Promise.resolve(_context.t0);\n\n          case 14:\n            err = _context.sent;\n            _context.next = 17;\n            return put(updateStudioFail(err));\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateStudioPaymentInfo,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return put(setUpdatingStudio());\n\n          case 3:\n            _context2.next = 5;\n            return studioService.updatePaymentInfo(action.payload);\n\n          case 5:\n            resp = _context2.sent;\n            _context2.next = 8;\n            return put(updateStudioSuccess(resp.data));\n\n          case 8:\n            _context2.next = 17;\n            break;\n\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 14;\n            return Promise.resolve(_context2.t0);\n\n          case 14:\n            err = _context2.sent;\n            _context2.next = 17;\n            return put(updateStudioFail(err));\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateStudioDirectDeposit,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return put(setUpdatingStudio());\n\n          case 3:\n            _context3.next = 5;\n            return studioService.updateDirectDepost(action.payload);\n\n          case 5:\n            resp = _context3.sent;\n            _context3.next = 8;\n            return put(updateStudioSuccess(resp.data));\n\n          case 8:\n            _context3.next = 17;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.next = 14;\n            return Promise.resolve(_context3.t0);\n\n          case 14:\n            err = _context3.sent;\n            _context3.next = 17;\n            return put(updateStudioFail(err));\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateStudioBitpay,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return put(setUpdatingStudio());\n\n          case 3:\n            _context4.next = 5;\n            return studioService.updateBitpay(action.payload);\n\n          case 5:\n            resp = _context4.sent;\n            _context4.next = 8;\n            return put(updateStudioSuccess(resp.data));\n\n          case 8:\n            _context4.next = 17;\n            break;\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](0);\n            _context4.next = 14;\n            return Promise.resolve(_context4.t0);\n\n          case 14:\n            err = _context4.sent;\n            _context4.next = 17;\n            return put(updateStudioFail(err));\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateStudioPaxum,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return put(setUpdatingStudio());\n\n          case 3:\n            _context5.next = 5;\n            return studioService.updatePaxum(action.payload);\n\n          case 5:\n            resp = _context5.sent;\n            _context5.next = 8;\n            return put(updateStudioSuccess(resp.data));\n\n          case 8:\n            _context5.next = 17;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](0);\n            _context5.next = 14;\n            return Promise.resolve(_context5.t0);\n\n          case 14:\n            err = _context5.sent;\n            _context5.next = 17;\n            return put(updateStudioFail(err));\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getMembers,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return put(getMembersSearching());\n\n          case 3:\n            _context6.next = 5;\n            return studioService.getMembers(action.payload);\n\n          case 5:\n            resp = _context6.sent;\n            _context6.next = 8;\n            return put(getMembersSuccess(resp.data));\n\n          case 8:\n            _context6.next = 17;\n            break;\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](0);\n            _context6.next = 14;\n            return Promise.resolve(_context6.t0);\n\n          case 14:\n            err = _context6.sent;\n            _context6.next = 17;\n            return put(getMembersFail(err));\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getMembersCommissions,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return put(getMembersCommissionsSearching());\n\n          case 3:\n            _context7.next = 5;\n            return studioService.getMemberCommissions(action.payload);\n\n          case 5:\n            resp = _context7.sent;\n            _context7.next = 8;\n            return put(getMembersCommissionsSuccess(resp.data));\n\n          case 8:\n            _context7.next = 17;\n            break;\n\n          case 10:\n            _context7.prev = 10;\n            _context7.t0 = _context7[\"catch\"](0);\n            _context7.next = 14;\n            return Promise.resolve(_context7.t0);\n\n          case 14:\n            err = _context7.sent;\n            _context7.next = 17;\n            return put(getMembersCommissionsFail(err));\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getPerformerRequest,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return put(setGettingPerformerRequest());\n\n          case 3:\n            _context8.next = 5;\n            return studioService.getPerformerRequest(action.payload);\n\n          case 5:\n            resp = _context8.sent;\n            _context8.next = 8;\n            return put(getPerformerRequestSuccess(resp.data));\n\n          case 8:\n            _context8.next = 17;\n            break;\n\n          case 10:\n            _context8.prev = 10;\n            _context8.t0 = _context8[\"catch\"](0);\n            _context8.next = 14;\n            return Promise.resolve(_context8.t0);\n\n          case 14:\n            err = _context8.sent;\n            _context8.next = 17;\n            return put(getPerformerRequestFail(err));\n\n          case 17:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getStudioEarning,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var difDateQuery, earning, _action$payload, fromDate, toDate, query, _yield$all, _yield$all2, resp, stats, err;\n\n    return _regeneratorRuntime.wrap(function worker$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return put(setGettingStudioEarning());\n\n          case 3:\n            difDateQuery = false;\n            _context9.next = 6;\n            return select(function (state) {\n              return state.performer.earning;\n            });\n\n          case 6:\n            earning = _context9.sent;\n            _action$payload = action.payload, fromDate = _action$payload.fromDate, toDate = _action$payload.toDate;\n            query = omit(action.payload, ['fromDate', 'toDate']);\n\n            if (fromDate && toDate) {\n              query.fromDate = fromDate;\n              query.toDate = toDate;\n            }\n\n            if (earning.toDate !== toDate || earning.fromDate !== fromDate) difDateQuery = true;\n            _context9.next = 13;\n            return all([earningService.search(query, 'studio'), earning.stats && !difDateQuery ? earning.stats : earningService.stats(query, 'studio')]);\n\n          case 13:\n            _yield$all = _context9.sent;\n            _yield$all2 = _slicedToArray(_yield$all, 2);\n            resp = _yield$all2[0];\n            stats = _yield$all2[1];\n            _context9.next = 19;\n            return put(getStudioEarningSuccess(_objectSpread(_objectSpread({}, query), {}, {\n              stats: stats,\n              data: resp.data\n            })));\n\n          case 19:\n            _context9.next = 28;\n            break;\n\n          case 21:\n            _context9.prev = 21;\n            _context9.t0 = _context9[\"catch\"](0);\n            _context9.next = 25;\n            return Promise.resolve(_context9.t0);\n\n          case 25:\n            err = _context9.sent;\n            _context9.next = 28;\n            return put(getStudioEarningFail(err));\n\n          case 28:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, worker, null, [[0, 21]]);\n  })\n}, {\n  on: getStudioStats,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker() {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return studioService.stats();\n\n          case 3:\n            resp = _context10.sent;\n            _context10.next = 6;\n            return put(getStudioStatsSuccess(resp.data));\n\n          case 6:\n            _context10.next = 15;\n            break;\n\n          case 8:\n            _context10.prev = 8;\n            _context10.t0 = _context10[\"catch\"](0);\n            _context10.next = 12;\n            return Promise.resolve(_context10.t0);\n\n          case 12:\n            err = _context10.sent;\n            _context10.next = 15;\n            return put(getStudioStatsFail(err));\n\n          case 15:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: getStudioPayoutRequest,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return put(setGettingStudioPayoutRequest());\n\n          case 3:\n            _context11.next = 5;\n            return payoutRequestService.studioSearch(action.payload);\n\n          case 5:\n            resp = _context11.sent;\n            _context11.next = 8;\n            return put(getStudioPayoutRequestSuccess(resp.data));\n\n          case 8:\n            _context11.next = 17;\n            break;\n\n          case 10:\n            _context11.prev = 10;\n            _context11.t0 = _context11[\"catch\"](0);\n            _context11.next = 14;\n            return Promise.resolve(_context11.t0);\n\n          case 14:\n            err = _context11.sent;\n            _context11.next = 17;\n            return put(getStudioPayoutRequestFail(err));\n\n          case 17:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}];\nexport default flatten([createSagas(studioSagas)]);","map":null,"metadata":{},"sourceType":"module"}