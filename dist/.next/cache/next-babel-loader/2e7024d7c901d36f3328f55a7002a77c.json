{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport React, { PureComponent } from 'react';\nimport { postService } from '@services/post.service';\nimport { connect } from 'react-redux';\nimport Loader from '@components/common/base/loader';\nimport { getResponseError } from 'src/lib';\n\nclass PostDetail extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      post: null\n    };\n  }\n\n  static async getInitialProps({\n    ctx\n  }) {\n    const {\n      query\n    } = ctx;\n    return query;\n  }\n\n  async componentDidMount() {\n    this.getPost();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const {\n      id\n    } = this.props;\n\n    if (prevProps.id !== id) {\n      this.getPost();\n    }\n  }\n\n  async getPost() {\n    const {\n      id\n    } = this.props;\n\n    try {\n      this.setState({\n        fetching: true\n      });\n      const resp = await postService.findById(id);\n      this.setState({\n        post: resp.data\n      });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    } finally {\n      this.setState({\n        fetching: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      post,\n      fetching\n    } = this.state; // const { ui } = this.props;\n\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, post && post.title)), fetching && __jsx(Loader, {\n      spinning: true,\n      fullScreen: true\n    }), __jsx(\"div\", {\n      className: \"page-container\"\n    }, __jsx(PageHeader, {\n      title: post && post.title\n    }), __jsx(\"div\", {\n      className: \"page-content\" // eslint-disable-next-line react/no-danger\n      ,\n      dangerouslySetInnerHTML: {\n        __html: post && post.content\n      }\n    })));\n  }\n\n}\n\n_defineProperty(PostDetail, \"authenticate\", false);\n\nconst mapProps = state => ({\n  ui: state.ui\n});\n\nexport default connect(mapProps)(PostDetail);","map":null,"metadata":{},"sourceType":"module"}