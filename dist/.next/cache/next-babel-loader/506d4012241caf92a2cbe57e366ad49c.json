{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Head from 'next/head';\nimport PayoutRequestForm from '@components/payout-request/form';\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport { payoutRequestService } from 'src/services';\nimport nextCookie from 'next-cookies';\nimport Error from 'pages/_error';\nimport './index.less';\n\nclass PayoutRequestCreatePage extends React.PureComponent {\n  static async getInitialProps({\n    ctx\n  }) {\n    try {\n      const {\n        query: {\n          data,\n          id\n        }\n      } = ctx;\n\n      if (false && data) {\n        return {\n          payout: JSON.parse(data)\n        };\n      }\n\n      const {\n        token\n      } = nextCookie(ctx);\n      const resp = await payoutRequestService.detail(id, {\n        Authorization: token\n      }, 'studio');\n      return {\n        payout: resp.data\n      };\n    } catch {\n      return {};\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitting: false,\n      success: false\n    };\n  }\n\n  async submit(data) {\n    if (!data.date[0] || !data.date[1]) return;\n    const {\n      payout\n    } = this.props;\n\n    try {\n      this.setState({\n        submitting: true\n      });\n      const body = {\n        paymentAccountType: data.paymentAccountType,\n        requestNote: data.requestNote,\n        fromDate: data.date[0],\n        toDate: data.date[1]\n      };\n      await payoutRequestService.update(payout._id, body, 'studio');\n      message.success('Success!');\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(error);\n    } finally {\n      this.setState({\n        submitting: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      payout\n    } = this.props;\n    const {\n      submitting,\n      success\n    } = this.state;\n    if (!payout) return __jsx(Error, {\n      statusCode: 404\n    });\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Payout Request\")), success && __jsx(\"div\", {\n      className: \"payout-request-page\"\n    }, __jsx(PageHeader, {\n      title: \"Update a Payout Request\"\n    }), __jsx(PayoutRequestForm, {\n      payout: payout,\n      submit: this.submit.bind(this),\n      submitting: submitting\n    })));\n  }\n\n}\n\n_defineProperty(PayoutRequestCreatePage, \"layout\", 'primary');\n\n_defineProperty(PayoutRequestCreatePage, \"authenticate\", true);\n\nexport default PayoutRequestCreatePage;","map":null,"metadata":{},"sourceType":"module"}