{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-nested-ternary */\nimport { Row, Col, message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport Loader from 'src/components/common/base/loader';\nimport TokenCard from 'src/components/common/base/token-card';\nimport React, { PureComponent } from 'react';\nimport './index.less';\nimport { getResponseError } from 'src/lib/utils';\nimport { tokenPackageService } from '@services/token-package.service';\nimport { buyTokenSuccess } from 'src/redux/user/actions';\nimport { connect } from 'react-redux';\nimport { isUrl } from '@lib/string';\n\nclass UserTokensPage extends PureComponent {\n  static getInitialProps({\n    ctx\n  }) {\n    const {\n      query\n    } = ctx;\n    return {\n      action: query.action\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tokens: [],\n      fetching: false,\n      buying: null\n    };\n  }\n\n  componentDidMount() {\n    this.getTokens();\n  }\n\n  async getTokens() {\n    try {\n      this.setState({\n        fetching: true\n      });\n      const resp = await tokenPackageService.search({\n        sortBy: 'ordering',\n        sort: 'asc'\n      });\n      this.setState({\n        tokens: resp.data.data || []\n      });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    } finally {\n      this.setState({\n        fetching: false\n      });\n    }\n  }\n\n  async buyToken(tokenPackage) {\n    try {\n      this.setState({\n        buying: tokenPackage._id\n      });\n      const resp = await tokenPackageService.buyTokens(tokenPackage._id);\n\n      if (resp.data) {\n        if (isUrl(resp.data.paymentUrl)) {\n          window.open(resp.data.paymentUrl);\n        } // message.success('Buy token success');\n        // this.props.buyTokenSuccess(tokenPackage.tokens);\n\n      }\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    } finally {\n      this.setState({\n        buying: null\n      });\n    }\n  }\n\n  render() {\n    const {\n      fetching,\n      tokens,\n      buying\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Funds - Tokens\")), __jsx(\"div\", {\n      className: \"funds-tokens-box\"\n    }, __jsx(PageHeader, {\n      title: \"Buy More Tokens\"\n    }), __jsx(\"div\", {\n      className: \"tokens-section\"\n    }, __jsx(\"div\", {\n      className: \"tokens-card\"\n    }, __jsx(Row, null, fetching ? __jsx(Loader, null) : tokens && tokens.length ? tokens.map(item => __jsx(Col, {\n      xs: 12,\n      md: 8,\n      xl: 6,\n      xxl: 4,\n      key: item._id\n    }, __jsx(TokenCard, {\n      name: item.name,\n      token: item.tokens,\n      price: item.price,\n      onBuyToken: () => this.buyToken(item),\n      buying: item._id === buying\n    }))) : 'There is no data')))));\n  }\n\n}\n\n_defineProperty(UserTokensPage, \"authenticate\", true);\n\n_defineProperty(UserTokensPage, \"layout\", 'primary');\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatch = {\n  buyTokenSuccess\n};\nexport default connect(mapStateToProps, mapDispatch)(UserTokensPage);","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/pages/account/user/funds-tokens/index.tsx"],"names":["Row","Col","message","PageHeader","Head","Loader","TokenCard","React","PureComponent","getResponseError","tokenPackageService","buyTokenSuccess","connect","isUrl","UserTokensPage","getInitialProps","ctx","query","action","constructor","props","state","tokens","fetching","buying","componentDidMount","getTokens","setState","resp","search","sortBy","sort","data","e","error","Promise","resolve","buyToken","tokenPackage","_id","buyTokens","paymentUrl","window","open","render","length","map","item","name","price","mapStateToProps","mapDispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\nimport {\n  Row, Col, message\n} from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport Loader from 'src/components/common/base/loader';\nimport TokenCard from 'src/components/common/base/token-card';\nimport React, { PureComponent } from 'react';\nimport './index.less';\nimport { getResponseError } from 'src/lib/utils';\nimport { tokenPackageService } from '@services/token-package.service';\nimport { ITokenPackage } from 'src/interfaces';\nimport { buyTokenSuccess } from 'src/redux/user/actions';\nimport { connect } from 'react-redux';\nimport { isUrl } from '@lib/string';\n\ninterface IProps {\n  buyTokenSuccess: Function;\n}\ninterface IStates {\n  tokens: ITokenPackage[];\n  fetching: boolean;\n  buying: string;\n}\n\nclass UserTokensPage extends PureComponent<IProps, IStates> {\n  static authenticate = true;\n\n  static layout = 'primary';\n\n  static getInitialProps({ ctx }) {\n    const { query } = ctx;\n    return {\n      action: query.action\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      tokens: [],\n      fetching: false,\n      buying: null\n    };\n  }\n\n  componentDidMount() {\n    this.getTokens();\n  }\n\n  async getTokens() {\n    try {\n      this.setState({ fetching: true });\n      const resp = await tokenPackageService.search({\n        sortBy: 'ordering',\n        sort: 'asc'\n      });\n      this.setState({ tokens: resp.data.data || [] });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    } finally {\n      this.setState({ fetching: false });\n    }\n  }\n\n  async buyToken(tokenPackage: ITokenPackage) {\n    try {\n      this.setState({ buying: tokenPackage._id });\n      const resp = await tokenPackageService.buyTokens(tokenPackage._id);\n      if (resp.data) {\n        if (isUrl(resp.data.paymentUrl)) {\n          window.open(resp.data.paymentUrl);\n        }\n        // message.success('Buy token success');\n        // this.props.buyTokenSuccess(tokenPackage.tokens);\n      }\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    } finally {\n      this.setState({ buying: null });\n    }\n  }\n\n  render() {\n    const { fetching, tokens, buying } = this.state;\n    return (\n      <>\n        <Head>\n          <title>Funds - Tokens</title>\n        </Head>\n        <div className=\"funds-tokens-box\">\n          <PageHeader title=\"Buy More Tokens\" />\n          <div className=\"tokens-section\">\n            <div className=\"tokens-card\">\n              <Row>\n                {fetching ? (\n                  <Loader />\n                ) : tokens && tokens.length ? (\n                  tokens.map((item) => (\n                    <Col xs={12} md={8} xl={6} xxl={4} key={item._id}>\n                      <TokenCard\n                        name={item.name}\n                        token={item.tokens}\n                        price={item.price}\n                        onBuyToken={() => this.buyToken(item)}\n                        buying={item._id === buying}\n                      />\n                    </Col>\n                  ))\n                ) : (\n                  'There is no data'\n                )}\n              </Row>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = () => ({});\nconst mapDispatch = { buyTokenSuccess };\nexport default connect(mapStateToProps, mapDispatch)(UserTokensPage);\n"]},"metadata":{},"sourceType":"module"}