{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/account/user/purchased-video/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\nimport { Row, Col, message, Pagination } from 'antd';\nimport Head from 'next/head';\nimport React, { PureComponent, createRef } from 'react';\nimport PurchasedVideoCard from 'src/components/videos/purchased-video-card';\nimport { videoService } from 'src/services';\nimport PopupVideoDetail from 'src/components/videos/popup-video';\nimport { getResponseError } from 'src/lib';\nimport PageHeader from '@components/common/layout/page-header';\nimport Loader from '@components/common/base/loader';\n\nclass PurchasedVideoPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"popupRef\", /*#__PURE__*/createRef());\n\n    this.state = {\n      limit: 12,\n      offset: 0,\n      transactions: [],\n      loading: false,\n      success: false,\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  async loadData() {\n    const {\n      limit,\n      offset\n    } = this.state;\n\n    try {\n      this.setState({\n        loading: true\n      });\n      const resp = await videoService.purchased({\n        limit,\n        offset\n      });\n      this.setState({\n        transactions: resp.data.data,\n        success: true,\n        total: resp.data.total\n      });\n    } catch (error) {\n      this.showError(error);\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  async pageChange(page) {\n    const {\n      limit\n    } = this.state;\n    await this.setState({\n      offset: (page - 1) * limit\n    });\n    this.loadData();\n  }\n\n  async showError(e) {\n    const err = await Promise.resolve(e);\n    message.error(getResponseError(err));\n  }\n\n  async playVideo(videoId) {\n    var _video$data, _video$data$video, _video$data2, _video$data2$video;\n\n    const video = await videoService.userFindVideoById(videoId);\n    this.popupRef.showModalBuyAssets((_video$data = video.data) === null || _video$data === void 0 ? void 0 : (_video$data$video = _video$data.video) === null || _video$data$video === void 0 ? void 0 : _video$data$video.url);\n\n    if ((_video$data2 = video.data) !== null && _video$data2 !== void 0 && (_video$data2$video = _video$data2.video) !== null && _video$data2$video !== void 0 && _video$data2$video.url) {\n      videoService.increaseView(videoId);\n    }\n\n    return true;\n  }\n\n  render() {\n    const {\n      transactions,\n      success,\n      total,\n      limit,\n      loading\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, \"My Purchased Videos\")), __jsx(\"div\", {\n      className: \"main-profile-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, __jsx(PageHeader, {\n      title: \"Purchased Videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"purchased-videos-page pad40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, loading && __jsx(Loader, {\n      spinning: true,\n      fullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), success && transactions.length > 0 ? __jsx(React.Fragment, null, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, transactions.map(transaction => __jsx(Col, {\n      lg: 6,\n      md: 8,\n      sm: 12,\n      xs: 24,\n      key: transaction._id,\n      style: {\n        padding: '0 10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, __jsx(PurchasedVideoCard, {\n      video: transaction.targetInfo,\n      performer: transaction.sellerInfo,\n      onClick: () => this.playVideo(transaction.targetId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    }))), total > limit && __jsx(Col, {\n      sm: 24,\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, __jsx(Pagination, {\n      onChange: this.pageChange.bind(this),\n      defaultCurrent: 1,\n      pageSize: limit,\n      total: total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })))) : __jsx(\"div\", {\n      className: \"pad20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, \"You have not purchased any videos yet.\"))), __jsx(\"div\", {\n      className: \"popup-video\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, __jsx(PopupVideoDetail, {\n      ref: ref => this.popupRef = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\n_defineProperty(PurchasedVideoPage, \"authenticate\", true);\n\n_defineProperty(PurchasedVideoPage, \"layout\", 'primary');\n\nexport default PurchasedVideoPage;","map":null,"metadata":{},"sourceType":"module"}