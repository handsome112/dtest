{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/streaming/tip/content.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef } from 'react';\nimport { Alert, InputNumber, Radio, Space } from 'antd';\nimport './content.less';\nconst tokens = [20, 50, 100, 200];\nexport default class SendTipContent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"inputNumberRef\", void 0);\n\n    this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 1\n    };\n  }\n\n  componentDidMount() {\n    this.inputNumberRef = /*#__PURE__*/createRef();\n  }\n\n  onRadioChange(e) {\n    const {\n      setDisableOk\n    } = this.props;\n    setDisableOk(false);\n    this.setState({\n      radioValue: e.target.value\n    });\n    if (e.target.value > 0) this.setState({\n      token: e.target.value\n    });\n  }\n\n  onInputChange(value) {\n    const {\n      setDisableOk\n    } = this.props;\n    setDisableOk(false);\n\n    if (typeof value !== 'number') {\n      return;\n    }\n\n    if (value <= 0 || value % 1 !== 0) {\n      setDisableOk(true);\n      this.setState({\n        errorMessage: 'Token must be positive interger number!'\n      });\n      return;\n    }\n\n    this.setState({\n      token: value,\n      errorMessage: ''\n    });\n  }\n\n  getValueToken() {\n    const {\n      token\n    } = this.state;\n    return token;\n  }\n\n  render() {\n    const {\n      radioValue,\n      token,\n      errorMessage\n    } = this.state;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Tipping A Model Is Simple!\"), __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"How Many Tokens Would You Like To Tip?\"), errorMessage && __jsx(Alert, {\n      type: \"error\",\n      message: errorMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 26\n      }\n    }), __jsx(Radio.Group, {\n      value: radioValue,\n      defaultValue: radioValue,\n      onChange: this.onRadioChange.bind(this),\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, tokens.map(v => __jsx(Radio, {\n      value: v,\n      key: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, __jsx(Space, {\n      className: \"token-radio\",\n      align: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, `${v} Tokens`), __jsx(\"span\", {\n      className: \"tip-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, `Tip The Model ${v} Tokens!`)))), __jsx(Radio, {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(Space, {\n      className: \"token-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Custom Amount\"), __jsx(InputNumber, {\n      className: \"amount\",\n      ref: this.inputNumberRef,\n      onFocus: () => this.setState({\n        radioValue: -1\n      }),\n      type: \"number\",\n      min: 1,\n      max: 1000,\n      step: 10,\n      placeholder: \"Enter Amount\",\n      onChange: this.onInputChange.bind(this),\n      value: token,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}