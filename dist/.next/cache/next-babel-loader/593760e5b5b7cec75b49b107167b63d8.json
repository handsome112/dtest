{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/stream-chat/Compose.tsx\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { sendStreamMessage } from '@redux/stream-chat/actions';\nimport { Input, message } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport Emotions from './emotions';\nimport './Compose.less';\n\nclass Compose extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"uploadRef\", void 0);\n\n    _defineProperty(this, \"_input\", void 0);\n\n    _defineProperty(this, \"state\", {\n      text: ''\n    });\n\n    _defineProperty(this, \"onKeyDown\", evt => {\n      if (evt.keyCode === 13) {\n        this.send();\n      }\n    });\n\n    _defineProperty(this, \"onChange\", evt => {\n      this.setText(evt.target.value);\n    });\n\n    _defineProperty(this, \"onEmojiClick\", emojiObject => {\n      const {\n        text\n      } = this.state;\n      this.setText(text + emojiObject.emoji);\n    });\n\n    this.uploadRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (!this.uploadRef) this.uploadRef = /*#__PURE__*/React.createRef();\n    if (!this._input) this._input = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate(previousProps) {\n    const {\n      sendMessage\n    } = this.props;\n\n    if (sendMessage.success !== previousProps.sendMessage.success) {\n      this.setText('');\n      this._input && this._input.focus();\n    }\n  }\n\n  setText(text) {\n    this.setState({\n      text\n    });\n  }\n\n  send() {\n    const {\n      text\n    } = this.state;\n    const {\n      loggedIn\n    } = this.props;\n\n    if (!loggedIn) {\n      message.error('Please login');\n      return;\n    }\n\n    if (!text) {\n      return;\n    }\n\n    const {\n      conversation,\n      isPublic,\n      sendStreamMessage: dispatchSendStreamMessage\n    } = this.props;\n    const {\n      _id,\n      type\n    } = conversation;\n    dispatchSendStreamMessage({\n      conversationId: _id,\n      data: {\n        text\n      },\n      type,\n      isPublic\n    });\n  }\n\n  render() {\n    const {\n      loggedIn\n    } = this.props;\n    const {\n      text\n    } = this.state;\n    const {\n      sendMessage,\n      conversation\n    } = this.props;\n    if (!this.uploadRef) this.uploadRef = /*#__PURE__*/React.createRef();\n    if (!this._input) this._input = /*#__PURE__*/React.createRef();\n    return __jsx(\"div\", {\n      className: \"compose\",\n      hidden: !loggedIn || !conversation._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, __jsx(Input, {\n      value: text,\n      className: \"compose-input\",\n      placeholder: \"Enter message here.\",\n      onKeyDown: this.onKeyDown,\n      onChange: this.onChange,\n      disabled: sendMessage.sending,\n      ref: c => this._input = c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"grp-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(SendOutlined, {\n      onClick: this.send.bind(this),\n      style: {\n        fontSize: '25px',\n        marginRight: '10px',\n        color: '#fe26b3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"grp-emotions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: \"/emotion-ico.png\",\n      width: \"25px\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), __jsx(Emotions, {\n      onEmojiClick: this.onEmojiClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStates = state => ({\n  loggedIn: state.auth.loggedIn,\n  sendMessage: state.streamMessage.sendMessage\n});\n\nconst mapDispatch = {\n  sendStreamMessage\n};\nexport default connect(mapStates, mapDispatch)(Compose);","map":null,"metadata":{},"sourceType":"module"}