{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Dropdown, Menu, message } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { getResponseError } from '@lib/utils';\nimport { performerService } from '@services/perfomer.service';\n\nvar StreamingChatUsers = function StreamingChatUsers(_ref) {\n  var loggedIn = _ref.loggedIn,\n      members = _ref.members,\n      currentPerformer = _ref.currentPerformer,\n      placeholderAvatarUrl = _ref.placeholderAvatarUrl;\n  var blockUser = React.useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var key, error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              key = _ref2.key;\n\n              if (window.confirm('Are you sure to block this user?')) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return performerService.geoBlock({\n                userIds: [key]\n              });\n\n            case 6:\n              _context.next = 14;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](3);\n              _context.next = 12;\n              return Promise.resolve(_context.t0);\n\n            case 12:\n              error = _context.sent;\n              message.error(getResponseError(error));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [members]);\n  return __jsx(\"div\", {\n    className: \"conversation-users\"\n  }, __jsx(\"div\", {\n    className: \"users\"\n  }, members.length > 0 && members.map(function (m) {\n    return __jsx(\"div\", {\n      className: \"user\",\n      key: m._id\n    }, loggedIn && currentPerformer && currentPerformer._id ? __jsx(Dropdown, {\n      overlay: __jsx(Menu, null, __jsx(Menu.Item, {\n        onClick: blockUser,\n        key: m._id\n      }, __jsx(\"span\", null, __jsx(StopOutlined, {\n        size: 16\n      }), ' ', \"Block this user\"))),\n      placement: \"bottomLeft\",\n      trigger: ['hover', 'click']\n    }, __jsx(\"span\", {\n      className: \"username\"\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || placeholderAvatarUrl,\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      }\n    }), m.username, ' ', __jsx(DownOutlined, null))) : __jsx(\"span\", {\n      className: \"username\"\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || '/default-user-icon.png',\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      }\n    }), m.username));\n  })));\n};\n\nvar mapStates = function mapStates(state) {\n  return {\n    placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n  };\n};\n\nexport default connect(mapStates)(StreamingChatUsers);","map":null,"metadata":{},"sourceType":"module"}