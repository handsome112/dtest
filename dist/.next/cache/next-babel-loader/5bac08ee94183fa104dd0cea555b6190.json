{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable react/no-array-index-key */\nimport React, { PureComponent } from 'react';\nimport { Menu } from 'antd';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\n\nvar SiderMenu = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SiderMenu, _PureComponent);\n\n  var _super = _createSuper(SiderMenu);\n\n  function SiderMenu() {\n    var _this;\n\n    _classCallCheck(this, SiderMenu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedKeys: ['dashboard'],\n      openKeys: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onOpenChange\", function (openKeys) {\n      var menus = _this.props.menus;\n      var rootSubmenuKeys = menus.filter(function (_) {\n        return !_.menuParentId;\n      }).map(function (_) {\n        return _.id;\n      });\n      var latestOpenKey = openKeys.find(function (key) {\n        return openKeys.indexOf(key) === -1;\n      });\n      var newOpenKeys = openKeys;\n\n      if (rootSubmenuKeys.indexOf(latestOpenKey) !== -1) {\n        newOpenKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n\n      _this.setState({\n        openKeys: newOpenKeys\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"generateMenus\", function (data) {\n      var totalNotReadMessage = _this.props.totalNotReadMessage;\n      return data.map(function (item, index) {\n        if (item.children) {\n          return __jsx(Menu.SubMenu, {\n            icon: item.icon,\n            key: \"sub-\".concat(index),\n            title: __jsx(React.Fragment, null, __jsx(\"span\", null, item.name))\n          }, _this.generateMenus(item.children));\n        }\n\n        return (// <h1>Be happy!</h1>\n          __jsx(Menu.Item, {\n            key: item.id,\n            icon: item.icon\n          }, __jsx(Link, {\n            href: item.route,\n            as: item.as || item.route\n          }, __jsx(\"a\", null, item.name, ' ', item.id === 'messages' && \"(\".concat(totalNotReadMessage, \")\"))))\n        );\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(SiderMenu, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Router.events.on('routeChangeStart', this.routerChange.bind(this));\n      var menus = this.props.menus;\n      var selectedKeys = true ? this.getSelectedKeys(menus) : [];\n      this.setSelectedKeys(selectedKeys);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          menus = _this$props.menus,\n          router = _this$props.router;\n\n      if (router.pathname !== prevProps.router.pathname) {\n        var selectedKeys = true ? this.getSelectedKeys(menus) : [];\n        this.setSelectedKeys(selectedKeys);\n      }\n    }\n  }, {\n    key: \"onSelect\",\n    value: function onSelect(_ref) {\n      var key = _ref.key;\n      var menus = this.props.menus;\n      var flatTree = this.flatten(menus);\n      var selectedKeys = flatTree.filter(function (m) {\n        return m.id === key;\n      }).map(function (m) {\n        return m.id;\n      });\n      this.setSelectedKeys(selectedKeys);\n    }\n  }, {\n    key: \"getSelectedKeys\",\n    value: function getSelectedKeys(menus) {\n      var pathname = true ? Router.pathname : '';\n      var flatTree = this.flatten(menus);\n      return flatTree // .filter((m) => pathname.includes(m.as || m.route))\n      .filter(function (m) {\n        return pathname === m.route || pathname === m.as;\n      }).map(function (m) {\n        return m.id;\n      });\n    }\n  }, {\n    key: \"setSelectedKeys\",\n    value: function setSelectedKeys(selectedKeys) {\n      this.setState({\n        selectedKeys: selectedKeys\n      });\n    }\n  }, {\n    key: \"flatten\",\n    value: function flatten(menus) {\n      var _this2 = this;\n\n      var flattenMenus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      menus.forEach(function (m) {\n        if (m.children) {\n          _this2.flatten(m.children, flattenMenus);\n        }\n\n        var tmp = _objectSpread({}, m);\n\n        delete tmp.children;\n        flattenMenus.push(tmp);\n      });\n      return flattenMenus;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          theme = _this$props2.theme,\n          menus = _this$props2.menus,\n          collapsed = _this$props2.collapsed,\n          onClick = _this$props2.onClick;\n      var _this$state = this.state,\n          selectedKeys = _this$state.selectedKeys,\n          openKeys = _this$state.openKeys;\n      var menuProps = collapsed ? {} : {\n        openKeys: openKeys\n      };\n      return __jsx(Menu, _extends({\n        key: \"profile-menu\",\n        mode: \"inline\",\n        theme: theme,\n        selectedKeys: selectedKeys,\n        onOpenChange: this.onOpenChange.bind(this),\n        onSelect: this.onSelect.bind(this),\n        onClick: onClick // onClick={\n        //   isMobile\n        //     ? () => {\n        //         onCollapseChange(true);\n        //       }\n        //     : undefined\n        // }\n\n      }, menuProps), this.generateMenus(menus));\n    }\n  }]);\n\n  return SiderMenu;\n}(PureComponent);\n\nexport default withRouter(SiderMenu);","map":null,"metadata":{},"sourceType":"module"}