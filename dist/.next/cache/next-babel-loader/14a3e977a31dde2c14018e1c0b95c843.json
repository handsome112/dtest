{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { APIRequest } from './api-request';\nexport class StudioService extends APIRequest {\n  me(headers) {\n    return this.get('/studio/me', headers);\n  }\n\n  update(payload) {\n    return this.put('/studio/update', payload);\n  }\n\n  updatePaymentInfo(payload) {\n    return this.post('/studio/bank-transfer/update', payload);\n  }\n\n  updateDirectDepost(payload) {\n    return this.post('/studio/direct-deposit/update', payload);\n  }\n\n  updatePaxum(payload) {\n    return this.post('/studio/paxum/update', payload);\n  }\n\n  updateBitpay(payload) {\n    return this.post('/studio/bitpay/update', payload);\n  }\n\n  getCommission() {\n    return this.get('/settings/studio/commission');\n  }\n\n  addModel(payload) {\n    return this.post('/studio/members', payload);\n  }\n\n  getMembers(params) {\n    return this.get(this.buildUrl('/studio/members', params));\n  }\n\n  getMemberCommissions(params) {\n    return this.get(this.buildUrl('/studio/commission', params));\n  }\n\n  updateMemberCommission(id, commission) {\n    return this.put(`/studio/commission/member/${id}`, {\n      commission\n    });\n  }\n\n  getPerformerRequest(params) {\n    return this.get(this.buildUrl('/payout-requests/studio/performer-request', params));\n  }\n\n  updateStatusPerformerRequest(id, payload) {\n    return this.put(`/payout-requests/studio/update/${id}`, _objectSpread({}, payload));\n  }\n\n  updateMemberStatus(id, status) {\n    return this.post(`/studio/members/${id}/${status}`);\n  }\n\n  stats() {\n    return this.get('/studio/stats');\n  }\n\n  getDocumentsUploadUrl() {\n    return `${process.env.NEXT_PUBLIC_API_ENDPOINT}/studio/documents/upload`;\n  }\n\n}\nexport const studioService = new StudioService();","map":null,"metadata":{},"sourceType":"module"}