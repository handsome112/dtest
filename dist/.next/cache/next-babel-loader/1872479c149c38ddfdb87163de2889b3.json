{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { PureComponent } from 'react';\nimport { Tag } from 'antd';\nimport './index.less';\nimport { defaultColor } from 'src/lib';\nimport NumberFormat from '@components/common/layout/numberformat';\nexport default class ProductCard extends PureComponent {\n  render() {\n    const {\n      product,\n      onHandlePurchase\n    } = this.props;\n\n    const generateToken = token => token && __jsx(Tag, {\n      color: token > 0 ? defaultColor.primaryColor : '#ccc'\n    }, token > 0 ? __jsx(NumberFormat, {\n      value: token,\n      suffix: \" tokens\"\n    }) : 'FREE');\n\n    return __jsx(\"div\", {\n      className: \"product-card\",\n      \"aria-hidden\": true,\n      onClick: () => onHandlePurchase(product)\n    }, __jsx(\"div\", {\n      className: \"product-thumb\"\n    }, product.type === 'physical' && __jsx(\"div\", {\n      className: \"stock ant-tag ant-tag-has-color\"\n    }, \"Stock:\", product.stock), __jsx(\"span\", {\n      className: \"value\"\n    }, generateToken(product.token)), product.type === 'digital' && __jsx(\"span\", {\n      className: \"type-digital\"\n    }, \"Digital\"), product.type === 'physical' && __jsx(\"span\", {\n      className: \"type-digital\"\n    }, \"Physical\"), __jsx(\"div\", {\n      className: \"hover-pointer\"\n    }, __jsx(\"img\", {\n      alt: \"\",\n      src: (product === null || product === void 0 ? void 0 : product.image) || '/no-image.jpg'\n    }))), __jsx(\"div\", {\n      className: \"product-name\"\n    }, product.name));\n  }\n\n}","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/products/product-card.tsx"],"names":["React","PureComponent","Tag","defaultColor","NumberFormat","ProductCard","render","product","onHandlePurchase","props","generateToken","token","primaryColor","type","stock","image","name"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,GAAT,QAAoB,MAApB;AACA,OAAO,cAAP;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AAOA,eAAe,MAAMC,WAAN,SAA0BJ,aAA1B,CAAgD;AAC7DK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAgC,KAAKC,KAA3C;;AACA,UAAMC,aAAa,GAAIC,KAAD,IAAmBA,KAAK,IAC9C,MAAC,GAAD;AAAK,MAAA,KAAK,EAAEA,KAAK,GAAG,CAAR,GAAYR,YAAY,CAACS,YAAzB,GAAwC;AAApD,OACGD,KAAK,GAAG,CAAR,GAAY,MAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAArB;AAA4B,MAAA,MAAM,EAAC;AAAnC,MAAZ,GAA8D,MADjE,CADA;;AAKA,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,yBAA9B;AAA0C,MAAA,OAAO,EAAE,MAAMH,gBAAgB,CAACD,OAAD;AAAzE,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGA,OAAO,CAACM,IAAR,KAAiB,UAAjB,IACC;AAAK,MAAA,SAAS,EAAC;AAAf,iBAEGN,OAAO,CAACO,KAFX,CAFJ,EAOE;AAAM,MAAA,SAAS,EAAC;AAAhB,OAAyBJ,aAAa,CAACH,OAAO,CAACI,KAAT,CAAtC,CAPF,EAQGJ,OAAO,CAACM,IAAR,KAAiB,SAAjB,IAA8B;AAAM,MAAA,SAAS,EAAC;AAAhB,iBARjC,EASGN,OAAO,CAACM,IAAR,KAAiB,UAAjB,IAA+B;AAAM,MAAA,SAAS,EAAC;AAAhB,kBATlC,EAUE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAE,CAAAN,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,KAAT,KAAkB;AAAnC,MADF,CAVF,CADF,EAeE;AAAK,MAAA,SAAS,EAAC;AAAf,OAA+BR,OAAO,CAACS,IAAvC,CAfF,CADF;AAmBD;;AA3B4D","sourcesContent":["import { IProduct } from 'src/interfaces';\nimport React, { PureComponent } from 'react';\nimport { Tag } from 'antd';\nimport './index.less';\nimport { defaultColor } from 'src/lib';\nimport NumberFormat from '@components/common/layout/numberformat';\n\ninterface IProps {\n  product: IProduct;\n  onHandlePurchase: Function;\n}\n\nexport default class ProductCard extends PureComponent<IProps> {\n  render() {\n    const { product, onHandlePurchase } = this.props;\n    const generateToken = (token: number) => token && (\n    <Tag color={token > 0 ? defaultColor.primaryColor : '#ccc'}>\n      {token > 0 ? <NumberFormat value={token} suffix=\" tokens\" /> : 'FREE'}\n    </Tag>\n    );\n    return (\n      <div className=\"product-card\" aria-hidden onClick={() => onHandlePurchase(product)}>\n        <div className=\"product-thumb\">\n          {product.type === 'physical' && (\n            <div className=\"stock ant-tag ant-tag-has-color\">\n              Stock:\n              {product.stock}\n            </div>\n          )}\n          <span className=\"value\">{generateToken(product.token)}</span>\n          {product.type === 'digital' && <span className=\"type-digital\">Digital</span>}\n          {product.type === 'physical' && <span className=\"type-digital\">Physical</span>}\n          <div className=\"hover-pointer\">\n            <img alt=\"\" src={product?.image || '/no-image.jpg'} />\n          </div>\n        </div>\n        <div className=\"product-name\">{product.name}</div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}