{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/var/www/dtest.live/src/components/common/layout/header.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { SettingOutlined, HeartOutlined, MessageOutlined, UserOutlined, LogoutOutlined, SearchOutlined, CloseOutlined, BellOutlined } from '@ant-design/icons';\nimport { FundsIcon } from '@components/common/base/icons';\nimport { Layout, Menu, Avatar, Input, Button, Dropdown, Badge, Card, message, Tooltip } from 'antd';\nimport { messageService } from 'src/services/index';\nimport { createSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport Link from 'next/link';\nimport Router, { withRouter } from 'next/router';\nimport { logout } from '@redux/auth/actions';\nimport { getPerformerCategories } from '@redux/performer/actions';\nimport { getCountries } from '@redux/settings/actions';\nimport { SocketContext } from 'src/socket';\nimport { addPrivateRequest } from '@redux/streaming/actions';\nimport { formatDate } from 'src/lib';\nimport { getStudioStats } from 'src/redux/studio/actions';\nimport { countNotReadMessage } from '@redux/message/actions';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport './header.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport LeftHeaderContent from './left-header-content';\n\nvar roundBalance = function roundBalance(balance) {\n  if (balance < 10000) return Math.round(balance);\n  return '9999+';\n};\n\nvar EVENT = {\n  RECEIVED_PRIVATE_CHAT_REQUEST: 'private-chat-request',\n  NOTIFY_READ_MESSAGE: 'nofify_read_messages_in_conversation',\n  TIPPED: 'tipped'\n};\n\nvar Header = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Header, _PureComponent);\n\n  var _super = _createSuper(Header);\n\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_audio\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMessage\", function (event) {\n      var dispatchCountNotReadMessage = _this.props.countNotReadMessage;\n      event && dispatchCountNotReadMessage(event.total);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePrivateChat\", function (data) {\n      var _this$props = _this.props,\n          dispatchAddPrivateRequest = _this$props.addPrivateRequest,\n          settings = _this$props.settings;\n      var path = settings[SETTING_KEYS.OPTION_FOR_PRIVATE] === 'webrtc' ? 'webrtc/' : '';\n      message.success({\n        content: __jsx(\"span\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 9\n          }\n        }, data.user.username, ' ', \"sent you a private chat request.\"),\n        duration: 10,\n        key: data.conversationId,\n        onClick: function onClick() {\n          Router.push({\n            pathname: \"/live/\".concat(path, \"privatechat\"),\n            query: {\n              id: data.conversationId\n            }\n          }, \"/live/\".concat(path, \"privatechat/\").concat(data.conversationId));\n          message.destroy(data.conversationId);\n        }\n      });\n      _this._audio && _this._audio.play();\n      dispatchAddPrivateRequest(_objectSpread(_objectSpread({}, data), {}, {\n        createdAt: new Date()\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendTipHandler\", function (_ref) {\n      var token = _ref.token,\n          senderInfo = _ref.senderInfo;\n      message.success(\"\".concat(senderInfo.username, \" tip \").concat(token === null || token === void 0 ? void 0 : token.toFixed(2), \" tokens\"), 10);\n      _this._audio && _this._audio.play();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initSocketEvent\", function () {\n      _this.socket = _this.context;\n      var currentUser = _this.props.currentUser;\n\n      if (_this.socket.connected) {\n        if (currentUser.role === 'performer') {\n          _this.socket.on(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST, _this.handlePrivateChat);\n\n          _this.socket.on(EVENT.TIPPED, _this.sendTipHandler);\n        }\n\n        _this.socket.on(EVENT.NOTIFY_READ_MESSAGE, _this.handleMessage);\n      } else {\n        _this.socket.on('connect', function () {\n          if (currentUser.role === 'performer') {\n            _this.socket.on(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST, _this.handlePrivateChat);\n\n            _this.socket.on(EVENT.TIPPED, _this.sendTipHandler);\n          }\n\n          _this.socket.on(EVENT.NOTIFY_READ_MESSAGE, _this.handleMessage);\n        });\n      }\n    });\n\n    _this.state = {\n      showSearch: false\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this$props2, dispatchGetPerformerCategories, dispatchGetCountries, dispatchGetStudioStats, currentUser, loggedIn, tipSound, dispatchCountNotReadMessage, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, dispatchGetPerformerCategories = _this$props2.getPerformerCategories, dispatchGetCountries = _this$props2.getCountries, dispatchGetStudioStats = _this$props2.getStudioStats, currentUser = _this$props2.currentUser, loggedIn = _this$props2.loggedIn, tipSound = _this$props2.tipSound, dispatchCountNotReadMessage = _this$props2.countNotReadMessage; // this.socket = this.context;\n\n                dispatchGetPerformerCategories({\n                  limit: 0\n                });\n                dispatchGetCountries();\n\n                if (!(currentUser !== null && currentUser !== void 0 && currentUser._id)) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 6;\n                return messageService.countTotalNotRead();\n\n              case 6:\n                _context.next = 8;\n                return _context.sent.data;\n\n              case 8:\n                data = _context.sent;\n\n                if (data) {\n                  dispatchCountNotReadMessage(data.total);\n                }\n\n              case 10:\n                if (currentUser !== null && currentUser !== void 0 && currentUser._id && currentUser.role === 'studio') {\n                  dispatchGetStudioStats();\n                }\n\n                if (loggedIn) {\n                  this.initSocketEvent();\n                  this.checkPermissionAccess();\n                }\n\n                this._audio = new Audio(tipSound);\n                this._audio.volume = 0.5;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n          loggedIn = _this$props3.loggedIn,\n          unauthorized = _this$props3.router.query.unauthorized;\n\n      if (loggedIn && prevProps.loggedIn !== loggedIn) {\n        setTimeout(this.initSocketEvent, 1000);\n      }\n\n      if (unauthorized !== prevProps.router.query.unauthorized) {\n        this.checkPermissionAccess();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.socket) {\n        this.socket.off(EVENT.NOTIFY_READ_MESSAGE);\n        this.socket.off(EVENT.RECEIVED_PRIVATE_CHAT_REQUEST);\n        this.socket.off(EVENT.TIPPED);\n      }\n    }\n  }, {\n    key: \"onSearchPerformer\",\n    value: function onSearchPerformer(key) {\n      this.search(key);\n    }\n  }, {\n    key: \"onPressEnter\",\n    value: function onPressEnter(event) {\n      var target = event.currentTarget;\n      var key = target.value;\n      this.search(key);\n    }\n  }, {\n    key: \"search\",\n    value: function search(key) {\n      Router.push({\n        pathname: '/',\n        query: {\n          q: key\n        }\n      }, \"/?q=\".concat(key));\n    }\n  }, {\n    key: \"checkPermissionAccess\",\n    value: function () {\n      var _checkPermissionAccess = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this$props4, loggedIn, unauthorized;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this$props4 = this.props, loggedIn = _this$props4.loggedIn, unauthorized = _this$props4.router.query.unauthorized;\n\n                if (!(!loggedIn || !unauthorized)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 3:\n                this.beforeLogout();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function checkPermissionAccess() {\n        return _checkPermissionAccess.apply(this, arguments);\n      }\n\n      return checkPermissionAccess;\n    }()\n  }, {\n    key: \"beforeLogout\",\n    value: function () {\n      var _beforeLogout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var dispatchLogout;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                dispatchLogout = this.props.logout;\n                dispatchLogout();\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function beforeLogout() {\n        return _beforeLogout.apply(this, arguments);\n      }\n\n      return beforeLogout;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          ui = _this$props5.ui,\n          loggedIn = _this$props5.loggedIn,\n          privateRequests = _this$props5.privateRequests,\n          currentUser = _this$props5.currentUser,\n          totalNotReadMessage = _this$props5.totalNotReadMessage,\n          settings = _this$props5.settings;\n      var showSearch = this.state.showSearch;\n      var path = settings[SETTING_KEYS.OPTION_FOR_PRIVATE] === 'webrtc' ? 'webrtc/' : '';\n      var rightContent = loggedIn ? __jsx(React.Fragment, null, __jsx(Link, {\n        href: loggedIn && currentUser.role === 'user' ? '/account/user/funds-tokens' : '#',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      }, __jsx(Tooltip, {\n        title: \"\".concat(currentUser.balance && currentUser.balance.toFixed(2) || 0, \" Tokens\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        style: {\n          margin: '0px 10px',\n          color: '#ff0066'\n        },\n        className: \"btn-tokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      }, \"\".concat(roundBalance((currentUser === null || currentUser === void 0 ? void 0 : currentUser.balance) || 0), \" Tokens\")))), currentUser.role === 'performer' && __jsx(Dropdown, {\n        overlay: __jsx(Menu, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }\n        }, privateRequests.length > 0 ? privateRequests.map(function (request) {\n          var _request$user, _request$user2, _request$user3;\n\n          return __jsx(Menu.Item, {\n            onClick: function onClick() {\n              return message.destroy(request.conversationId);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 21\n            }\n          }, __jsx(Link, {\n            href: {\n              pathname: \"/live/\".concat(path, \"privatechat\"),\n              query: {\n                id: request.conversationId,\n                streamId: request.id\n              }\n            },\n            as: \"/live/\".concat(path, \"privatechat/\").concat(request.conversationId, \"?streamId=\").concat(request.id),\n            key: request.conversationId,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 23\n            }\n          }, __jsx(\"a\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 25\n            }\n          }, __jsx(Card, {\n            bordered: false,\n            hoverable: false,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 27\n            }\n          }, __jsx(Card.Meta, {\n            avatar: __jsx(Avatar, {\n              src: ((_request$user = request.user) === null || _request$user === void 0 ? void 0 : _request$user.avatar) || '/default-user-icon.png',\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }\n            }),\n            title: __jsx(React.Fragment, null, __jsx(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 35\n              }\n            }, (_request$user2 = request.user) === null || _request$user2 === void 0 ? void 0 : _request$user2.username), ' ', \"(\", __jsx(NumberFormat, {\n              value: ((_request$user3 = request.user) === null || _request$user3 === void 0 ? void 0 : _request$user3.balance) || 0,\n              suffix: \" tokens\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 35\n              }\n            }), \")\"),\n            description: formatDate(request === null || request === void 0 ? void 0 : request.createdAt),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }\n          })))));\n        }) : __jsx(Menu.Item, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 19\n          }\n        }, \"There are no private request.\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, __jsx(\"span\", {\n        className: \"call-requests\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }\n      }, __jsx(Badge, {\n        count: privateRequests.length,\n        showZero: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }\n      }, __jsx(BellOutlined, {\n        style: {\n          color: '#ffffff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      })))), __jsx(Dropdown, {\n        overlay: __jsx(Menu, {\n          key: \"menu-right-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }\n        }, currentUser.role === 'user' && [__jsx(Menu.Item, {\n          key: \"settings-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/user/account-settings');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 19\n          }\n        }, __jsx(SettingOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 21\n          }\n        }), ' ', \"Profile\")), __jsx(Menu.Item, {\n          key: \"favorite-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/user/favorites');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 19\n          }\n        }, __jsx(HeartOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 21\n          }\n        }), ' ', \"My Favorites\")), __jsx(Menu.Item, {\n          key: \"funds-tokens-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/user/funds-tokens');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 19\n          }\n        }, __jsx(\"span\", {\n          className: \"anticon primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 21\n          }\n        }, __jsx(FundsIcon, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 23\n          }\n        })), ' ', \"Funds / Tokens\")), __jsx(Menu.Item, {\n          key: \"user-messages-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/messages');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 19\n          }\n        }, __jsx(MessageOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 21\n          }\n        }), ' ', \"Messages (\", totalNotReadMessage || 0, \")\"))], currentUser.role === 'performer' && [__jsx(Menu.Item, {\n          key: \"profile-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/performer/profile');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 19\n          }\n        }, __jsx(UserOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 21\n          }\n        }), ' ', \"Profile\")), __jsx(Menu.Item, {\n          key: \"account-settings-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/account/performer/account-settings');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 19\n          }\n        }, __jsx(SettingOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 21\n          }\n        }), ' ', \"Account Settings\")), __jsx(Menu.Item, {\n          key: \"model-messages-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/messages');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 19\n          }\n        }, __jsx(MessageOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 21\n          }\n        }), ' ', \"Messages (\", totalNotReadMessage, \")\"))], currentUser.role === 'studio' && [__jsx(Menu.Item, {\n          key: \"account-settings-menu-right-content\",\n          onClick: function onClick() {\n            return Router.push('/studio/account-settings');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 17\n          }\n        }, __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 19\n          }\n        }, __jsx(SettingOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 21\n          }\n        }), ' ', \"Account Settings\"))], __jsx(Menu.Item, {\n          key: \"log-out\",\n          onClick: this.beforeLogout.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }\n        }, __jsx(LogoutOutlined, {\n          className: \"primary-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 17\n          }\n        }), ' ', \"Log out\")),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 9\n        }\n      }, __jsx(Avatar, {\n        style: {\n          margin: '0 15px',\n          cursor: 'pointer',\n          background: '#ffffff'\n        },\n        src: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.avatar) || '/default-user-icon.png',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }\n      }))) : __jsx(Button, {\n        className: \"btn-login\",\n        onClick: function onClick() {\n          return Router.push('/auth/login/user', '/auth/login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 7\n        }\n      }, \"Login\");\n      return __jsx(Layout.Header, {\n        className: \"header\",\n        id: \"layoutHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: \"left-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 9\n        }\n      }, __jsx(Link, {\n        href: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        className: \"header-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }\n      }, __jsx(\"img\", {\n        src: typeof ui.logo === 'string' && ui.logo.length > 0 ? ui.logo : '/xcam-logo-white.png',\n        alt: \"header-logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }\n      }))), __jsx(\"div\", {\n        className: \"menu-left-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }\n      }, __jsx(LeftHeaderContent, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }\n      })))), __jsx(\"div\", {\n        className: \"right-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: showSearch ? 'search-icon active' : 'search-icon',\n        \"aria-hidden\": true,\n        onClick: function onClick() {\n          return _this2.setState({\n            showSearch: !showSearch\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }\n      }, showSearch ? __jsx(CloseOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 27\n        }\n      }) : __jsx(SearchOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 47\n        }\n      })), __jsx(\"div\", {\n        className: !showSearch ? 'hide search-bar' : 'search-bar',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }\n      }, __jsx(Input.Search, {\n        placeholder: \"Enter keyword\",\n        loading: false,\n        allowClear: true,\n        enterButton: true,\n        onPressEnter: this.onPressEnter.bind(this),\n        onSearch: this.onSearchPerformer.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }\n      })), rightContent));\n    }\n  }]);\n\n  return Header;\n}(PureComponent);\n\nHeader.contextType = SocketContext;\n\nvar userSelecter = function userSelecter(state) {\n  return state.user.current;\n};\n\nvar performerSelecter = function performerSelecter(state) {\n  return state.performer.current;\n};\n\nvar studioSelecter = function studioSelecter(state) {\n  return state.studio.current;\n};\n\nvar authSelecter = function authSelecter(state) {\n  return state.auth;\n};\n\nvar currentUserSelecter = createSelector(userSelecter, performerSelecter, studioSelecter, authSelecter, function (user, performer, studio, auth) {\n  if (!auth.loggedIn) return {};\n\n  if (user !== null && user !== void 0 && user._id) {\n    return _objectSpread(_objectSpread({}, user), {}, {\n      role: 'user'\n    });\n  }\n\n  if (performer !== null && performer !== void 0 && performer._id) {\n    return _objectSpread(_objectSpread({}, performer), {}, {\n      role: 'performer'\n    });\n  }\n\n  if (studio !== null && studio !== void 0 && studio._id) {\n    return _objectSpread(_objectSpread({}, studio), {}, {\n      role: 'studio'\n    });\n  }\n\n  return {};\n});\nHeader.contextType = SocketContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({\n    ui: _objectSpread({}, state.ui),\n    currentUser: currentUserSelecter(state),\n    tipSound: state.settings.tipSound,\n    loggedIn: state.auth.loggedIn,\n    performerCategories: state.performer.categories,\n    totalNotReadMessage: state.message.totalNotReadMessage\n  }, state.streaming);\n};\n\nvar mapDispatch = {\n  logout: logout,\n  getPerformerCategories: getPerformerCategories,\n  getCountries: getCountries,\n  addPrivateRequest: addPrivateRequest,\n  getStudioStats: getStudioStats,\n  countNotReadMessage: countNotReadMessage\n};\nexport default connect(mapStateToProps, mapDispatch)(withRouter(Header));","map":null,"metadata":{},"sourceType":"module"}