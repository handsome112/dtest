{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/studio/models-manager/studio-models-stats-table.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { converDuration } from 'src/lib';\nimport { Table } from 'antd';\n\nconst StudioModelStatsTable = ({\n  data,\n  searching,\n  total,\n  pageSize,\n  onChange\n}) => {\n  const columns = [{\n    title: 'Username',\n    key: 'username',\n    dataIndex: 'username'\n  }, {\n    title: 'Total Favorite',\n    key: 'totalFavorite',\n    render: record => {\n      var _record$stats;\n\n      return (record === null || record === void 0 ? void 0 : (_record$stats = record.stats) === null || _record$stats === void 0 ? void 0 : _record$stats.favorites) || 0;\n    }\n  }, {\n    title: 'Total Galleries',\n    key: 'totalGalleries',\n    render: record => {\n      var _record$stats2;\n\n      return (record === null || record === void 0 ? void 0 : (_record$stats2 = record.stats) === null || _record$stats2 === void 0 ? void 0 : _record$stats2.totalGalleries) || 0;\n    }\n  }, {\n    title: 'Total Photos',\n    key: 'totalPhotos',\n    render: record => {\n      var _record$stats3;\n\n      return (record === null || record === void 0 ? void 0 : (_record$stats3 = record.stats) === null || _record$stats3 === void 0 ? void 0 : _record$stats3.totalPhotos) || 0;\n    }\n  }, {\n    title: 'Total Product',\n    key: 'totalProducts',\n    render: record => {\n      var _record$stats4;\n\n      return (record === null || record === void 0 ? void 0 : (_record$stats4 = record.stats) === null || _record$stats4 === void 0 ? void 0 : _record$stats4.totalProducts) || 0;\n    }\n  }, {\n    title: 'Total Videos',\n    key: 'totalVideos',\n    render: record => {\n      var _record$stats5;\n\n      return (record === null || record === void 0 ? void 0 : (_record$stats5 = record.stats) === null || _record$stats5 === void 0 ? void 0 : _record$stats5.totalVideos) || 0;\n    }\n  }, {\n    title: 'Total Stream Time',\n    key: 'totalStreamTime',\n    render: record => {\n      var _record$stats6;\n\n      return converDuration((record === null || record === void 0 ? void 0 : (_record$stats6 = record.stats) === null || _record$stats6 === void 0 ? void 0 : _record$stats6.totalStreamTime) || 0);\n    }\n  }, {\n    title: 'Total Earned',\n    key: 'totalTokenEarned',\n    render: record => {\n      var _record$stats7;\n\n      return record === null || record === void 0 ? void 0 : (_record$stats7 = record.stats) === null || _record$stats7 === void 0 ? void 0 : _record$stats7.totalTokenEarned;\n    }\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => __jsx(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }\n    }, status)\n  }];\n  const dataSource = data.map(d => _objectSpread(_objectSpread({}, d), {}, {\n    key: d._id\n  }));\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    loading: searching,\n    pagination: {\n      pageSize,\n      total\n    },\n    onChange: onChange,\n    scroll: {\n      x: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default StudioModelStatsTable;","map":null,"metadata":{},"sourceType":"module"}