{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { PureComponent } from 'react';\nimport classnames from 'classnames';\nimport './Messenger.less';\nimport { connect } from 'react-redux';\nimport { getStreamConversation } from '@redux/stream-chat/actions';\nimport MessageList from './MessageList';\n\nclass StreamMessenger extends PureComponent {\n  componentDidMount() {\n    const {\n      streamId,\n      activeConversation,\n      getStreamConversation: dispatchGetStreamConversation\n    } = this.props;\n\n    if (!activeConversation && streamId) {\n      dispatchGetStreamConversation({\n        conversation: activeConversation.data,\n        isPublic: true\n      });\n    }\n  }\n\n  render() {\n    const {\n      activeConversation,\n      isPublic,\n      loggedIn\n    } = this.props;\n    return __jsx(\"div\", {\n      className: classnames('message-stream', loggedIn ? 'user-logged-in' : '')\n    }, activeConversation && activeConversation.data && activeConversation.data.streamId ? __jsx(MessageList, {\n      isPublic: isPublic\n    }) : __jsx(\"p\", null, \"No conversation found.\"));\n  }\n\n}\n\nconst mapStates = state => ({\n  activeConversation: state.streamMessage.activeConversation,\n  loggedIn: state.auth.loggedIn\n});\n\nconst mapDispatchs = {\n  getStreamConversation\n};\nexport default connect(mapStates, mapDispatchs)(StreamMessenger);","map":null,"metadata":{},"sourceType":"module"}