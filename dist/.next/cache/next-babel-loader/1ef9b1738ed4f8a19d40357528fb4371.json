{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/photos/photo-dashboard-grid.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { Card, Space, Tag } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { EditOutlined } from '@ant-design/icons';\nimport { capitalizeFirstLetter } from 'src/lib/string';\nimport { formatDate } from 'src/lib';\nimport TrashButton from '@components/common/base/trash'; // import Loader from '@components/common/base/loader';\n\nimport './index.less';\n\nconst renderActiveTag = status => {\n  switch (status) {\n    case 'active':\n      return __jsx(Tag, {\n        color: \"#87d068\",\n        className: \"photo-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, \"Active\");\n\n    case 'inactive':\n      return __jsx(Tag, {\n        color: \"#f50\",\n        className: \"photo-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, \"Inactive\");\n\n    case 'draft':\n      return __jsx(Tag, {\n        className: \"photo-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 14\n        }\n      }, \"Inactive\");\n\n    default:\n      return __jsx(React.Fragment, null);\n  }\n};\n\nconst PhotoDashboard = ({\n  data,\n  searching,\n  title,\n  hasMore,\n  addPhotos,\n  success,\n  remove\n}) => __jsx(InfiniteScroll, {\n  pageStart: 0,\n  loadMore: addPhotos,\n  hasMore: hasMore,\n  loader: __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Loading...\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }\n}, __jsx(Card, {\n  className: \"photo-grid\",\n  title: title,\n  bordered: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }\n}, !searching ? success && (data.length > 0 ? data.map(photo => __jsx(Card.Grid, {\n  className: \"photo-box\",\n  key: photo._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 13\n  }\n}, __jsx(\"div\", {\n  className: \"photo-thumbnail\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 15\n  }\n}, __jsx(\"img\", {\n  src: photo.photo.thumbnails[0] || '/no-image.jpg',\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 17\n  }\n}), __jsx(Space, {\n  className: \"actions\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 17\n  }\n}, __jsx(Link, {\n  href: {\n    pathname: '/account/performer/photos/update',\n    query: {\n      data: JSON.stringify(photo)\n    }\n  },\n  as: `/account/performer/photos/${photo._id}/update`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 19\n  }\n}, __jsx(EditOutlined, {\n  style: {\n    color: '#ff0066'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 21\n  }\n})), __jsx(TrashButton, {\n  confirm: () => remove(photo._id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 19\n  }\n})), renderActiveTag(photo.status)), __jsx(\"div\", {\n  className: \"photo-info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 15\n  }\n}, __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 17\n  }\n}, capitalizeFirstLetter(photo.title))), __jsx(\"div\", {\n  className: \"photo-description\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 15\n  }\n}, \"Created at\", ' ', formatDate(photo.createdAt, 'DD MMMM YYYY')), __jsx(\"div\", {\n  className: \"photo-description\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 15\n  }\n}, __jsx(Link, {\n  href: {\n    pathname: '/account/performer/galleries/update',\n    query: {\n      data: JSON.stringify(photo.gallery)\n    }\n  },\n  as: `/account/performer/galleries/${photo.gallery._id}/update`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 17\n  }\n}, photo.gallery.name)))) : __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 11\n  }\n}, \"No items\")) : __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }\n}, \"Loading...\")));\n\nPhotoDashboard.defaultProps = {\n  success: false,\n  // error: null,\n  searching: false,\n  title: '',\n  addPhotos: null,\n  hasMore: false,\n  remove: null\n};\nexport default PhotoDashboard;","map":null,"metadata":{},"sourceType":"module"}