{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Row, Col, Button, message } from 'antd';\nimport { GiftIcon } from '@components/common/base/icons';\nimport Popup from '@components/common/base/popup';\nimport { defaultColor } from 'src/lib';\nimport { HeartFilled, HeartOutlined, MailOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport { favouriteService, transactionService } from 'src/services';\nimport { getResponseError, checkUserLogin } from 'src/lib/utils';\nimport Router from 'next/router';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport SendTipContent from './tip/content';\nimport './header.less';\nvar btnStyle = {\n  height: 35,\n  margin: 8\n};\nexport default _s(function (_ref) {\n  _s();\n\n  var performer = _ref.performer,\n      ui = _ref.ui,\n      loggedIn = _ref.loggedIn,\n      user = _ref.user,\n      updateCurrentUserBalance = _ref.updateCurrentUserBalance,\n      activeConversation = _ref.activeConversation;\n  var tipPopupRef = /*#__PURE__*/React.createRef();\n  var contentRef;\n  var _id = performer._id,\n      username = performer.username;\n\n  var _React$useState = React.useState(performer.isFavorite || false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isFavorite = _React$useState2[0],\n      setIsFavorite = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      disableOk = _React$useState4[0],\n      setDisableOk = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      tipping = _React$useState6[0],\n      setTipping = _React$useState6[1];\n\n  var handleError = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return Promise.resolve(e);\n\n            case 2:\n              error = _context.sent;\n              message.error(getResponseError(error));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleError(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var onLike = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (checkUserLogin(loggedIn, user)) {\n                _context2.next = 3;\n                break;\n              }\n\n              message.error('Please login to add favorite!');\n              return _context2.abrupt(\"return\");\n\n            case 3:\n              _context2.prev = 3;\n              _context2.next = 6;\n              return favouriteService.favorite(_id, isFavorite);\n\n            case 6:\n              setIsFavorite(!isFavorite);\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](3);\n              handleError(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[3, 9]]);\n    }));\n\n    return function onLike() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sendGift = function sendGift() {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(\"Please login to send gift to \".concat(username, \"!\"));\n    }\n  };\n\n  var notify = function notify() {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(\"Please login to notify \".concat(username, \"!\"));\n    }\n  };\n\n  var sendMessage = function sendMessage() {\n    if (!checkUserLogin(loggedIn, user)) {\n      if (true) {\n        Router.push('/auth/login');\n      }\n\n      return;\n    }\n\n    Router.push({\n      pathname: '/messages',\n      query: {\n        toSource: 'performer',\n        toId: _id || ''\n      }\n    });\n  };\n\n  var sendTip = function sendTip() {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(\"Please login to send tip to \".concat(username, \"!\"));\n      return;\n    }\n\n    tipPopupRef.current && tipPopupRef.current.setVisible(true);\n  };\n\n  var onOk = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _activeConversation$d;\n\n      var ref, token, content;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(activeConversation !== null && activeConversation !== void 0 && (_activeConversation$d = activeConversation.data) !== null && _activeConversation$d !== void 0 && _activeConversation$d._id)) {\n                _context3.next = 22;\n                break;\n              }\n\n              ref = tipPopupRef.current;\n              _context3.prev = 2;\n              setTipping(true);\n              token = contentRef ? contentRef.getValueToken() : 0;\n\n              if (!(parseInt(token, 10) <= 0)) {\n                _context3.next = 7;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 7:\n              _context3.next = 9;\n              return transactionService.sendTipToken(_id, token, activeConversation.data._id);\n\n            case 9:\n              ref && ref.setVisible(false);\n              updateCurrentUserBalance && updateCurrentUserBalance(-token);\n              content = __jsx(NumberFormat, {\n                value: token,\n                prefix: \"You sent \",\n                suffix: \" tokens\"\n              });\n              message.success(content);\n              _context3.next = 18;\n              break;\n\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](2);\n              handleError(_context3.t0);\n\n            case 18:\n              _context3.prev = 18;\n              setTipping(false);\n              ref && ref.setVisible(false);\n              return _context3.finish(18);\n\n            case 22:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 15, 18, 22]]);\n    }));\n\n    return function onOk() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(Popup, {\n    title: \"Tips to \".concat(username),\n    okButtonProps: {\n      disabled: disableOk\n    },\n    content: __jsx(SendTipContent, {\n      ref: function ref(_ref5) {\n        contentRef = _ref5;\n      },\n      setDisableOk: setDisableOk\n    }),\n    loading: tipping,\n    ref: tipPopupRef,\n    onOk: onOk,\n    width: 567\n  }), __jsx(Row, {\n    className: \"stream-header\"\n  }, __jsx(Col, {\n    sm: 12,\n    xs: 24\n  }, __jsx(\"div\", {\n    className: \"left-content\"\n  }, __jsx(\"img\", {\n    src: performer.avatar || (ui === null || ui === void 0 ? void 0 : ui.placeholderAvatarUrl) || '/user.png',\n    alt: \"\",\n    className: \"stream-avatar\"\n  }), ' ', __jsx(\"div\", {\n    className: \"stream-title\"\n  }, __jsx(\"span\", null, performer.username), performer.streamingTitle && __jsx(\"span\", null, performer.streamingTitle)))), __jsx(Col, {\n    sm: 12,\n    xs: 24\n  }, __jsx(Row, {\n    className: \"button-block\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    hidden: true,\n    icon: __jsx(GiftIcon, null),\n    style: btnStyle,\n    onClick: function onClick() {\n      return sendGift();\n    }\n  }, \"Send Gift\"), __jsx(Button, {\n    type: \"default\",\n    hidden: true,\n    style: btnStyle,\n    icon: __jsx(HeartOutlined, null),\n    onClick: function onClick() {\n      return notify();\n    }\n  }, \"Notify me\"), __jsx(Col, null, __jsx(Button, {\n    type: \"default\",\n    style: btnStyle,\n    icon: __jsx(MailOutlined, null),\n    onClick: function onClick() {\n      return sendMessage();\n    }\n  }, \"Send message\")), __jsx(Col, null, __jsx(Button, {\n    type: \"default\",\n    style: _objectSpread(_objectSpread({}, btnStyle), {}, {\n      width: 100,\n      flexDirection: 'row',\n      justifyContent: 'center'\n    }),\n    onClick: function onClick() {\n      return onLike();\n    },\n    icon: isFavorite ? __jsx(HeartFilled, {\n      style: {\n        color: defaultColor.primaryColor\n      }\n    }) : __jsx(HeartOutlined, {\n      style: {\n        color: defaultColor.primaryColor\n      }\n    })\n  }, isFavorite ? 'UnLike' : 'Like')), __jsx(Col, null, __jsx(Button, {\n    type: \"primary\",\n    style: btnStyle,\n    onClick: function onClick() {\n      return sendTip();\n    },\n    icon: __jsx(PlusCircleOutlined, null)\n  }, \"Send Tip\"))))));\n}, \"kSU8qciDjLV4Wy9dNQgm0vc3pGc=\");","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/streaming/header.tsx"],"names":["React","Row","Col","Button","message","GiftIcon","Popup","defaultColor","HeartFilled","HeartOutlined","MailOutlined","PlusCircleOutlined","favouriteService","transactionService","getResponseError","checkUserLogin","Router","NumberFormat","SendTipContent","btnStyle","height","margin","performer","ui","loggedIn","user","updateCurrentUserBalance","activeConversation","tipPopupRef","createRef","contentRef","_id","username","useState","isFavorite","setIsFavorite","disableOk","setDisableOk","tipping","setTipping","handleError","e","Promise","resolve","error","onLike","favorite","sendGift","notify","sendMessage","push","pathname","query","toSource","toId","sendTip","current","setVisible","onOk","data","ref","token","getValueToken","parseInt","sendTipToken","content","success","disabled","avatar","placeholderAvatarUrl","streamingTitle","width","flexDirection","justifyContent","color","primaryColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Row, Col, Button, message\n} from 'antd';\nimport { IPerformer, IUser, IUIConfig } from 'src/interfaces';\nimport { GiftIcon } from '@components/common/base/icons';\nimport Popup from '@components/common/base/popup';\nimport { defaultColor } from 'src/lib';\nimport {\n  HeartFilled,\n  HeartOutlined,\n  MailOutlined,\n  PlusCircleOutlined\n} from '@ant-design/icons';\nimport { favouriteService, transactionService } from 'src/services';\nimport { getResponseError, checkUserLogin } from 'src/lib/utils';\nimport Router from 'next/router';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport SendTipContent from './tip/content';\nimport './header.less';\n\ninterface P {\n  activeConversation: any;\n  updateCurrentUserBalance: Function;\n  loggedIn: boolean;\n  user: IUser;\n  performer: IPerformer;\n  ui: IUIConfig;\n}\n\nconst btnStyle = { height: 35, margin: 8 };\n\nexport default ({\n  performer,\n  ui,\n  loggedIn,\n  user,\n  updateCurrentUserBalance,\n  activeConversation\n}: P) => {\n  const tipPopupRef = React.createRef<Popup>();\n  let contentRef;\n  const { _id, username } = performer;\n  const [isFavorite, setIsFavorite] = React.useState(\n    performer.isFavorite || false\n  );\n  const [disableOk, setDisableOk] = React.useState(false);\n  const [tipping, setTipping] = React.useState(false);\n  const handleError = async (e) => {\n    const error = await Promise.resolve(e);\n    message.error(getResponseError(error));\n  };\n\n  const onLike = async () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error('Please login to add favorite!');\n      return;\n    }\n\n    try {\n      await favouriteService.favorite(_id, isFavorite);\n      setIsFavorite(!isFavorite);\n    } catch (e) {\n      handleError(e);\n    }\n  };\n\n  const sendGift = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(`Please login to send gift to ${username}!`);\n    }\n  };\n\n  const notify = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(`Please login to notify ${username}!`);\n    }\n  };\n\n  const sendMessage = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      if (process.browser) {\n        Router.push('/auth/login');\n      }\n      return;\n    }\n\n    Router.push({\n      pathname: '/messages',\n      query: {\n        toSource: 'performer',\n        toId: _id || ''\n      }\n    });\n  };\n\n  const sendTip = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(`Please login to send tip to ${username}!`);\n      return;\n    }\n\n    tipPopupRef.current && tipPopupRef.current.setVisible(true);\n  };\n\n  const onOk = async () => {\n    if (activeConversation?.data?._id) {\n      const ref = tipPopupRef.current;\n      try {\n        setTipping(true);\n        const token = contentRef ? contentRef.getValueToken() : 0;\n        if (parseInt(token, 10) <= 0) return;\n\n        await transactionService.sendTipToken(\n          _id,\n          token,\n          activeConversation.data._id\n        );\n        ref && ref.setVisible(false);\n        updateCurrentUserBalance && updateCurrentUserBalance(-token);\n        const content = (\n          <NumberFormat value={token} prefix=\"You sent \" suffix=\" tokens\" />\n        );\n        message.success(content);\n      } catch (e) {\n        handleError(e);\n      } finally {\n        setTipping(false);\n        ref && ref.setVisible(false);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Popup\n        title={`Tips to ${username}`}\n        okButtonProps={{ disabled: disableOk }}\n        content={(\n          <SendTipContent\n            ref={(ref) => {\n              contentRef = ref;\n            }}\n            setDisableOk={setDisableOk}\n          />\n        )}\n        loading={tipping}\n        ref={tipPopupRef}\n        onOk={onOk}\n        width={567}\n      />\n      <Row className=\"stream-header\">\n        <Col sm={12} xs={24}>\n\n          <div className=\"left-content\">\n            <img src={performer.avatar || ui?.placeholderAvatarUrl || '/user.png'} alt=\"\" className=\"stream-avatar\" />\n            {' '}\n            <div className=\"stream-title\">\n              <span>\n                {performer.username}\n              </span>\n              {performer.streamingTitle && (\n              <span>\n                {performer.streamingTitle}\n              </span>\n              )}\n            </div>\n          </div>\n          {/* <span>Report abuse</span> */}\n        </Col>\n        <Col sm={12} xs={24}>\n          {/* <Space className=\"button-block\"> */}\n          <Row className=\"button-block\">\n            <Button\n              type=\"primary\"\n              hidden\n              icon={<GiftIcon />}\n              style={btnStyle}\n              onClick={() => sendGift()}\n            >\n              Send Gift\n            </Button>\n            <Button\n              type=\"default\"\n              hidden\n              style={btnStyle}\n              icon={<HeartOutlined />}\n              onClick={() => notify()}\n            >\n              Notify me\n            </Button>\n            <Col>\n              <Button\n                type=\"default\"\n                style={btnStyle}\n                icon={<MailOutlined />}\n                onClick={() => sendMessage()}\n              >\n                Send message\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                type=\"default\"\n                style={{\n                  ...btnStyle,\n                  width: 100,\n                  flexDirection: 'row',\n                  justifyContent: 'center'\n                }}\n                onClick={() => onLike()}\n                icon={\n                isFavorite ? (\n                  <HeartFilled style={{ color: defaultColor.primaryColor }} />\n                ) : (\n                  <HeartOutlined style={{ color: defaultColor.primaryColor }} />\n                )\n              }\n              >\n                {isFavorite ? 'UnLike' : 'Like'}\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                type=\"primary\"\n                style={btnStyle}\n                onClick={() => sendTip()}\n                icon={<PlusCircleOutlined />}\n              >\n                Send Tip\n              </Button>\n            </Col>\n\n            {/* </Space> */}\n          </Row>\n        </Col>\n      </Row>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}