{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/galleries/gallery-dashboard-grid.tsx\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Card, Space, Tag, Alert, Button } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { EditOutlined } from '@ant-design/icons';\nimport { capitalizeFirstLetter } from 'src/lib/string';\nimport { formatDate } from 'src/lib';\nimport TrashButton from '@components/common/base/trash';\nimport './index.less';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport Router from 'next/router';\n\nconst renderActiveTag = status => {\n  switch (status) {\n    case 'active':\n      return __jsx(Tag, {\n        color: \"success\",\n        className: \"photo-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"Active\");\n\n    case 'inactive':\n      return __jsx(Tag, {\n        color: \"warning\",\n        className: \"photo-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"Inactive\");\n\n    case 'draft':\n      return __jsx(Tag, {\n        color: \"default\",\n        className: \"photo-status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, \"Inactive\");\n\n    default:\n      return __jsx(React.Fragment, null);\n  }\n};\n\nconst renderSale = (isSale, token) => {\n  switch (isSale) {\n    case true:\n      return __jsx(Tag, {\n        color: \"#87d068\",\n        className: \"sale-tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, __jsx(NumberFormat, {\n        value: token,\n        suffix: \" Tokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }\n      }));\n\n    case false:\n      return __jsx(Tag, {\n        color: \"#f50\",\n        className: \"sale-tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, \"Free\");\n\n    default:\n      return __jsx(React.Fragment, null);\n  }\n};\n\nconst Dashboard = ({\n  data,\n  searching,\n  title,\n  hasMore,\n  addGalleries,\n  success,\n  remove,\n  error\n}) => __jsx(InfiniteScroll, {\n  pageStart: 0,\n  loadMore: addGalleries,\n  hasMore: hasMore,\n  loader: __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Loading...\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 3\n  }\n}, __jsx(Card, {\n  className: \"photo-grid\",\n  title: title,\n  bordered: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n}, !searching ? success && (data.length > 0 ? data.map(gallery => __jsx(Card.Grid, {\n  className: \"photo-box\",\n  key: gallery._id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 13\n  }\n}, __jsx(\"div\", {\n  className: \"photo-thumbnail\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 15\n  }\n}, __jsx(\"img\", {\n  src: gallery.coverPhotoId && gallery.coverPhoto && gallery.coverPhoto.thumbnails[0] || '/gallery.png',\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 17\n  }\n}), __jsx(Space, {\n  className: \"actions\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 17\n  }\n}, __jsx(Button, {\n  type: \"link\",\n  onClick: () => Router.push({\n    pathname: '/account/performer/galleries/update',\n    query: {\n      data: JSON.stringify(gallery)\n    }\n  }, `/account/performer/galleries/${gallery._id}/update`),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 19\n  }\n}, __jsx(EditOutlined, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 21\n  }\n})), __jsx(TrashButton, {\n  confirm: () => remove(gallery._id),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 19\n  }\n})), renderActiveTag(gallery.status), renderSale(gallery.isSale, gallery.token)), __jsx(\"div\", {\n  className: \"photo-info\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 15\n  }\n}, __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 17\n  }\n}, capitalizeFirstLetter(gallery.name)), __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 17\n  }\n}, gallery.numOfItems, ' ', \"Items\")), __jsx(\"div\", {\n  className: \"photo-description\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 15\n  }\n}, \"Created On\", ' ', formatDate(gallery.createdAt, 'DD MMMM YYYY')), __jsx(\"div\", {\n  className: \"photo-description\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 15\n  }\n}, gallery.description))) : __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 11\n  }\n}, \"No items\")) : __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 9\n  }\n}, \"Loading...\")), error && __jsx(Alert, {\n  type: \"error\",\n  message: \"Error request\",\n  banner: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 15\n  }\n}));\n\nDashboard.defaultProps = {\n  success: false,\n  error: false,\n  searching: false,\n  title: '',\n  addGalleries: null,\n  hasMore: false,\n  remove: null\n};\nexport default Dashboard;","map":null,"metadata":{},"sourceType":"module"}