{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar INTERNET_CHECK_URL = 'https://google.com';\nexport var isHasInternetConnection = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return fetch(INTERNET_CHECK_URL, {\n              headers: {\n                'Cache-Control': 'no-cache, no-store, must-revalidate',\n                Pragma: 'no-cache',\n                Expires: 0\n              }\n            });\n\n          case 3:\n            res = _context.sent;\n\n            if (!(res.status === 404 || res.status === 401 || res.status === 403 || res.status === 500 || res.status >= 200 && res.status <= 300)) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", true);\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            // eslint-disable-next-line no-console\n            console.log(_context.t0);\n\n          case 11:\n            return _context.abrupt(\"return\", false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function isHasInternetConnection() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"module"}