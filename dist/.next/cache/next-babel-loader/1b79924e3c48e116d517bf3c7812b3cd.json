{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import { useState } from 'react';\nimport Link from 'next/link';\nimport { Form, Input, Button, Space, Checkbox, Alert } from 'antd';\nimport { getResponseError } from '@lib/utils';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport FormFooterLogin from './footer-login-form';\nconst FormItem = Form.Item;\n\nconst LoginForm = ({\n  requesting,\n  submit,\n  error,\n  success,\n  onRemember,\n  singularTextModel\n}) => {\n  const [form] = Form.useForm();\n\n  const onPressEnter = () => {\n    form.submit();\n  };\n\n  return __jsx(Form, {\n    layout: \"vertical\",\n    onFinish: submit\n  }, __jsx(\"h1\", null, \"User Sign In\"), __jsx(FormItem, {\n    hasFeedback: true,\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your email!'\n    }]\n  }, __jsx(Input, {\n    onPressEnter: onPressEnter,\n    placeholder: \"youremail@example.com\"\n  })), __jsx(FormItem, {\n    hasFeedback: true,\n    label: __jsx(Space, null, __jsx(\"span\", null, \"Password\")),\n    className: \"input-password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 6,\n      max: 14,\n      message: '6-14 characters'\n    }]\n  }, __jsx(Input.Password, {\n    onPressEnter: onPressEnter,\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '100%',\n      margin: '15px 0'\n    }\n  }, __jsx(Checkbox, {\n    onChange: e => onRemember(e.target.checked)\n  }, \"Remember me\"), __jsx(Link, {\n    href: \"/auth/forgot-password\"\n  }, __jsx(\"a\", null, \"Forgot password?\"))), (error || success) && __jsx(FormItem, null, error && __jsx(Alert, {\n    message: \"Error\",\n    description: error.message && error.message === 'ACCOUNT_INACTIVE' ? 'You do not have permission' : getResponseError(error),\n    type: \"error\",\n    showIcon: true\n  }), success && __jsx(Alert, {\n    message: \"Login success\",\n    type: \"success\",\n    description: \"Redirecting...\"\n  })), __jsx(FormItem, {\n    className: \"row-button-auth\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: requesting,\n    loading: requesting\n  }, \"Sign in\")), __jsx(FormFooterLogin, {\n    account: \"user\",\n    singularTextModel: singularTextModel\n  }));\n};\n\nconst mapStates = state => _objectSpread({}, state.ui);\n\nconst mapDispatch = {\n  updateUIValue\n};\nexport default connect(mapStates, mapDispatch)(LoginForm);","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/auth/login/user-login-form.tsx"],"names":["Link","Form","Input","Button","Space","Checkbox","Alert","getResponseError","connect","updateUIValue","FormFooterLogin","FormItem","Item","LoginForm","requesting","submit","error","success","onRemember","singularTextModel","form","useForm","onPressEnter","type","message","required","min","max","display","justifyContent","width","margin","e","target","checked","mapStates","state","ui","mapDispatch"],"mappings":"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","sourcesContent":["// import { useState } from 'react';\nimport Link from 'next/link';\nimport { ILogin } from 'src/interfaces';\nimport {\n  Form, Input, Button, Space, Checkbox, Alert\n} from 'antd';\nimport { getResponseError } from '@lib/utils';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport FormFooterLogin from './footer-login-form';\n\ninterface IProps {\n  requesting: boolean;\n  submit(data: ILogin): Function;\n  error: any;\n  success: boolean;\n  onRemember: Function;\n  singularTextModel:string;\n}\n\nconst FormItem = Form.Item;\n\nconst LoginForm = ({\n  requesting, submit, error, success, onRemember, singularTextModel\n}: IProps) => {\n  const [form] = Form.useForm();\n  const onPressEnter = () => {\n    form.submit();\n  };\n  return (\n    <Form layout=\"vertical\" onFinish={submit}>\n      <h1>User Sign In</h1>\n      <FormItem\n        hasFeedback\n        label=\"Email\"\n        name=\"email\"\n        rules={[\n          { type: 'email', message: 'The input is not valid E-mail!' },\n          { required: true, message: 'Please input your email!' }\n        ]}\n      >\n        <Input\n          onPressEnter={onPressEnter}\n          placeholder=\"youremail@example.com\"\n        />\n      </FormItem>\n      <FormItem\n        hasFeedback\n        label={(\n          <Space>\n            <span>Password</span>\n          </Space>\n        )}\n        className=\"input-password\"\n        name=\"password\"\n        rules={[\n          { required: true, message: 'Please input your password!' },\n          {\n            min: 6,\n            max: 14,\n            message: '6-14 characters'\n          }\n        ]}\n      >\n        <Input.Password\n          onPressEnter={onPressEnter}\n          placeholder=\"Password\"\n        />\n      </FormItem>\n      <div style={{\n        display: 'flex', justifyContent: 'space-between', width: '100%', margin: '15px 0'\n      }}\n      >\n        <Checkbox onChange={(e) => onRemember(e.target.checked)}>Remember me</Checkbox>\n        <Link href=\"/auth/forgot-password\">\n          <a>Forgot password?</a>\n        </Link>\n      </div>\n      {(error || success) && (\n        <FormItem>\n          {error && (\n            <Alert\n              message=\"Error\"\n              description={\n                error.message && error.message === 'ACCOUNT_INACTIVE'\n                  ? 'You do not have permission'\n                  : getResponseError(error)\n              }\n              type=\"error\"\n              showIcon\n            />\n          )}\n          {success && (\n            <Alert\n              message=\"Login success\"\n              type=\"success\"\n              description=\"Redirecting...\"\n            />\n          )}\n        </FormItem>\n      )}\n      <FormItem className=\"row-button-auth\">\n        <Button type=\"primary\" htmlType=\"submit\" disabled={requesting} loading={requesting}>\n          Sign in\n        </Button>\n      </FormItem>\n      <FormFooterLogin account=\"user\" singularTextModel={singularTextModel} />\n    </Form>\n  );\n};\nconst mapStates = (state: any) => ({\n  ...state.ui\n});\nconst mapDispatch = { updateUIValue };\nexport default connect(mapStates, mapDispatch)(LoginForm);\n"]},"metadata":{},"sourceType":"module"}