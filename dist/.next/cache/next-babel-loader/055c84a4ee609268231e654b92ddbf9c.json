{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/account/performer/schedules/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react';\nimport Head from 'next/head';\nimport { Tabs, message, Row, Col, List } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport ListItem from '@components/common/base/list-item';\nimport Router from 'next/router';\nimport { connect } from 'react-redux';\nimport { updatePerformerProfile, updateCurrentPerformer } from 'src/redux/performer/actions';\nimport PerformerSchedulesForm from '@components/schedules/form';\nimport { getResponseError, getNextShow, getDefaultSchedule } from 'src/lib/utils';\nimport { formatDate } from 'src/lib';\nimport moment from 'moment';\nimport './index.less';\n\nclass PerformerProfilePage extends PureComponent {\n  static getInitialProps({\n    ctx\n  }) {\n    const {\n      query\n    } = ctx;\n    return {\n      action: query.action\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    const {\n      updateSuccess,\n      updateError\n    } = this.props;\n\n    if (prevProps.updateSuccess !== updateSuccess && updateSuccess) {\n      message.success('Update Profile Success.');\n    }\n\n    if (prevProps.updateError !== updateError && updateError) {\n      message.error(getResponseError(updateError));\n    }\n  }\n\n  onTabsChange(key) {\n    Router.push({\n      pathname: '/account/performer/schedules',\n      query: {\n        action: key\n      }\n    }, `/account/performer/schedules?action=${key}`, {\n      shallow: false\n    });\n  }\n\n  onFinish(data) {\n    const {\n      performer,\n      updatePerformerProfile: dispatchUpdatePerformerProfile\n    } = this.props;\n    dispatchUpdatePerformerProfile(_objectSpread(_objectSpread({}, performer), data));\n  }\n\n  render() {\n    const {\n      action,\n      performer,\n      updating\n    } = this.props;\n    const schedule = performer.schedule || getDefaultSchedule();\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Scheduling\")), __jsx(\"div\", {\n      className: \"performer-schedule-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, __jsx(PageHeader, {\n      title: \"Schedules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), __jsx(Tabs, {\n      activeKey: action || 'schedules',\n      style: {\n        padding: '0 24px'\n      },\n      size: \"large\",\n      onChange: this.onTabsChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, __jsx(Tabs.TabPane, {\n      tab: \"Schedules\",\n      key: \"schedules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, __jsx(Col, {\n      sm: {\n        span: 12\n      },\n      xs: {\n        span: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, __jsx(List, {\n      itemLayout: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, __jsx(ListItem, {\n      title: \"Next Show\",\n      description: getNextShow(schedule),\n      titleLayout: {\n        sm: {\n          span: 6\n        },\n        xs: {\n          span: 12\n        }\n      },\n      descriptionLayout: {\n        sm: {\n          span: 18\n        },\n        xs: {\n          span: 12\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }), Object.keys(schedule).map(key => __jsx(ListItem, {\n      title: formatDate(moment().day(key).toDate(), 'dddd'),\n      description: !schedule[key].closed // `${performer.schedule[key].start}`\n      && `${schedule[key].start} - ${schedule[key].end}`,\n      titleLayout: {\n        sm: {\n          span: 6\n        },\n        xs: {\n          span: 12\n        }\n      },\n      descriptionLayout: {\n        sm: {\n          span: 18\n        },\n        xs: {\n          span: 12\n        }\n      },\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    })))))), __jsx(Tabs.TabPane, {\n      tab: \"Edit Schedule Details\",\n      key: \"edit-schedules\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, __jsx(PerformerSchedulesForm, {\n      onFinish: this.onFinish.bind(this),\n      schedule: schedule,\n      updating: updating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\n_defineProperty(PerformerProfilePage, \"authenticate\", true);\n\n_defineProperty(PerformerProfilePage, \"layout\", 'primary');\n\nconst mapStateToProps = state => ({\n  performer: state.performer.current,\n  updating: state.performer.updating,\n  updateSuccess: state.performer.updateSuccess,\n  updateError: state.performer.updateError,\n  categoriesData: state.performer.categories.data\n});\n\nconst mapDispatchs = {\n  updatePerformerProfile,\n  updateCurrentPerformer\n};\nexport default connect(mapStateToProps, mapDispatchs)(PerformerProfilePage);","map":null,"metadata":{},"sourceType":"module"}