{"ast":null,"code":"import { put } from 'redux-saga/effects';\nimport { flatten } from 'lodash';\nimport { createSagas } from '@lib/redux';\nimport { getResponseError } from 'src/lib';\nimport { photoService } from 'src/services';\nimport { getPerformerPhotos, gettingPerformerPhotos, getPerformerPhotosSuccess, getPerformerPhotosFail } from './actions';\nconst photosSagas = [{\n  on: getPerformerPhotos,\n\n  *worker(action) {\n    try {\n      yield put(gettingPerformerPhotos());\n      const resp = yield photoService.search(action.payload);\n      yield put(getPerformerPhotosSuccess({\n        data: resp.data.data,\n        total: resp.data.total\n      }));\n    } catch (error) {\n      const err = getResponseError(error);\n      yield put(getPerformerPhotosFail(err));\n    }\n  }\n\n}];\nexport default flatten([createSagas(photosSagas)]);","map":null,"metadata":{},"sourceType":"module"}