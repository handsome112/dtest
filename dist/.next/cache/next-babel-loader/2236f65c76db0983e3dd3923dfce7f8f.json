{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport { performerCategories } from 'src/services/perfomer-categories.service';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport Head from 'next/head';\nimport PerformerGrid from '@components/performer/performer-grid';\nimport { searchPerformer, updatePerformerFavourite } from '@redux/performer/actions';\nimport { favouriteService } from 'src/services';\nimport { getResponseError } from 'src/lib';\nimport { SocketContext } from 'src/socket';\nvar initQueryState = {\n  offset: 0,\n  limit: 60,\n  gender: '',\n  category: '',\n  country: '',\n  sortBy: '',\n  sort: 'desc'\n};\n\nvar PerformerCategoryPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerCategoryPage, _PureComponent);\n\n  var _super = _createSuper(PerformerCategoryPage);\n\n  function PerformerCategoryPage(props) {\n    var _this;\n\n    _classCallCheck(this, PerformerCategoryPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"socket\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"search\", function () {\n      var _this$props = _this.props,\n          dispatchSearchPerformer = _this$props.searchPerformer,\n          category = _this$props.category;\n      var query = _this.state.query;\n      dispatchSearchPerformer(_objectSpread(_objectSpread({}, query), {}, {\n        category: category ? category._id : ''\n      }));\n    });\n\n    _this.state = {\n      query: initQueryState\n    };\n    return _this;\n  }\n\n  _createClass(PerformerCategoryPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.search();\n      this.socket = this.context;\n      this.socket.on('modelUpdateStatus', this.search);\n      this.socket.on('modelUpdateStreamingStatus', this.search);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props2 = this.props,\n          category = _this$props2.category,\n          loggedIn = _this$props2.loggedIn;\n\n      if (category !== prevProps.category) {\n        this.search();\n      }\n\n      if (!loggedIn && loggedIn !== prevProps.loggedIn) {\n        this.search();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.socket = this.context;\n\n      if (this.socket) {\n        this.socket.off('modelUpdateStatus');\n        this.socket.off('modelUpdateStreamingStatus');\n      }\n    }\n  }, {\n    key: \"onLike\",\n    value: function () {\n      var _onLike = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(performer) {\n        var _id, isFavorite, dispatchUpdatePerformerFavourite, e;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _id = performer._id, isFavorite = performer.isFavorite;\n                dispatchUpdatePerformerFavourite = this.props.updatePerformerFavourite;\n                _context.prev = 2;\n                _context.next = 5;\n                return favouriteService.favorite(_id, isFavorite);\n\n              case 5:\n                dispatchUpdatePerformerFavourite(_id);\n                _context.next = 14;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](2);\n                _context.next = 12;\n                return Promise.resolve(_context.t0);\n\n              case 12:\n                e = _context.sent;\n                message.error(getResponseError(e));\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 8]]);\n      }));\n\n      function onLike(_x) {\n        return _onLike.apply(this, arguments);\n      }\n\n      return onLike;\n    }()\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(name, value) {\n      var query = this.state.query;\n      this.setState({\n        query: _objectSpread(_objectSpread({}, query), {}, _defineProperty({}, name, value))\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          category = _this$props3.category,\n          pluralTextModel = _this$props3.pluralTextModel;\n      var query = this.state.query;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, category ? \"Category - \".concat(category.name) : \"All \".concat(pluralTextModel || 'Performers'))), __jsx(PageHeader, {\n        title: category ? category.name : \"All \".concat(pluralTextModel || 'Performers')\n      }), __jsx(\"div\", {\n        className: \"\"\n      }, __jsx(PerformerGrid, _extends({}, this.props, query, {\n        isPage: true,\n        setFilter: this.setFilter.bind(this),\n        onLike: this.onLike.bind(this)\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref) {\n        var ctx, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                ctx = _ref.ctx;\n                _context2.prev = 1;\n\n                if (!(true && ctx.query.category)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {\n                  category: JSON.parse(ctx.query.category)\n                });\n\n              case 4:\n                if (ctx.query.slug) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", {});\n\n              case 6:\n                _context2.next = 8;\n                return performerCategories.details(ctx.query.slug);\n\n              case 8:\n                resp = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  category: resp.data\n                });\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                return _context2.abrupt(\"return\", {});\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 12]]);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PerformerCategoryPage;\n}(PureComponent);\n\n_defineProperty(PerformerCategoryPage, \"authenticate\", false);\n\n_defineProperty(PerformerCategoryPage, \"layout\", 'public');\n\nPerformerCategoryPage.contextType = SocketContext;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread(_objectSpread({\n    loggedIn: state.auth.loggedIn\n  }, state.performer.performers), state.ui);\n};\n\nvar mapDispatch = {\n  searchPerformer: searchPerformer,\n  updatePerformerFavourite: updatePerformerFavourite,\n  updateUIValue: updateUIValue\n};\nexport default connect(mapStateToProps, mapDispatch)(PerformerCategoryPage);","map":null,"metadata":{},"sourceType":"module"}