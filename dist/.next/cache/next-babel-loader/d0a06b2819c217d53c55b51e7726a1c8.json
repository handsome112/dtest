{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-return-assign */\nimport { createSagas } from '@lib/redux';\nimport { flatten, omit } from 'lodash';\nimport { put, all, select } from 'redux-saga/effects';\nimport { performerCategories, performerService, videoService, productService, galleryService, earningService, payoutRequestService } from 'src/services';\nimport { photoService } from '@services/photo.service';\nimport { getPerformerCategoriesSuccess, getPerformerCategoriesFail, getPerformerCategories, searchPerformer, searchPerformerFail, searchPerformerSuccess, setPerformerSearching, updatePerformerProfile, updatePerformerProfileFail, updatePerformerProfileSuccess, setupdatingPerformerProfile, getPerformerDetails, getPerformerDetailsSuccess, getPerformerDetailsFail, setGettingPerformerDetails, getMyVideos, getMyVideosFail, getMyVideosSuccess, setgettingMyVideos, getMyProducts, getMyProductsSuccess, getMyProductsFail, setGettingMyProducts, getEarning, getEarningFail, getEarningSuccess, setGettingEarning, getMyPhotos, getMyPhotosSuccess, getMyPhotosFail, setgettingMyPhotos, getMyGalleries, getMyGalleriesSuccess, getMyGalleriesFail, setgettingMyGalleries, updatePaymentInfo, updateDirectDeposit, updateBitpay, updatePaxum, updateStreamingStatus, updateDefaultPrice, getPayoutRequest, setGettingPayoutRequest, getPayoutRequestSuccess, getPayoutRequestFail } from './actions';\nvar performerSaga = [{\n  on: getPerformerCategories,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return performerCategories.getList(data.payload);\n\n          case 3:\n            resp = _context.sent;\n            _context.next = 6;\n            return put(getPerformerCategoriesSuccess(resp.data));\n\n          case 6:\n            _context.next = 15;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 12;\n            return Promise.resolve(_context.t0);\n\n          case 12:\n            error = _context.sent;\n            _context.next = 15;\n            return put(getPerformerCategoriesFail(error));\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 8]]);\n  })\n}, {\n  on: searchPerformer,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, currentPerformer, data, total, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return put(setPerformerSearching());\n\n          case 3:\n            _context2.next = 5;\n            return performerService.search(action.payload);\n\n          case 5:\n            resp = _context2.sent;\n            _context2.next = 8;\n            return select(function (state) {\n              return state.performer.current;\n            });\n\n          case 8:\n            currentPerformer = _context2.sent;\n            data = resp.data.data.filter(function (p) {\n              return p._id !== currentPerformer._id;\n            });\n            total = currentPerformer !== null && currentPerformer !== void 0 && currentPerformer._id ? resp.data.total - 1 : resp.data.total;\n            _context2.next = 13;\n            return put(searchPerformerSuccess({\n              data: data,\n              total: total\n            }));\n\n          case 13:\n            _context2.next = 22;\n            break;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 19;\n            return Promise.resolve(_context2.t0);\n\n          case 19:\n            error = _context2.sent;\n            _context2.next = 22;\n            return put(searchPerformerFail(error));\n\n          case 22:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 15]]);\n  })\n}, {\n  on: updatePerformerProfile,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context3.next = 5;\n            return performerService.updateMe(data.payload);\n\n          case 5:\n            resp = _context3.sent;\n            _context3.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context3.next = 17;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.next = 14;\n            return Promise.resolve(_context3.t0);\n\n          case 14:\n            err = _context3.sent;\n            _context3.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getPerformerDetails,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var _yield$all, _yield$all2, performerResponse, performerProductReponse, performerVideoResponse, performerGalleryResponse, relatedPerformerResponse, products, videos, galleries, err;\n\n    return _regeneratorRuntime.wrap(function worker$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return put(setGettingPerformerDetails());\n\n          case 3:\n            _context4.next = 5;\n            return all([performerService.details(data.payload.username), productService.search({\n              performerId: data.payload._id,\n              status: 'active'\n            }), videoService.search({\n              performerId: data.payload._id,\n              status: 'active'\n            }), galleryService.search({\n              performerId: data.payload._id,\n              status: 'active'\n            }, false), performerService.search({\n              status: 'active',\n              excludedId: data.payload._id,\n              limit: 12\n            })]);\n\n          case 5:\n            _yield$all = _context4.sent;\n            _yield$all2 = _slicedToArray(_yield$all, 5);\n            performerResponse = _yield$all2[0];\n            performerProductReponse = _yield$all2[1];\n            performerVideoResponse = _yield$all2[2];\n            performerGalleryResponse = _yield$all2[3];\n            relatedPerformerResponse = _yield$all2[4];\n            products = {};\n            videos = {};\n            galleries = {};\n            performerProductReponse.data.data.forEach(function (p) {\n              return products[p._id] = p;\n            });\n            performerVideoResponse.data.data.forEach(function (v) {\n              return videos[v._id] = v;\n            });\n            performerGalleryResponse.data.data.forEach(function (g) {\n              return galleries[g._id] = g;\n            });\n            _context4.next = 20;\n            return put(getPerformerDetailsSuccess({\n              performer: _objectSpread(_objectSpread({}, performerResponse.data), {}, {\n                products: performerProductReponse.data.data.map(function (p) {\n                  return p._id;\n                }),\n                videos: performerVideoResponse.data.data.map(function (v) {\n                  return v._id;\n                }),\n                galleries: performerGalleryResponse.data.data.map(function (g) {\n                  return g._id;\n                }),\n                relatedPerformers: relatedPerformerResponse.data.data\n              }),\n              // photos,\n              videos: videos,\n              products: products,\n              galleries: galleries\n            }));\n\n          case 20:\n            _context4.next = 29;\n            break;\n\n          case 22:\n            _context4.prev = 22;\n            _context4.t0 = _context4[\"catch\"](0);\n            _context4.next = 26;\n            return Promise.resolve(_context4.t0);\n\n          case 26:\n            err = _context4.sent;\n            _context4.next = 29;\n            return put(getPerformerDetailsFail(err));\n\n          case 29:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, worker, null, [[0, 22]]);\n  })\n}, {\n  on: getMyProducts,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return put(setGettingMyProducts());\n\n          case 3:\n            _context5.next = 5;\n            return performerService.myProduct(action.payload);\n\n          case 5:\n            resp = _context5.sent;\n            _context5.next = 8;\n            return put(getMyProductsSuccess(resp.data));\n\n          case 8:\n            _context5.next = 17;\n            break;\n\n          case 10:\n            _context5.prev = 10;\n            _context5.t0 = _context5[\"catch\"](0);\n            _context5.next = 14;\n            return Promise.resolve(_context5.t0);\n\n          case 14:\n            err = _context5.sent;\n            _context5.next = 17;\n            return put(getMyProductsFail(err));\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getEarning,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var difDateQuery, earning, _action$payload, fromDate, toDate, query, _yield$all3, _yield$all4, resp, stats, err;\n\n    return _regeneratorRuntime.wrap(function worker$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return put(setGettingEarning());\n\n          case 3:\n            difDateQuery = false;\n            _context6.next = 6;\n            return select(function (state) {\n              return state.performer.earning;\n            });\n\n          case 6:\n            earning = _context6.sent;\n            _action$payload = action.payload, fromDate = _action$payload.fromDate, toDate = _action$payload.toDate;\n            query = omit(action.payload, ['fromDate', 'toDate']);\n\n            if (fromDate && toDate) {\n              query.fromDate = fromDate;\n              query.toDate = toDate;\n            }\n\n            if (earning.toDate !== toDate || earning.fromDate !== fromDate) difDateQuery = true;\n            _context6.next = 13;\n            return all([earningService.search(query), earning.stats && !difDateQuery ? earning.stats : earningService.stats(query)]);\n\n          case 13:\n            _yield$all3 = _context6.sent;\n            _yield$all4 = _slicedToArray(_yield$all3, 2);\n            resp = _yield$all4[0];\n            stats = _yield$all4[1];\n            _context6.next = 19;\n            return put(getEarningSuccess(_objectSpread(_objectSpread({}, query), {}, {\n              stats: stats,\n              data: resp.data\n            })));\n\n          case 19:\n            _context6.next = 28;\n            break;\n\n          case 21:\n            _context6.prev = 21;\n            _context6.t0 = _context6[\"catch\"](0);\n            _context6.next = 25;\n            return Promise.resolve(_context6.t0);\n\n          case 25:\n            err = _context6.sent;\n            _context6.next = 28;\n            return put(getEarningFail(err));\n\n          case 28:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, worker, null, [[0, 21]]);\n  })\n}, {\n  on: getPayoutRequest,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var _yield$all5, _yield$all6, resp, err;\n\n    return _regeneratorRuntime.wrap(function worker$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return put(setGettingPayoutRequest());\n\n          case 3:\n            _context7.next = 5;\n            return all([payoutRequestService.search(action.payload)]);\n\n          case 5:\n            _yield$all5 = _context7.sent;\n            _yield$all6 = _slicedToArray(_yield$all5, 1);\n            resp = _yield$all6[0];\n            _context7.next = 10;\n            return put(getPayoutRequestSuccess(resp.data));\n\n          case 10:\n            _context7.next = 19;\n            break;\n\n          case 12:\n            _context7.prev = 12;\n            _context7.t0 = _context7[\"catch\"](0);\n            _context7.next = 16;\n            return Promise.resolve(_context7.t0);\n\n          case 16:\n            err = _context7.sent;\n            _context7.next = 19;\n            return put(getPayoutRequestFail(err));\n\n          case 19:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, worker, null, [[0, 12]]);\n  })\n}, {\n  on: getMyVideos,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return put(setgettingMyVideos());\n\n          case 3:\n            _context8.next = 5;\n            return videoService.myVideos(action.payload);\n\n          case 5:\n            resp = _context8.sent;\n            _context8.next = 8;\n            return put(getMyVideosSuccess(resp.data));\n\n          case 8:\n            _context8.next = 17;\n            break;\n\n          case 10:\n            _context8.prev = 10;\n            _context8.t0 = _context8[\"catch\"](0);\n            _context8.next = 14;\n            return Promise.resolve(_context8.t0);\n\n          case 14:\n            err = _context8.sent;\n            _context8.next = 17;\n            return put(getMyVideosFail(err));\n\n          case 17:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getMyPhotos,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return put(setgettingMyPhotos());\n\n          case 3:\n            _context9.next = 5;\n            return photoService.myPhotos(action.payload);\n\n          case 5:\n            resp = _context9.sent;\n            _context9.next = 8;\n            return put(getMyPhotosSuccess(resp.data));\n\n          case 8:\n            _context9.next = 17;\n            break;\n\n          case 10:\n            _context9.prev = 10;\n            _context9.t0 = _context9[\"catch\"](0);\n            _context9.next = 14;\n            return Promise.resolve(_context9.t0);\n\n          case 14:\n            err = _context9.sent;\n            _context9.next = 17;\n            return put(getMyPhotosFail(err));\n\n          case 17:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: getMyGalleries,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return put(setgettingMyGalleries());\n\n          case 3:\n            _context10.next = 5;\n            return galleryService.search(action.payload);\n\n          case 5:\n            resp = _context10.sent;\n            _context10.next = 8;\n            return put(getMyGalleriesSuccess(resp.data));\n\n          case 8:\n            _context10.next = 17;\n            break;\n\n          case 10:\n            _context10.prev = 10;\n            _context10.t0 = _context10[\"catch\"](0);\n            _context10.next = 14;\n            return Promise.resolve(_context10.t0);\n\n          case 14:\n            err = _context10.sent;\n            _context10.next = 17;\n            return put(getMyGalleriesFail(err));\n\n          case 17:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updatePaymentInfo,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.prev = 0;\n            _context11.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context11.next = 5;\n            return performerService.updatePaymentInfo(action.payload);\n\n          case 5:\n            resp = _context11.sent;\n            _context11.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context11.next = 17;\n            break;\n\n          case 10:\n            _context11.prev = 10;\n            _context11.t0 = _context11[\"catch\"](0);\n            _context11.next = 14;\n            return Promise.resolve(_context11.t0);\n\n          case 14:\n            err = _context11.sent;\n            _context11.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateDirectDeposit,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context12.next = 5;\n            return performerService.updateDirectDepost(action.payload);\n\n          case 5:\n            resp = _context12.sent;\n            _context12.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context12.next = 17;\n            break;\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            _context12.next = 14;\n            return Promise.resolve(_context12.t0);\n\n          case 14:\n            err = _context12.sent;\n            _context12.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateBitpay,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.prev = 0;\n            _context13.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context13.next = 5;\n            return performerService.updateBitpay(action.payload);\n\n          case 5:\n            resp = _context13.sent;\n            _context13.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context13.next = 17;\n            break;\n\n          case 10:\n            _context13.prev = 10;\n            _context13.t0 = _context13[\"catch\"](0);\n            _context13.next = 14;\n            return Promise.resolve(_context13.t0);\n\n          case 14:\n            err = _context13.sent;\n            _context13.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updatePaxum,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.prev = 0;\n            _context14.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context14.next = 5;\n            return performerService.updatePaxum(action.payload);\n\n          case 5:\n            resp = _context14.sent;\n            _context14.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context14.next = 17;\n            break;\n\n          case 10:\n            _context14.prev = 10;\n            _context14.t0 = _context14[\"catch\"](0);\n            _context14.next = 14;\n            return Promise.resolve(_context14.t0);\n\n          case 14:\n            err = _context14.sent;\n            _context14.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateStreamingStatus,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.prev = 0;\n            _context15.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context15.next = 5;\n            return performerService.updateStreamingStatus({\n              status: action.payload\n            });\n\n          case 5:\n            resp = _context15.sent;\n            _context15.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context15.next = 17;\n            break;\n\n          case 10:\n            _context15.prev = 10;\n            _context15.t0 = _context15[\"catch\"](0);\n            _context15.next = 14;\n            return Promise.resolve(_context15.t0);\n\n          case 14:\n            err = _context15.sent;\n            _context15.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updateDefaultPrice,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, err;\n    return _regeneratorRuntime.wrap(function worker$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            _context16.prev = 0;\n            _context16.next = 3;\n            return put(setupdatingPerformerProfile());\n\n          case 3:\n            _context16.next = 5;\n            return performerService.updateDefaultPrice(action.payload);\n\n          case 5:\n            resp = _context16.sent;\n            _context16.next = 8;\n            return put(updatePerformerProfileSuccess(resp.data));\n\n          case 8:\n            _context16.next = 17;\n            break;\n\n          case 10:\n            _context16.prev = 10;\n            _context16.t0 = _context16[\"catch\"](0);\n            _context16.next = 14;\n            return Promise.resolve(_context16.t0);\n\n          case 14:\n            err = _context16.sent;\n            _context16.next = 17;\n            return put(updatePerformerProfileFail(err));\n\n          case 17:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}];\nexport default flatten([createSagas(performerSaga)]);","map":null,"metadata":{},"sourceType":"module"}