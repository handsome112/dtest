{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Button } from 'antd';\nimport { LeftCircleFilled, RightCircleFilled } from '@ant-design/icons';\nimport Router from 'next/router';\nimport PerformerGrid from './performer-grid';\nimport './performer-carousel.less';\nexport default (function (_ref) {\n  var performers = _ref.performers,\n      searching = _ref.searching,\n      success = _ref.success;\n  var ref = React.useRef(null);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      paddleShowing = _React$useState2[0],\n      setPaddleShowing = _React$useState2[1];\n\n  React.useEffect(function () {\n    var performerListElement = document.getElementsByClassName('performer-grid');\n\n    if (performerListElement.length && performerListElement[0].clientWidth < performerListElement[0].scrollWidth) {\n      setPaddleShowing(true);\n    }\n  }, [performers]);\n\n  var scrollTo = function scrollTo(width) {\n    var e = ref.current;\n    e.scroll({\n      left: width,\n      behavior: 'smooth'\n    });\n  };\n\n  return !searching && success && __jsx(\"div\", {\n    className: \"performer-carousel\"\n  }, __jsx(\"div\", {\n    className: \"carousel-header\"\n  }, __jsx(\"span\", {\n    className: \"carousel-title\"\n  }, \"Related Cams\"), __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return Router.push('/');\n    }\n  }, \"See all Items\")), __jsx(LeftCircleFilled, {\n    className: \"left-paddle paddle\",\n    hidden: !paddleShowing,\n    onClick: function onClick() {\n      return scrollTo(-ref.current.clientWidth);\n    }\n  }), __jsx(PerformerGrid, {\n    total: performers ? performers.length : 0,\n    data: performers,\n    success: success,\n    searching: searching\n  }), __jsx(RightCircleFilled, {\n    hidden: !paddleShowing,\n    className: \"right-paddle paddle\",\n    onClick: function onClick() {\n      return scrollTo(ref.current.clientWidth);\n    }\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}