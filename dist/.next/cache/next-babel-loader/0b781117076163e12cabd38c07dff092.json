{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef } from 'react';\nimport { Alert, InputNumber, Radio, Space } from 'antd';\nimport './content.less';\nvar tokens = [20, 50, 100, 200];\n\nvar SendTipContent = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SendTipContent, _PureComponent);\n\n  var _super = _createSuper(SendTipContent);\n\n  function SendTipContent(props) {\n    var _this;\n\n    _classCallCheck(this, SendTipContent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNumberRef\", void 0);\n\n    _this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 1\n    };\n    return _this;\n  }\n\n  _createClass(SendTipContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.inputNumberRef = /*#__PURE__*/createRef();\n    }\n  }, {\n    key: \"onRadioChange\",\n    value: function onRadioChange(e) {\n      var setDisableOk = this.props.setDisableOk;\n      setDisableOk(false);\n      this.setState({\n        radioValue: e.target.value\n      });\n      if (e.target.value > 0) this.setState({\n        token: e.target.value\n      });\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(value) {\n      var setDisableOk = this.props.setDisableOk;\n      setDisableOk(false);\n\n      if (typeof value !== 'number') {\n        return;\n      }\n\n      if (value <= 0 || value % 1 !== 0) {\n        setDisableOk(true);\n        this.setState({\n          errorMessage: 'Token must be positive interger number!'\n        });\n        return;\n      }\n\n      this.setState({\n        token: value,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"getValueToken\",\n    value: function getValueToken() {\n      var token = this.state.token;\n      return token;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          radioValue = _this$state.radioValue,\n          token = _this$state.token,\n          errorMessage = _this$state.errorMessage;\n      return __jsx(\"div\", null, __jsx(\"strong\", null, \"Tipping A Model Is Simple!\"), __jsx(\"h3\", null, \"How Many Tokens Would You Like To Tip?\"), errorMessage && __jsx(Alert, {\n        type: \"error\",\n        message: errorMessage\n      }), __jsx(Radio.Group, {\n        value: radioValue,\n        defaultValue: radioValue,\n        onChange: this.onRadioChange.bind(this),\n        size: \"large\"\n      }, tokens.map(function (v) {\n        return __jsx(Radio, {\n          value: v,\n          key: v\n        }, __jsx(Space, {\n          className: \"token-radio\",\n          align: \"start\"\n        }, __jsx(\"span\", null, \"\".concat(v, \" Tokens\")), __jsx(\"span\", {\n          className: \"tip-description\"\n        }, \"Tip The Model \".concat(v, \" Tokens!\"))));\n      }), __jsx(Radio, {\n        value: -1\n      }, __jsx(Space, {\n        className: \"token-radio\"\n      }, __jsx(\"span\", null, \"Custom Amount\"), __jsx(InputNumber, {\n        className: \"amount\",\n        ref: this.inputNumberRef,\n        onFocus: function onFocus() {\n          return _this2.setState({\n            radioValue: -1\n          });\n        },\n        type: \"number\",\n        min: 1,\n        max: 1000,\n        step: 10,\n        placeholder: \"Enter Amount\",\n        onChange: this.onInputChange.bind(this),\n        value: token\n      })))));\n    }\n  }]);\n\n  return SendTipContent;\n}(PureComponent);\n\nexport { SendTipContent as default };","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/streaming/tip/content.tsx"],"names":["PureComponent","createRef","Alert","InputNumber","Radio","Space","tokens","SendTipContent","props","state","radioValue","errorMessage","token","inputNumberRef","e","setDisableOk","setState","target","value","onRadioChange","bind","map","v","onInputChange"],"mappings":"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","sourcesContent":["import { PureComponent, createRef } from 'react';\nimport {\n  Alert,\n  InputNumber, Radio, Space\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nimport './content.less';\n\nconst tokens = [20, 50, 100, 200];\n\ninterface IProps {\n  setDisableOk: Function;\n}\n\ninterface IStates {\n  radioValue: string | number;\n  errorMessage: string;\n  token: number;\n}\n\nexport default class SendTipContent extends PureComponent<IProps, IStates> {\n  private inputNumberRef;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 1\n    };\n  }\n\n  componentDidMount() {\n    this.inputNumberRef = createRef();\n  }\n\n  onRadioChange(e: RadioChangeEvent) {\n    const { setDisableOk } = this.props;\n    setDisableOk(false);\n    this.setState({ radioValue: e.target.value });\n    if (e.target.value > 0) this.setState({ token: e.target.value });\n  }\n\n  onInputChange(value: number) {\n    const { setDisableOk } = this.props;\n    setDisableOk(false);\n    if (typeof (value) !== 'number') {\n      return;\n    }\n    if (value <= 0 || value % 1 !== 0) {\n      setDisableOk(true);\n      this.setState({ errorMessage: 'Token must be positive interger number!' });\n      return;\n    }\n    this.setState({ token: value, errorMessage: '' });\n  }\n\n  getValueToken() {\n    const { token } = this.state;\n    return token;\n  }\n\n  render() {\n    const { radioValue, token, errorMessage } = this.state;\n    return (\n      <div>\n        <strong>Tipping A Model Is Simple!</strong>\n        <h3>How Many Tokens Would You Like To Tip?</h3>\n        {errorMessage && <Alert type=\"error\" message={errorMessage} />}\n        <Radio.Group\n          value={radioValue}\n          defaultValue={radioValue}\n          onChange={this.onRadioChange.bind(this)}\n          size=\"large\"\n        >\n          {tokens.map((v) => (\n            <Radio value={v} key={v}>\n              <Space className=\"token-radio\" align=\"start\">\n                <span>{`${v} Tokens`}</span>\n                <span className=\"tip-description\">{`Tip The Model ${v} Tokens!`}</span>\n              </Space>\n            </Radio>\n          ))}\n          <Radio value={-1}>\n            <Space className=\"token-radio\">\n              <span>Custom Amount</span>\n              <InputNumber\n                className=\"amount\"\n                ref={this.inputNumberRef}\n                onFocus={() => this.setState({ radioValue: -1 })}\n                type=\"number\"\n                min={1}\n                max={1000}\n                step={10}\n                placeholder=\"Enter Amount\"\n                onChange={this.onInputChange.bind(this)}\n                value={token}\n              />\n            </Space>\n          </Radio>\n        </Radio.Group>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}