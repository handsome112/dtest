{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { formatDate } from 'src/lib';\nimport { Table, Button } from 'antd';\nimport React from 'react';\n\nvar StudioCommissionsTable = function StudioCommissionsTable(_ref) {\n  var data = _ref.data,\n      searching = _ref.searching,\n      total = _ref.total,\n      pageSize = _ref.pageSize,\n      update = _ref.update,\n      onChange = _ref.onChange;\n  var columns = [{\n    title: 'Username',\n    key: 'username',\n    dataIndex: 'username'\n  }, {\n    title: 'Commission',\n    key: 'commission',\n    dataIndex: 'commissionSetting',\n    render: function render(commissionSetting) {\n      var memberCommission = commissionSetting.memberCommission;\n      return __jsx(\"span\", null, memberCommission, \"%\");\n    }\n  }, {\n    title: 'Created At',\n    key: 'studioCommission',\n    dataIndex: 'createdAt',\n    render: function render(createdAt) {\n      return __jsx(\"span\", null, formatDate(createdAt));\n    }\n  }, {\n    title: 'Actions',\n    key: 'actions',\n    dataIndex: '_id',\n    render: function render(_id) {\n      return __jsx(Button, {\n        type: \"primary\",\n        onClick: function onClick() {\n          return update(_id);\n        }\n      }, \"Update\");\n    }\n  }];\n  var dataSource = data.map(function (d) {\n    return _objectSpread(_objectSpread({}, d), {}, {\n      key: d._id\n    });\n  });\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    loading: searching,\n    pagination: {\n      pageSize: pageSize,\n      total: total\n    },\n    onChange: onChange,\n    scroll: {\n      x: true\n    }\n  });\n};\n\nexport default StudioCommissionsTable;","map":null,"metadata":{},"sourceType":"module"}