{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport { Dropdown, Menu, message } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { getResponseError } from '@lib/utils';\nimport { performerService } from '@services/perfomer.service';\n\nconst StreamingChatUsers = ({\n  loggedIn,\n  members,\n  currentPerformer,\n  placeholderAvatarUrl\n}) => {\n  const blockUser = React.useCallback(async ({\n    key\n  }) => {\n    if (!window.confirm('Are you sure to block this user?')) return;\n\n    try {\n      await performerService.geoBlock({\n        userIds: [key]\n      });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    }\n  }, [members]);\n  return __jsx(\"div\", {\n    className: \"conversation-users\"\n  }, __jsx(\"div\", {\n    className: \"users\"\n  }, members.length > 0 && members.map(m => __jsx(\"div\", {\n    className: \"user\",\n    key: m._id\n  }, loggedIn && currentPerformer && currentPerformer._id ? __jsx(Dropdown, {\n    overlay: __jsx(Menu, null, __jsx(Menu.Item, {\n      onClick: blockUser,\n      key: m._id\n    }, __jsx(\"span\", null, __jsx(StopOutlined, {\n      size: 16\n    }), ' ', \"Block this user\"))),\n    placement: \"bottomLeft\",\n    trigger: ['hover', 'click']\n  }, __jsx(\"span\", {\n    className: \"username\"\n  }, __jsx(\"img\", {\n    alt: \"avatar\",\n    src: (m === null || m === void 0 ? void 0 : m.avatar) || placeholderAvatarUrl,\n    width: \"35px\",\n    style: {\n      borderRadius: '50%',\n      marginRight: '5px'\n    }\n  }), m.username, ' ', __jsx(DownOutlined, null))) : __jsx(\"span\", {\n    className: \"username\"\n  }, __jsx(\"img\", {\n    alt: \"avatar\",\n    src: (m === null || m === void 0 ? void 0 : m.avatar) || '/default-user-icon.png',\n    width: \"35px\",\n    style: {\n      borderRadius: '50%',\n      marginRight: '5px'\n    }\n  }), m.username)))));\n};\n\nconst mapStates = state => ({\n  placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n});\n\nexport default connect(mapStates)(StreamingChatUsers);","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/stream-chat/UserList.tsx"],"names":["React","Dropdown","Menu","message","DownOutlined","StopOutlined","connect","getResponseError","performerService","StreamingChatUsers","loggedIn","members","currentPerformer","placeholderAvatarUrl","blockUser","useCallback","key","window","confirm","geoBlock","userIds","e","error","Promise","resolve","length","map","m","_id","avatar","borderRadius","marginRight","username","mapStates","state","ui"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dropdown, Menu, message } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { IPerformer, IUser } from 'src/interfaces';\nimport { connect } from 'react-redux';\nimport { getResponseError } from '@lib/utils';\nimport { performerService } from '@services/perfomer.service';\n\ninterface P {\n  loggedIn: Boolean;\n  members: Array<IUser>;\n  currentPerformer: IPerformer;\n  placeholderAvatarUrl: string;\n}\n\nconst StreamingChatUsers = ({\n  loggedIn,\n  members,\n  currentPerformer,\n  placeholderAvatarUrl\n}: P) => {\n  const blockUser = React.useCallback(async ({ key }) => {\n    if (!window.confirm('Are you sure to block this user?')) return;\n    try {\n      await performerService.geoBlock({ userIds: [key] });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    }\n  }, [members]);\n  return (\n    <div className=\"conversation-users\">\n      <div className=\"users\">\n        {members.length > 0\n        && members.map((m) => (\n          <div className=\"user\" key={m._id}>\n            {loggedIn && currentPerformer && currentPerformer._id ? (\n              <Dropdown\n                overlay={(\n                  <Menu>\n                    <Menu.Item onClick={blockUser} key={m._id}>\n                      <span>\n                        <StopOutlined size={16} />\n                        {' '}\n                        Block this user\n                      </span>\n                    </Menu.Item>\n                  </Menu>\n                )}\n                placement=\"bottomLeft\"\n                trigger={['hover', 'click']}\n              >\n                <span className=\"username\">\n                  <img\n                    alt=\"avatar\"\n                    src={m?.avatar || placeholderAvatarUrl}\n                    width=\"35px\"\n                    style={{ borderRadius: '50%', marginRight: '5px' }}\n                  />\n                  {m.username}\n                  {' '}\n                  <DownOutlined />\n                </span>\n              </Dropdown>\n            ) : (\n              <span className=\"username\">\n                <img\n                  alt=\"avatar\"\n                  src={m?.avatar || '/default-user-icon.png'}\n                  width=\"35px\"\n                  style={{ borderRadius: '50%', marginRight: '5px' }}\n                />\n                {m.username}\n              </span>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStates = (state: any) => ({\n  placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n});\nexport default connect(mapStates)(StreamingChatUsers);\n"]},"metadata":{},"sourceType":"module"}