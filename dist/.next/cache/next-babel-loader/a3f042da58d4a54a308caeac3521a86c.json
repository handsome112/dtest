{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { APIRequest } from './api-request';\nexport var StudioService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(StudioService, _APIRequest);\n\n  var _super = _createSuper(StudioService);\n\n  function StudioService() {\n    _classCallCheck(this, StudioService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StudioService, [{\n    key: \"me\",\n    value: function me(headers) {\n      return this.get('/studio/me', headers);\n    }\n  }, {\n    key: \"update\",\n    value: function update(payload) {\n      return this.put('/studio/update', payload);\n    }\n  }, {\n    key: \"updatePaymentInfo\",\n    value: function updatePaymentInfo(payload) {\n      return this.post('/studio/bank-transfer/update', payload);\n    }\n  }, {\n    key: \"updateDirectDepost\",\n    value: function updateDirectDepost(payload) {\n      return this.post('/studio/direct-deposit/update', payload);\n    }\n  }, {\n    key: \"updatePaxum\",\n    value: function updatePaxum(payload) {\n      return this.post('/studio/paxum/update', payload);\n    }\n  }, {\n    key: \"updateBitpay\",\n    value: function updateBitpay(payload) {\n      return this.post('/studio/bitpay/update', payload);\n    }\n  }, {\n    key: \"getCommission\",\n    value: function getCommission() {\n      return this.get('/settings/studio/commission');\n    }\n  }, {\n    key: \"addModel\",\n    value: function addModel(payload) {\n      return this.post('/studio/members', payload);\n    }\n  }, {\n    key: \"getMembers\",\n    value: function getMembers(params) {\n      return this.get(this.buildUrl('/studio/members', params));\n    }\n  }, {\n    key: \"getMemberCommissions\",\n    value: function getMemberCommissions(params) {\n      return this.get(this.buildUrl('/studio/commission', params));\n    }\n  }, {\n    key: \"updateMemberCommission\",\n    value: function updateMemberCommission(id, commission) {\n      return this.put(\"/studio/commission/member/\".concat(id), {\n        commission: commission\n      });\n    }\n  }, {\n    key: \"getPerformerRequest\",\n    value: function getPerformerRequest(params) {\n      return this.get(this.buildUrl('/payout-requests/studio/performer-request', params));\n    }\n  }, {\n    key: \"updateStatusPerformerRequest\",\n    value: function updateStatusPerformerRequest(id, payload) {\n      return this.put(\"/payout-requests/studio/update/\".concat(id), _objectSpread({}, payload));\n    }\n  }, {\n    key: \"updateMemberStatus\",\n    value: function updateMemberStatus(id, status) {\n      return this.post(\"/studio/members/\".concat(id, \"/\").concat(status));\n    }\n  }, {\n    key: \"stats\",\n    value: function stats() {\n      return this.get('/studio/stats');\n    }\n  }, {\n    key: \"getDocumentsUploadUrl\",\n    value: function getDocumentsUploadUrl() {\n      return \"\".concat(process.env.NEXT_PUBLIC_API_ENDPOINT, \"/studio/documents/upload\");\n    }\n  }]);\n\n  return StudioService;\n}(APIRequest);\nexport var studioService = new StudioService();","map":null,"metadata":{},"sourceType":"module"}