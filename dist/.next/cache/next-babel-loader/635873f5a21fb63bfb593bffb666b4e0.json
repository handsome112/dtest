{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/* eslint-disable no-shadow */\nimport React from 'react';\nimport { Card, message, Row, Col } from 'antd';\nimport { performerService, studioService } from 'src/services';\nimport { getResponseError } from '@lib/utils';\nexport let ROLE;\n\n(function (ROLE) {\n  ROLE[\"PERFORMER\"] = \"perfomrer\";\n  ROLE[\"USER\"] = \"user\";\n  ROLE[\"STUDIO\"] = \"studio\";\n})(ROLE || (ROLE = {}));\n\nconst DataMap = [{\n  lable: 'Tip Commission',\n  key: 'tipCommission'\n}, {\n  lable: 'Private Call Commission',\n  key: 'privateCallCommission'\n}, {\n  lable: 'Group Call Commission',\n  key: 'groupCallCommission'\n}, {\n  lable: 'Product Commission',\n  key: 'productCommission'\n}, {\n  lable: 'Gallery Commission',\n  key: 'albumCommission'\n}, {\n  lable: 'Video Commission',\n  key: 'videoCommission'\n}];\nconst style = {\n  headStyle: {\n    color: '#ff0066'\n  },\n  bodyStyle: {\n    color: '#000000'\n  }\n};\n\nconst CommissionCard = ({\n  role\n}) => {\n  const [commission, setCommission] = React.useState(null);\n  React.useEffect(() => {\n    const getCommission = async () => {\n      try {\n        const resp = role === ROLE.STUDIO ? await studioService.getCommission() : await performerService.getCommission();\n        setCommission(resp.data);\n      } catch (e) {\n        const err = await Promise.resolve(e);\n        message.error(getResponseError(err));\n      }\n    };\n\n    getCommission();\n  }, []);\n  return __jsx(React.Fragment, null, commission && (typeof commission === 'number' ? __jsx(Row, null, __jsx(Col, {\n    xs: 24,\n    sm: 6\n  }, __jsx(Card, _extends({}, style, {\n    title: __jsx(\"span\", null, \"Commission\"),\n    extra: __jsx(\"span\", {\n      style: {\n        color: '#ff0066'\n      }\n    }, commission, \"%\")\n  }), \"Hint: When a member spends paid tokens with you, you will get this commission.\"))) : __jsx(Row, {\n    gutter: [10, 10]\n  }, DataMap.map(m => __jsx(Col, {\n    xs: 24,\n    sm: 8,\n    key: m.key\n  }, __jsx(Card, _extends({}, style, {\n    title: __jsx(\"span\", null, m.lable),\n    extra: __jsx(\"span\", {\n      style: {\n        color: '#ff0066'\n      }\n    }, commission[m.key], \"%\")\n  }), \"Hint: When a member spends paid tokens with you, you will get this commission.\"))))));\n};\n\nCommissionCard.defaultProps = {\n  role: ''\n};\nexport default CommissionCard;","map":null,"metadata":{},"sourceType":"module"}