{"ast":null,"code":"import moment from 'moment';\nexport function formatDate(date, format = 'DD/MM/YYYY HH:mm:ss') {\n  return moment(date).format(format);\n}\nexport function converDuration(duration, format = 'HH:mm') {\n  return moment.utc(moment.duration(duration, 'milliseconds').asMilliseconds()).format(format);\n}\nexport function parseAge(date, format = 'MMMM DD, YYYY') {\n  return moment(date).format(format);\n}\nexport function getAge(d) {\n  if (!d) return '';\n  const age = new Date().getFullYear() - new Date(d).getFullYear();\n  return age;\n}\nexport function formatDuration(s) {\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s - hours * 3600) / 60);\n  const seconds = s - hours * 3600 - minutes * 60;\n  return `${hours < 10 ? '0' : ''}${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n}","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/lib/date.ts"],"names":["moment","formatDate","date","format","converDuration","duration","utc","asMilliseconds","parseAge","getAge","d","age","Date","getFullYear","formatDuration","s","hours","Math","floor","minutes","seconds"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAgCC,MAAM,GAAG,qBAAzC,EAAgE;AACrE,SAAOH,MAAM,CAACE,IAAD,CAAN,CAAaC,MAAb,CAAoBA,MAApB,CAAP;AACD;AAED,OAAO,SAASC,cAAT,CAAwBC,QAAxB,EAA0CF,MAAM,GAAG,OAAnD,EAA4D;AACjE,SAAOH,MAAM,CACVM,GADI,CACAN,MAAM,CAACK,QAAP,CAAgBA,QAAhB,EAA0B,cAA1B,EAA0CE,cAA1C,EADA,EAEJJ,MAFI,CAEGA,MAFH,CAAP;AAGD;AAED,OAAO,SAASK,QAAT,CAAkBN,IAAlB,EAAgCC,MAAM,GAAG,eAAzC,EAA0D;AAC/D,SAAOH,MAAM,CAACE,IAAD,CAAN,CAAaC,MAAb,CAAoBA,MAApB,CAAP;AACD;AAED,OAAO,SAASM,MAAT,CAAgBC,CAAhB,EAA2B;AAChC,MAAI,CAACA,CAAL,EAAQ,OAAO,EAAP;AACR,QAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,WAAX,KAA2B,IAAID,IAAJ,CAASF,CAAT,EAAYG,WAAZ,EAAvC;AACA,SAAOF,GAAP;AACD;AAED,OAAO,SAASG,cAAT,CAAwBC,CAAxB,EAAmC;AACxC,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAC,GAAG,IAAf,CAAd;AACA,QAAMI,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAW,CAACH,CAAC,GAAGC,KAAK,GAAG,IAAb,IAAqB,EAAhC,CAAhB;AACA,QAAMI,OAAO,GAAGL,CAAC,GAAGC,KAAK,GAAG,IAAZ,GAAmBG,OAAO,GAAG,EAA7C;AACA,SAAQ,GAAEH,KAAK,GAAG,EAAR,GAAa,GAAb,GAAmB,EAAG,GAAEA,KAAM,IACtCG,OAAO,GAAG,EAAV,GAAe,GAAf,GAAqB,EACtB,GAAEA,OAAQ,IAAGC,OAAO,GAAG,EAAV,GAAe,GAAf,GAAqB,EAAG,GAAEA,OAAQ,EAFhD;AAGD","sourcesContent":["import moment from 'moment';\n\nexport function formatDate(date: Date, format = 'DD/MM/YYYY HH:mm:ss') {\n  return moment(date).format(format);\n}\n\nexport function converDuration(duration: number, format = 'HH:mm') {\n  return moment\n    .utc(moment.duration(duration, 'milliseconds').asMilliseconds())\n    .format(format);\n}\n\nexport function parseAge(date: string, format = 'MMMM DD, YYYY') {\n  return moment(date).format(format);\n}\n\nexport function getAge(d: string) {\n  if (!d) return '';\n  const age = new Date().getFullYear() - new Date(d).getFullYear();\n  return age;\n}\n\nexport function formatDuration(s: number) {\n  const hours = Math.floor(s / 3600);\n  const minutes = Math.floor((s - hours * 3600) / 60);\n  const seconds = s - hours * 3600 - minutes * 60;\n  return `${hours < 10 ? '0' : ''}${hours}:${\n    minutes < 10 ? '0' : ''\n  }${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n}\n"]},"metadata":{},"sourceType":"module"}