{"ast":null,"code":"// https://github.com/ant-media/Ant-Media-Server/wiki/WebRTC-WebSocket-Messaging-Reference\n// eslint-disable-next-line no-shadow\nexport var WEBRTC_ADAPTOR_INFORMATIONS;\n\n(function (WEBRTC_ADAPTOR_INFORMATIONS) {\n  WEBRTC_ADAPTOR_INFORMATIONS[\"INITIALIZED\"] = \"initialized\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"AVAILABLE_DEVICES\"] = \"available_devices\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"PUBLISH_STARTED\"] = \"publish_started\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"PUBLISH_FINISHED\"] = \"publish_finished\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"SCREEN_SHARE_EXTENSION_AVAILABLE\"] = \"screen_share_extension_available\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"SCREEN_SHARE_STOPPED\"] = \"screen_share_stopped\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"CLOSED\"] = \"closed\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"PONG\"] = \"pong\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"REFRESH_CONNECTION\"] = \"refreshConnection\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"ICE_CONNECTION_STATE_CHANGED\"] = \"ice_connection_state_changed\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"UPDATED_STATS\"] = \"updated_stats\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"PLAY_FINISHED\"] = \"play_finished\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"PLAY_STARTED\"] = \"play_started\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"JOINED_THE_ROOM\"] = \"joinedTheRoom\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"STREAM_JOINED\"] = \"streamJoined\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"NEW_STREAM_AVAILABLE\"] = \"newStreamAvailable\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"STREAM_LEAVED\"] = \"streamLeaved\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"LEAVED_FROM_ROOM\"] = \"leavedFromRoom\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"STREAM_INFORMATION\"] = \"streamInformation\";\n  WEBRTC_ADAPTOR_INFORMATIONS[\"BITRATEMEASUREMENT\"] = \"bitrateMeasurement\";\n})(WEBRTC_ADAPTOR_INFORMATIONS || (WEBRTC_ADAPTOR_INFORMATIONS = {}));","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/antmedia/constants.ts"],"names":["WEBRTC_ADAPTOR_INFORMATIONS"],"mappings":"AAAA;AAEA;AACA,WAAYA,2BAAZ;;WAAYA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;AAAAA,EAAAA,2B;GAAAA,2B,KAAAA,2B","sourcesContent":["// https://github.com/ant-media/Ant-Media-Server/wiki/WebRTC-WebSocket-Messaging-Reference\n\n// eslint-disable-next-line no-shadow\nexport enum WEBRTC_ADAPTOR_INFORMATIONS {\n  // initialized: WebSocket connection is initialized successfully in this state.\n  INITIALIZED = 'initialized',\n\n  AVAILABLE_DEVICES = 'available_devices',\n\n  // publish_started: WebRTC stream publishing has been started in this state.\n  PUBLISH_STARTED = 'publish_started',\n\n  // publish_finished: WebRTC stream publishing has been finished in this state.\n  PUBLISH_FINISHED = 'publish_finished',\n\n  // screen_share_extension_available: Screen Share extension is available in this state.\n  SCREEN_SHARE_EXTENSION_AVAILABLE = 'screen_share_extension_available',\n\n  // screen_share_stopped: Screen Share is stopped in this state.\n  SCREEN_SHARE_STOPPED = 'screen_share_stopped',\n\n  // closed: WebSocket connection is closed in this state.\n  CLOSED = 'closed',\n\n  // pong: When client sent ping message, server answers pong message.\n  PONG = 'pong',\n\n  // refreshConnection: When WebSocket connection is refreshed and stream is published in this state.\n  REFRESH_CONNECTION = 'refreshConnection',\n\n  // ice_connection_state_changed: If Ice Connection is changed, server sends changed info.\n  ICE_CONNECTION_STATE_CHANGED = 'ice_connection_state_changed',\n\n  // updated_stats: When Peer stats are changed, server sends updated values.\n  UPDATED_STATS = 'updated_stats',\n\n  PLAY_FINISHED = 'play_finished',\n\n  PLAY_STARTED = 'play_started',\n\n  // joinedTheRoom: Called when WebSocket is connected. It has parameter that contains stream id for publishing and streams array in order to play the stream.\n  JOINED_THE_ROOM = 'joinedTheRoom',\n\n  // streamJoined: Called when a new stream is joined to the room. It has parameter about the stream id for playing.\n  STREAM_JOINED = 'streamJoined',\n\n  // newStreamAvailable: Called when a previously joined stream is ready to play.\n  NEW_STREAM_AVAILABLE = 'newStreamAvailable',\n\n  // streamLeaved: Called when a stream is leaved from the room.\n  STREAM_LEAVED = 'streamLeaved',\n\n  // leavedFromRoom: Called when this client is leaved from the room.\n  LEAVED_FROM_ROOM = 'leavedFromRoom',\n\n  STREAM_INFORMATION = 'streamInformation',\n\n  BITRATEMEASUREMENT = 'bitrateMeasurement'\n}\n"]},"metadata":{},"sourceType":"module"}