{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { PureComponent, createRef } from 'react';\nimport { Alert, InputNumber, Radio, Space } from 'antd';\nimport './content.less';\nconst tokens = [20, 50, 100, 200];\nexport default class SendTipContent extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"inputNumberRef\", void 0);\n\n    this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 1\n    };\n  }\n\n  componentDidMount() {\n    this.inputNumberRef = /*#__PURE__*/createRef();\n  }\n\n  onRadioChange(e) {\n    const {\n      setDisableOk\n    } = this.props;\n    setDisableOk(false);\n    this.setState({\n      radioValue: e.target.value\n    });\n    if (e.target.value > 0) this.setState({\n      token: e.target.value\n    });\n  }\n\n  onInputChange(value) {\n    const {\n      setDisableOk\n    } = this.props;\n    setDisableOk(false);\n\n    if (typeof value !== 'number') {\n      return;\n    }\n\n    if (value <= 0 || value % 1 !== 0) {\n      setDisableOk(true);\n      this.setState({\n        errorMessage: 'Token must be positive interger number!'\n      });\n      return;\n    }\n\n    this.setState({\n      token: value,\n      errorMessage: ''\n    });\n  }\n\n  getValueToken() {\n    const {\n      token\n    } = this.state;\n    return token;\n  }\n\n  render() {\n    const {\n      radioValue,\n      token,\n      errorMessage\n    } = this.state;\n    return __jsx(\"div\", null, __jsx(\"strong\", null, \"Tipping A Model Is Simple!\"), __jsx(\"h3\", null, \"How Many Tokens Would You Like To Tip?\"), errorMessage && __jsx(Alert, {\n      type: \"error\",\n      message: errorMessage\n    }), __jsx(Radio.Group, {\n      value: radioValue,\n      defaultValue: radioValue,\n      onChange: this.onRadioChange.bind(this),\n      size: \"large\"\n    }, tokens.map(v => __jsx(Radio, {\n      value: v,\n      key: v\n    }, __jsx(Space, {\n      className: \"token-radio\",\n      align: \"start\"\n    }, __jsx(\"span\", null, `${v} Tokens`), __jsx(\"span\", {\n      className: \"tip-description\"\n    }, `Tip The Model ${v} Tokens!`)))), __jsx(Radio, {\n      value: -1\n    }, __jsx(Space, {\n      className: \"token-radio\"\n    }, __jsx(\"span\", null, \"Custom Amount\"), __jsx(InputNumber, {\n      className: \"amount\",\n      ref: this.inputNumberRef,\n      onFocus: () => this.setState({\n        radioValue: -1\n      }),\n      type: \"number\",\n      min: 1,\n      max: 1000,\n      step: 10,\n      placeholder: \"Enter Amount\",\n      onChange: this.onInputChange.bind(this),\n      value: token\n    })))));\n  }\n\n}","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/streaming/tip/content.tsx"],"names":["PureComponent","createRef","Alert","InputNumber","Radio","Space","tokens","SendTipContent","constructor","props","state","radioValue","errorMessage","token","componentDidMount","inputNumberRef","onRadioChange","e","setDisableOk","setState","target","value","onInputChange","getValueToken","render","bind","map","v"],"mappings":"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","sourcesContent":["import { PureComponent, createRef } from 'react';\nimport {\n  Alert,\n  InputNumber, Radio, Space\n} from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nimport './content.less';\n\nconst tokens = [20, 50, 100, 200];\n\ninterface IProps {\n  setDisableOk: Function;\n}\n\ninterface IStates {\n  radioValue: string | number;\n  errorMessage: string;\n  token: number;\n}\n\nexport default class SendTipContent extends PureComponent<IProps, IStates> {\n  private inputNumberRef;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 1\n    };\n  }\n\n  componentDidMount() {\n    this.inputNumberRef = createRef();\n  }\n\n  onRadioChange(e: RadioChangeEvent) {\n    const { setDisableOk } = this.props;\n    setDisableOk(false);\n    this.setState({ radioValue: e.target.value });\n    if (e.target.value > 0) this.setState({ token: e.target.value });\n  }\n\n  onInputChange(value: number) {\n    const { setDisableOk } = this.props;\n    setDisableOk(false);\n    if (typeof (value) !== 'number') {\n      return;\n    }\n    if (value <= 0 || value % 1 !== 0) {\n      setDisableOk(true);\n      this.setState({ errorMessage: 'Token must be positive interger number!' });\n      return;\n    }\n    this.setState({ token: value, errorMessage: '' });\n  }\n\n  getValueToken() {\n    const { token } = this.state;\n    return token;\n  }\n\n  render() {\n    const { radioValue, token, errorMessage } = this.state;\n    return (\n      <div>\n        <strong>Tipping A Model Is Simple!</strong>\n        <h3>How Many Tokens Would You Like To Tip?</h3>\n        {errorMessage && <Alert type=\"error\" message={errorMessage} />}\n        <Radio.Group\n          value={radioValue}\n          defaultValue={radioValue}\n          onChange={this.onRadioChange.bind(this)}\n          size=\"large\"\n        >\n          {tokens.map((v) => (\n            <Radio value={v} key={v}>\n              <Space className=\"token-radio\" align=\"start\">\n                <span>{`${v} Tokens`}</span>\n                <span className=\"tip-description\">{`Tip The Model ${v} Tokens!`}</span>\n              </Space>\n            </Radio>\n          ))}\n          <Radio value={-1}>\n            <Space className=\"token-radio\">\n              <span>Custom Amount</span>\n              <InputNumber\n                className=\"amount\"\n                ref={this.inputNumberRef}\n                onFocus={() => this.setState({ radioValue: -1 })}\n                type=\"number\"\n                min={1}\n                max={1000}\n                step={10}\n                placeholder=\"Enter Amount\"\n                onChange={this.onInputChange.bind(this)}\n                value={token}\n              />\n            </Space>\n          </Radio>\n        </Radio.Group>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}