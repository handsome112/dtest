{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\nimport { omit } from 'lodash';\nimport cookie from 'js-cookie';\nimport { isUrl } from '@lib/string';\nexport const TOKEN = 'token';\nexport const ROLE = 'role';\nexport const PERFORMER_ROLE = 'performer';\nexport const USER_ROLE = 'user';\nexport const STUDIO_ROLE = 'studio';\nexport const SORT = {\n  descend: 'desc',\n  ascend: 'asc'\n};\nexport class APIRequest {\n  setAuthHeaderToken(token) {\n    APIRequest.token = token;\n  }\n  /**\n   * Parses the JSON returned by a network request\n   *\n   * @param  {object} response A response from a network request\n   *\n   * @return {object}          The parsed JSON from the request\n   */\n\n\n  parseJSON(response) {\n    if (response.status === 204 || response.status === 205) {\n      return null;\n    }\n\n    return response.json();\n  }\n  /**\n   * Checks if a network request came back fine, and throws an error if not\n   *\n   * @param  {object} response   A response from a network request\n   *\n   * @return {object|undefined} Returns either the response, or throws an error\n   */\n\n\n  async checkStatus(response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    }\n\n    if (response.status === 403) {\n      if (false) {\n        window.location.href = '/';\n        throw new Error('Forbidden in the action!');\n      }\n    } // const error = new Error(response.statusText) as any;\n    // error.response = response;\n    // throw error;\n\n\n    throw response.clone().json();\n  }\n\n  request(url, method, body, headers) {\n    const verb = (method || 'get').toUpperCase();\n\n    const updatedHeader = _objectSpread({\n      'Content-Type': 'application/json',\n      // TODO - check me\n      Authorization: APIRequest.token || (false ? cookie.get(TOKEN) : '')\n    }, headers || {});\n\n    return fetch(isUrl(url) ? url : `${process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`, {\n      method: verb,\n      headers: updatedHeader,\n      body: body ? JSON.stringify(body) : null\n    }).then(this.checkStatus).then(this.parseJSON);\n  }\n\n  buildUrl(baseUrl, params) {\n    if (!params) {\n      return baseUrl;\n    }\n\n    const queryString = Object.keys(params).map(k => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`).join('&');\n    return `${baseUrl}?${queryString}`;\n  }\n\n  get(url, headers) {\n    return this.request(url, 'get', null, headers);\n  }\n\n  post(url, data, headers) {\n    return this.request(url, 'post', data, headers);\n  }\n\n  put(url, data, headers) {\n    return this.request(url, 'put', data, headers);\n  }\n\n  del(url, data, headers) {\n    return this.request(url, 'delete', data, headers);\n  }\n\n  upload(url, files, options = {\n    onProgress() {},\n\n    method: 'POST'\n  }) {\n    const uploadUrl = isUrl(url) ? url : `${process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`;\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.upload.addEventListener('progress', event => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: event.loaded / event.total * 100\n          });\n        }\n      });\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const {\n          response\n        } = req;\n\n        if (!success) {\n          return reject(response);\n        }\n\n        return resolve(response);\n      });\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n      const formData = new FormData();\n      files.forEach(f => formData.append(f.fieldname, f.file, f.file.name));\n      options.customData && Object.keys(options.customData).forEach(fieldname => typeof options.customData[fieldname] !== 'undefined' && formData.append(fieldname, options.customData[fieldname]));\n      req.responseType = 'json';\n      req.open(options.method || 'POST', uploadUrl);\n      const token = cookie.get(TOKEN);\n\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n\n      req.send(formData);\n    });\n  }\n\n  register(url, data, options = {\n    onProgress() {}\n\n  }) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.upload.addEventListener('progress', event => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: event.loaded / event.total * 100\n          });\n        }\n      });\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const {\n          response\n        } = req;\n\n        if (!success) {\n          return reject(response);\n        }\n\n        return resolve(response);\n      });\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n      const formData = new FormData(); // formData.append('file', file, file.name);\n\n      if (data.documentVerification) {\n        const documentVerificationFile = data.documentVerification.file.originFileObj;\n        formData.append('documentVerification', documentVerificationFile, documentVerificationFile.name);\n      }\n\n      if (data.idVerification) {\n        const idVerificationDile = data.idVerification.file.originFileObj;\n        formData.append('idVerification', idVerificationDile, idVerificationDile.name);\n      }\n\n      Object.keys(omit(data, ['documentVerification', 'idVerification'])).forEach(v => {\n        formData.append(v, data[v]);\n      });\n      req.responseType = 'json';\n      req.open('POST', isUrl(url) ? url : `${process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`);\n      const token = cookie.get(TOKEN);\n\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n\n      req.send(formData);\n    });\n  }\n\n}\n\n_defineProperty(APIRequest, \"token\", '');","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/services/api-request.ts"],"names":["fetch","omit","cookie","isUrl","TOKEN","ROLE","PERFORMER_ROLE","USER_ROLE","STUDIO_ROLE","SORT","descend","ascend","APIRequest","setAuthHeaderToken","token","parseJSON","response","status","json","checkStatus","window","location","href","Error","clone","request","url","method","body","headers","verb","toUpperCase","updatedHeader","Authorization","get","process","env","API_ENDPOINT","NEXT_PUBLIC_API_ENDPOINT","JSON","stringify","then","buildUrl","baseUrl","params","queryString","Object","keys","map","k","encodeURIComponent","join","post","data","put","del","upload","files","options","onProgress","uploadUrl","Promise","resolve","reject","req","XMLHttpRequest","addEventListener","event","lengthComputable","percentage","loaded","total","success","formData","FormData","forEach","f","append","fieldname","file","name","customData","responseType","open","setRequestHeader","send","register","documentVerification","documentVerificationFile","originFileObj","idVerification","idVerificationDile","v"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\nimport { omit } from 'lodash';\nimport cookie from 'js-cookie';\nimport { isUrl } from '@lib/string';\nimport { IRegisterFormData } from 'src/interfaces';\n\nexport interface IResponse<T> {\n  status: number;\n  data: T;\n}\n\nexport const TOKEN = 'token';\nexport const ROLE = 'role';\nexport const PERFORMER_ROLE = 'performer';\nexport const USER_ROLE = 'user';\nexport const STUDIO_ROLE = 'studio';\nexport const SORT = { descend: 'desc', ascend: 'asc' };\n\nexport abstract class APIRequest {\n  static token: string = '';\n\n  setAuthHeaderToken(token: string) {\n    APIRequest.token = token;\n  }\n\n  /**\n   * Parses the JSON returned by a network request\n   *\n   * @param  {object} response A response from a network request\n   *\n   * @return {object}          The parsed JSON from the request\n   */\n  private parseJSON(response: Response) {\n    if (response.status === 204 || response.status === 205) {\n      return null;\n    }\n    return response.json();\n  }\n\n  /**\n   * Checks if a network request came back fine, and throws an error if not\n   *\n   * @param  {object} response   A response from a network request\n   *\n   * @return {object|undefined} Returns either the response, or throws an error\n   */\n  private async checkStatus(response: Response) {\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    }\n\n    if (response.status === 403) {\n      if (process.browser) {\n        window.location.href = '/';\n        throw new Error('Forbidden in the action!');\n      }\n    }\n    // const error = new Error(response.statusText) as any;\n    // error.response = response;\n    // throw error;\n    throw response.clone().json();\n  }\n\n  request(\n    url: string,\n    method?: string,\n    body?: any,\n    headers?: { [key: string]: string }\n  ): Promise<IResponse<any>> {\n    const verb = (method || 'get').toUpperCase();\n    const updatedHeader = {\n      'Content-Type': 'application/json',\n      // TODO - check me\n      Authorization:\n        APIRequest.token || (process.browser ? cookie.get(TOKEN) : ''),\n      ...(headers || {})\n    };\n\n    return fetch(isUrl(url) ? url : `${process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`, {\n      method: verb,\n      headers: updatedHeader,\n      body: body ? JSON.stringify(body) : null\n    })\n      .then(this.checkStatus)\n      .then(this.parseJSON);\n  }\n\n  buildUrl(baseUrl: string, params?: { [key: string]: string | number | boolean }) {\n    if (!params) {\n      return baseUrl;\n    }\n\n    const queryString = Object.keys(params)\n      .map((k) => `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`)\n      .join('&');\n    return `${baseUrl}?${queryString}`;\n  }\n\n  get(url: string, headers?: { [key: string]: string }) {\n    return this.request(url, 'get', null, headers);\n  }\n\n  post(url: string, data?: any, headers?: { [key: string]: string }) {\n    return this.request(url, 'post', data, headers);\n  }\n\n  put(url: string, data?: any, headers?: { [key: string]: string }) {\n    return this.request(url, 'put', data, headers);\n  }\n\n  del(url: string, data?: any, headers?: { [key: string]: string }) {\n    return this.request(url, 'delete', data, headers);\n  }\n\n  upload(\n    url: string,\n    files: {\n      file: File;\n      fieldname: string;\n    }[],\n    options: {\n      onProgress: Function;\n      customData?: Record<string, any>;\n      method?: string;\n    } = {\n      onProgress() {},\n      method: 'POST'\n    }\n  ) {\n    const uploadUrl = isUrl(url) ? url : `${process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`;\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100\n          });\n        }\n      });\n\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      files.forEach((f) => formData.append(f.fieldname, f.file, f.file.name));\n      options.customData\n        && Object.keys(options.customData).forEach(\n          (fieldname) => typeof options.customData[fieldname] !== 'undefined'\n            && formData.append(fieldname, options.customData[fieldname])\n        );\n\n      req.responseType = 'json';\n      req.open(options.method || 'POST', uploadUrl);\n\n      const token: any = cookie.get(TOKEN);\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n      req.send(formData);\n    });\n  }\n\n  register(\n    url: string,\n    data: IRegisterFormData,\n    options: { onProgress: Function } = {\n      onProgress() {}\n    }\n  ) {\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n\n      req.upload.addEventListener('progress', (event) => {\n        if (event.lengthComputable) {\n          options.onProgress({\n            percentage: (event.loaded / event.total) * 100\n          });\n        }\n      });\n\n      req.addEventListener('load', () => {\n        const success = req.status >= 200 && req.status < 300;\n        const { response } = req;\n        if (!success) {\n          return reject(response);\n        }\n        return resolve(response);\n      });\n\n      req.upload.addEventListener('error', () => {\n        reject(req.response);\n      });\n\n      const formData = new FormData();\n      // formData.append('file', file, file.name);\n      if (data.documentVerification) {\n        const documentVerificationFile = data.documentVerification.file.originFileObj;\n        formData.append(\n          'documentVerification',\n          documentVerificationFile,\n          documentVerificationFile.name\n        );\n      }\n\n      if (data.idVerification) {\n        const idVerificationDile = data.idVerification.file.originFileObj;\n        formData.append(\n          'idVerification',\n          idVerificationDile,\n          idVerificationDile.name\n        );\n      }\n\n      Object.keys(\n        omit(data, ['documentVerification', 'idVerification'])\n      ).forEach((v) => {\n        formData.append(v, data[v]);\n      });\n\n      req.responseType = 'json';\n      req.open('POST', isUrl(url) ? url : `${process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`);\n\n      const token: any = cookie.get(TOKEN);\n      if (token) {\n        req.setRequestHeader('Authorization', token);\n      }\n      req.send(formData);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}