{"ast":null,"code":"import { createAsyncAction, createAction } from '@lib/redux';\nexport const {\n  login,\n  loginSuccess,\n  loginFail\n} = createAsyncAction('login', 'LOGIN');\nexport const loginRequesting = createAction('LOGIN_REQUESTING');\nexport const {\n  performerlogin,\n  performerloginSuccess,\n  performerloginFail\n} = createAsyncAction('performerlogin', 'PERFORMER_LOGIN');\nexport const resetLoginData = createAction('resetLoginData');\nexport const {\n  studioLogin,\n  studioLoginSuccess,\n  studioLoginFail\n} = createAsyncAction('studioLogin', 'STUDIO_LOGIN');\nexport const {\n  performerRegister,\n  performerRegisterSuccess,\n  performerRegisterFail\n} = createAsyncAction('performerRegister', 'PERFORMER_REGISTER');\nexport const setPerformerRegisterSubmitting = createAction('SET_PERFORMER_REGISTER_SUBMITTING');\nexport const {\n  userRegister,\n  userRegisterSuccess,\n  userRegisterFail\n} = createAsyncAction('userRegister', 'USER_REGISTER');\nexport const setUserRegisterSubmitting = createAction('SET_USER_REGISTER_SUBMITTING');\nexport const {\n  updatePassword,\n  updatePasswordSuccess,\n  updatePasswordFail\n} = createAsyncAction('updatePassword', 'UPDATE_PASSWORD');\nexport const setUpdatePasswordSubmitting = createAction('SET_UPDATE_PASSWORD_SUBMITTING');\nexport const logout = createAction('logout');","map":null,"metadata":{},"sourceType":"module"}