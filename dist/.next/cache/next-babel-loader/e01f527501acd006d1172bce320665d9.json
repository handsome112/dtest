{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Button } from 'antd';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport './token-card.less';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst TokenCard = _ref => {\n  let {\n    token,\n    price,\n    buying,\n    currencySymbol\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"token\", \"price\", \"buying\", \"currencySymbol\"]);\n\n  return __jsx(\"div\", {\n    className: \"token-card\"\n  }, __jsx(\"div\", {\n    className: \"card-image\"\n  }, __jsx(\"div\", {\n    className: \"coin\"\n  }, __jsx(\"div\", {\n    className: \"current-coin\"\n  }, __jsx(\"img\", {\n    src: \"/crown.png\",\n    alt: \"\"\n  }), __jsx(\"span\", null, \"x\", token)))), __jsx(NumberFormat, {\n    value: token,\n    suffix: \" Token for \"\n  }), __jsx(NumberFormat, {\n    value: price,\n    prefix: currencySymbol\n  }), __jsx(\"br\", null), __jsx(Button, {\n    type: \"primary\",\n    onClick: () => props.onBuyToken(),\n    loading: buying,\n    disabled: buying\n  }, \"Buy Now\"));\n};\n\nTokenCard.defaultProps = {\n  onBuyToken: null,\n  buying: false,\n  currencySymbol: '$'\n};\n\nconst mapStateToProps = state => _objectSpread({}, state.ui);\n\nexport default connect(mapStateToProps)(TokenCard);","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/common/base/token-card.tsx"],"names":["Button","NumberFormat","React","connect","TokenCard","token","price","buying","currencySymbol","props","onBuyToken","defaultProps","mapStateToProps","state","ui"],"mappings":";;;;;;;;;;;;AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAWA,MAAMC,SAAS,GAAG;AAAA,MAAC;AACjBC,IAAAA,KADiB;AACVC,IAAAA,KADU;AACHC,IAAAA,MADG;AACKC,IAAAA;AADL,GAAD;AAAA,MACyBC,KADzB;;AAAA,SAGhB;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,GAAG,EAAC,YAAT;AAAsB,IAAA,GAAG,EAAC;AAA1B,IADF,EAEE,yBAEGJ,KAFH,CAFF,CADF,CADF,CADF,EAaE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEA,KAArB;AAA4B,IAAA,MAAM,EAAC;AAAnC,IAbF,EAcE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,KAArB;AAA4B,IAAA,MAAM,EAAEE;AAApC,IAdF,EAeE,iBAfF,EAgBE,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,OAAO,EAAE,MAAMC,KAAK,CAACC,UAAN,EAFjB;AAGE,IAAA,OAAO,EAAEH,MAHX;AAIE,IAAA,QAAQ,EAAEA;AAJZ,eAhBF,CAHgB;AAAA,CAAlB;;AA6BAH,SAAS,CAACO,YAAV,GAAyB;AACvBD,EAAAA,UAAU,EAAE,IADW;AAEvBH,EAAAA,MAAM,EAAE,KAFe;AAGvBC,EAAAA,cAAc,EAAE;AAHO,CAAzB;;AAMA,MAAMI,eAAe,GAAIC,KAAD,sBACnBA,KAAK,CAACC,EADa,CAAxB;;AAGA,eAAeX,OAAO,CAACS,eAAD,CAAP,CAAyBR,SAAzB,CAAf","sourcesContent":["import { Button } from 'antd';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport './token-card.less';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\ninterface IProps {\n  name: string;\n  token: number;\n  price: number;\n  onBuyToken?: Function;\n  buying?: boolean;\n  currencySymbol?: string;\n}\n\nconst TokenCard = ({\n  token, price, buying, currencySymbol, ...props\n}: IProps) => (\n  <div className=\"token-card\">\n    <div className=\"card-image\">\n      <div className=\"coin\">\n        <div className=\"current-coin\">\n          <img src=\"/crown.png\" alt=\"\" />\n          <span>\n            x\n            {token}\n          </span>\n        </div>\n      </div>\n    </div>\n    {/* <NumberFormat value={}/> */}\n    <NumberFormat value={token} suffix=\" Token for \" />\n    <NumberFormat value={price} prefix={currencySymbol} />\n    <br />\n    <Button\n      type=\"primary\"\n      onClick={() => props.onBuyToken()}\n      loading={buying}\n      disabled={buying}\n    >\n      Buy Now\n    </Button>\n  </div>\n);\nTokenCard.defaultProps = {\n  onBuyToken: null,\n  buying: false,\n  currencySymbol: '$'\n};\n\nconst mapStateToProps = (state : any) => ({\n  ...state.ui\n});\nexport default connect(mapStateToProps)(TokenCard);\n"]},"metadata":{},"sourceType":"module"}