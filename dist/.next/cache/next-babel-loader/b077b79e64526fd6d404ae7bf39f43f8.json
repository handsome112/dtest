{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/galleries/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable no-nested-ternary */\nimport { message, Alert, Row, Col } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport React, { PureComponent } from 'react';\nimport { getResponseError } from '@lib/utils';\nimport { galleryService, performerService } from 'src/services';\nimport { connect } from 'react-redux';\nimport Router, { withRouter } from 'next/router';\nimport { getPerformerGalleries, purchaseGallerySuccess, addPerformerGalleries } from '@redux/galleries/actions';\nimport { updateCurrentUserBalance } from '@redux/user/actions';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport ModalBuyAssets from 'src/components/performer-assets/common/modal-buy-assets';\nimport GalleryCard from '@components/galleries/gallery-card';\n\nclass GalleriesPage extends PureComponent {\n  static async getInitialProps({\n    ctx\n  }) {\n    try {\n      const {\n        query\n      } = ctx;\n\n      if (query.performer) {\n        return {\n          performer: JSON.parse(query.performer)\n        };\n      }\n\n      if (query.username) {\n        const resp = await performerService.details(query.username);\n        return {\n          performer: resp.data\n        };\n      }\n\n      return {};\n    } catch (error) {\n      return {};\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"ref\", void 0);\n\n    this.state = {\n      limit: 60,\n      offset: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getGalleries();\n  }\n\n  onPurchaseSuccess(data, id) {\n    const {\n      updateCurrentUserBalance: dispatchUpdateCurrentUserBalance,\n      purchaseGallerySuccess: dispatchPurchaseGallerySuccess\n    } = this.props;\n    dispatchUpdateCurrentUserBalance(-data.data.totalPrice);\n    dispatchPurchaseGallerySuccess(id);\n  }\n\n  async getGalleries() {\n    const {\n      performer,\n      router,\n      getPerformerGalleries: dispatchGetPerformerGalleries\n    } = this.props;\n\n    try {\n      const performerId = performer ? performer._id : '';\n      dispatchGetPerformerGalleries(_objectSpread(_objectSpread(_objectSpread({}, this.state), router.query), {}, {\n        performerId\n      }));\n    } catch (error) {\n      const err = await Promise.resolve(error);\n      message.error(getResponseError(err));\n    }\n  }\n\n  async loadMore() {\n    try {\n      let {\n        offset\n      } = this.state;\n      const {\n        limit\n      } = this.state;\n      const {\n        router: {\n          query\n        },\n        performer,\n        addPerformerGalleries: dispatchAddPerformerGalleries\n      } = this.props;\n      const performerId = performer ? performer._id : '';\n      offset = limit + offset;\n      const resp = await galleryService.search(_objectSpread(_objectSpread({}, query), {}, {\n        performerId,\n        limit,\n        offset\n      }), false);\n      dispatchAddPerformerGalleries(resp.data.data);\n      this.setState({\n        offset\n      });\n    } catch (error) {\n      const err = await Promise.resolve(error);\n      message.error(getResponseError(err));\n    }\n  }\n\n  purchase(item) {\n    if (item.isBought) {\n      return Router.push({\n        pathname: '/photos',\n        query: {\n          data: JSON.stringify(item),\n          id: item._id\n        }\n      }, `/photos/${item._id}`);\n    }\n\n    this.ref.showModalBuyAssets(item, 'gallery');\n    return {};\n  }\n\n  render() {\n    const {\n      performer,\n      router: {\n        query\n      },\n      searching,\n      ids,\n      total,\n      data,\n      success\n    } = this.props;\n    const hasMore = ids.length < total;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }, performer !== null && performer !== void 0 && performer.username ? `${performer === null || performer === void 0 ? void 0 : performer.username}'s ` : '', \"Galleries\", ' ')), __jsx(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, __jsx(PageHeader, {\n      title: `${performer !== null && performer !== void 0 && performer.username ? `${performer === null || performer === void 0 ? void 0 : performer.username}'s ` : ''}\n            Galleries`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }\n    }), query.username && !performer && __jsx(Alert, {\n      message: \"Performer not found.\",\n      banner: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      className: \"galleries-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, searching ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, \"Loading...\") : success ? __jsx(InfiniteScroll, {\n      loadMore: this.loadMore.bind(this),\n      hasMore: hasMore,\n      loader: __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }\n      }, \"Loading...\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, __jsx(Row, {\n      gutter: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, ids && ids.length > 0 ? ids.map(id => data[id].numOfItems > 0 && __jsx(Col, {\n      xl: 4,\n      md: 6,\n      sm: 8,\n      xs: 24,\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, __jsx(GalleryCard, {\n      gallery: data[id],\n      onHandlePurchase: this.purchase.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }))) : __jsx(\"p\", {\n      className: \"no-items-found\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, \"No gallery found.\"))) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, \"Server error\")), __jsx(ModalBuyAssets, _extends({\n      ref: ref => {\n        this.ref = ref;\n      },\n      onSucess: this.onPurchaseSuccess.bind(this)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStates = state => _objectSpread(_objectSpread({}, state.galleries), {}, {\n  loggedIn: state.auth.loggedIn\n});\n\nconst mapDispatchs = {\n  getPerformerGalleries,\n  addPerformerGalleries,\n  updateCurrentUserBalance,\n  purchaseGallerySuccess\n};\nexport default withRouter(connect(mapStates, mapDispatchs)(GalleriesPage));","map":null,"metadata":{},"sourceType":"module"}