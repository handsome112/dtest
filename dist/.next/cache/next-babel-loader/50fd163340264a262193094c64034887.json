{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/var/www/dtest.live/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport BaseLayout from '@layouts/base-layout';\nimport { authService, userService, performerService, studioService, bannerService } from '@services/index';\nimport Router from 'next/router';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentPerformer } from '@redux/performer/actions';\nimport { settingService } from '@services/setting.service';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { PERFORMER_ROLE, USER_ROLE } from 'src/services/api-request';\nimport { Socket } from 'src/socket';\nimport '../style/index.less';\nimport { updateSettings } from '@redux/settings/actions';\nimport { getBannersSuccess } from '@redux/banner/actions';\nimport { SETTING_KEYS } from 'src/constants';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { pick } from 'lodash';\nimport Head from 'next/head';\nimport cookie from 'cookie';\nexport var ROLE = {\n  STUDIO: 'studio',\n  PERFORMER: 'performer',\n  USER: 'user'\n};\n\nfunction redirectLogin(ctx, authenticate) {\n  if (true) {\n    authService.removeToken();\n    authService.removeRemember();\n\n    if (authenticate && authenticate === ROLE.STUDIO) {\n      Router.push('/studio/login');\n      return;\n    }\n\n    Router.push('/auth/login/user');\n    return;\n  } // fix for production build\n  // ctx.res.clearCookie && ctx.res.clearCookie('token');\n\n\n  var authCookie = cookie.serialize('token', '', {\n    maxAge: -1\n  });\n  ctx.res.writeHead && ctx.res.writeHead(302, {\n    'Set-Cookie': authCookie,\n    Location: authenticate && authenticate === ROLE.STUDIO ? '/studio/login' : '/auth/login/user'\n  });\n  ctx.res.end && ctx.res.end();\n}\n\nfunction auth(_x, _x2) {\n  return _auth.apply(this, arguments);\n}\n\nfunction _auth() {\n  _auth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx, authenticate) {\n    var store, state, _nextCookie, token, role, resp;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(true && !authenticate)) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            store = ctx.store;\n            state = store.getState();\n\n            if (!(state.auth && state.auth.loggedIn)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            // TODO - move to a service\n            _nextCookie = nextCookie(ctx), token = _nextCookie.token, role = _nextCookie.role;\n\n            if (!(token && role)) {\n              _context2.next = 28;\n              break;\n            }\n\n            authService.setAuthHeaderToken(token);\n\n            if (!(role === PERFORMER_ROLE)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 13;\n            return performerService.me({\n              Authorization: token\n            });\n\n          case 13:\n            resp = _context2.sent;\n            store.dispatch(updateCurrentPerformer(resp.data));\n\n          case 15:\n            if (!(role === USER_ROLE)) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 18;\n            return userService.me({\n              Authorization: token\n            });\n\n          case 18:\n            resp = _context2.sent;\n            store.dispatch(updateCurrentUser(resp.data));\n\n          case 20:\n            if (!(role === ROLE.STUDIO)) {\n              _context2.next = 25;\n              break;\n            }\n\n            _context2.next = 23;\n            return studioService.me({\n              Authorization: token\n            });\n\n          case 23:\n            resp = _context2.sent;\n            store.dispatch(updateCurrentStudio(resp.data));\n\n          case 25:\n            // TODO - check permission\n            store.dispatch(loginSuccess());\n            _context2.next = 31;\n            break;\n\n          case 28:\n            if (!authenticate) {\n              _context2.next = 31;\n              break;\n            }\n\n            redirectLogin(ctx, authenticate);\n            return _context2.abrupt(\"return\");\n\n          case 31:\n            _context2.next = 36;\n            break;\n\n          case 33:\n            _context2.prev = 33;\n            _context2.t0 = _context2[\"catch\"](0);\n\n            if (authenticate) {\n              redirectLogin(ctx, authenticate);\n            }\n\n          case 36:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 33]]);\n  }));\n  return _auth.apply(this, arguments);\n}\n\nfunction updateSettingsStore(_x3, _x4) {\n  return _updateSettingsStore.apply(this, arguments);\n}\n\nfunction _updateSettingsStore() {\n  _updateSettingsStore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx, settings) {\n    var store;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            try {\n              store = ctx.store;\n              store.dispatch(updateSettings({\n                tipSound: settings.tipSound\n              }));\n              store.dispatch(getBannersSuccess(settings.banners));\n              store.dispatch(updateUIValue({\n                placeholderLoginUrl: settings.placeholderLoginUrl,\n                placeholderAvatarUrl: settings.placeholderAvatarUrl,\n                logo: settings.logoUrl,\n                siteName: settings.siteName,\n                menus: settings.menus,\n                footerContent: settings.footerContent,\n                currencySymbol: settings.currencySymbol,\n                singularTextModel: settings.singularTextModel,\n                pluralTextModel: settings.pluralTextModel,\n                popup18Enabled: settings.popup18Enabled,\n                popup18ContentId: settings.popup18ContentId\n              }));\n              store.dispatch(updateLiveStreamSettings(pick(settings, [SETTING_KEYS.VIEWER_URL, SETTING_KEYS.PUBLISHER_URL, SETTING_KEYS.SUBSCRIBER_URL, SETTING_KEYS.OPTION_FOR_BROADCAST, SETTING_KEYS.OPTION_FOR_PRIVATE, SETTING_KEYS.OPTION_FOR_GROUP, SETTING_KEYS.DEFAULT_OFFLINE_MODEL_IMAGE, SETTING_KEYS.DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE, SETTING_KEYS.DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE, SETTING_KEYS.ANT_MEDIA_APPNAME]))); // TODO - update others like meta data\n            } catch (e) {\n              // TODO - implement me\n              // eslint-disable-next-line no-console\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _updateSettingsStore.apply(this, arguments);\n}\n\nvar Application = /*#__PURE__*/function (_App) {\n  _inherits(Application, _App);\n\n  var _super = _createSuper(Application);\n\n  function Application() {\n    _classCallCheck(this, Application);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Application, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store,\n          settings = _this$props.settings;\n      var layout = Component.layout;\n      return __jsx(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      }, typeof settings.siteName === 'string' && settings.siteName.length > 0 ? settings.siteName : 'Application'), __jsx(\"meta\", {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      })), __jsx(Socket, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 9\n        }\n      }, __jsx(BaseLayout, {\n        layout: layout,\n        maintenanceMode: settings.maintenanceMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: // TODO - consider if we need to use get static props in children component instead?\n    // or check in render?\n    function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, settings, _banner$data, _yield$Promise$all, _yield$Promise$all2, _settings, _banner, pageProps;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                _context.next = 3;\n                return auth(ctx, Component.authenticate);\n\n              case 3:\n                // server side to load settings, once time only\n                settings = {};\n\n                if (true) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 7;\n                return Promise.all([settingService.all(), bannerService.search({\n                  status: 'active'\n                })]);\n\n              case 7:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                _settings = _yield$Promise$all2[0];\n                _banner = _yield$Promise$all2[1];\n                // TODO encrypt, decypt header script, footer script or other info if needed\n                settings = _settings.data || {};\n                _context.next = 14;\n                return updateSettingsStore(ctx, _objectSpread(_objectSpread({}, settings), {}, {\n                  banners: (_banner === null || _banner === void 0 ? void 0 : (_banner$data = _banner.data) === null || _banner$data === void 0 ? void 0 : _banner$data.data) || []\n                }));\n\n              case 14:\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 18;\n                return Component.getInitialProps({\n                  ctx: ctx\n                });\n\n              case 18:\n                pageProps = _context.sent;\n\n              case 19:\n                return _context.abrupt(\"return\", {\n                  settings: settings,\n                  pageProps: pageProps,\n                  layout: Component.layout\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Application;\n}(App);\n\n_defineProperty(Application, \"settingQuery\", false);\n\nexport default withReduxSaga(Application);","map":null,"metadata":{},"sourceType":"module"}