{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/messages/Compose.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { sendMessage, sentFileSuccess } from '@redux/message/actions';\nimport { SendOutlined } from '@ant-design/icons';\nimport { Input } from 'antd'; // import { ImageMessageUpload } from '@components/messages/uploadPhoto';\n// import { authService } from '@services/index';\n\nimport Emotions from './emotions';\nimport '../stream-chat/Compose.less';\n\nclass Compose extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"uploadRef\", void 0);\n\n    _defineProperty(this, \"_input\", void 0);\n\n    _defineProperty(this, \"state\", {\n      text: ''\n    });\n\n    _defineProperty(this, \"onKeyDown\", evt => {\n      if (evt.keyCode === 13) {\n        this.send();\n      }\n    });\n\n    _defineProperty(this, \"onChange\", evt => {\n      this.setState({\n        text: evt.target.value\n      });\n    });\n\n    _defineProperty(this, \"onEmojiClick\", emojiObject => {\n      const {\n        text\n      } = this.state;\n      this.setMessage(text + emojiObject.emoji);\n    });\n\n    _defineProperty(this, \"onPhotoUploaded\", data => {\n      const {\n        sentFileSuccess: handleSendFile\n      } = this.props;\n\n      if (!data || !data.response) {\n        return;\n      }\n\n      const imageUrl = data.response.data && data.response.data.imageUrl || data.base64;\n      handleSendFile(_objectSpread(_objectSpread({}, data.response.data), {\n        imageUrl\n      }));\n    });\n\n    this.uploadRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    if (!this.uploadRef) this.uploadRef = /*#__PURE__*/React.createRef();\n    if (!this._input) this._input = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate(previousProps) {\n    const {\n      sendMessageStatus\n    } = this.props;\n\n    if (sendMessageStatus.success !== previousProps.sendMessageStatus.success) {\n      this.setMessage('');\n      this._input && this._input.focus();\n    }\n  }\n\n  setMessage(msg) {\n    this.setState({\n      text: msg\n    });\n  }\n\n  send() {\n    const {\n      text\n    } = this.state;\n    if (!text) return;\n    const {\n      conversation,\n      sendMessage: handleSend\n    } = this.props;\n    handleSend({\n      conversationId: conversation._id,\n      data: {\n        text\n      }\n    });\n  }\n\n  render() {\n    const {\n      text\n    } = this.state;\n    const {\n      sendMessageStatus: status,\n      conversation\n    } = this.props; // const uploadHeaders = {\n    //   authorization: authService.getToken()\n    // };\n\n    if (!this.uploadRef) this.uploadRef = /*#__PURE__*/React.createRef();\n    if (!this._input) this._input = /*#__PURE__*/React.createRef();\n    return __jsx(\"div\", {\n      className: \"compose\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, __jsx(Input, {\n      value: text,\n      className: \"compose-input\",\n      placeholder: \"Type a message\",\n      onKeyDown: this.onKeyDown,\n      onChange: this.onChange,\n      disabled: status.sending || !conversation._id,\n      ref: c => this._input = c,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"grp-icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, __jsx(SendOutlined, {\n      onClick: this.send.bind(this),\n      disabled: status.sending,\n      style: {\n        fontSize: '25px',\n        marginRight: '10px',\n        color: '#fe26b3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"grp-emotions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: \"/emotion-ico.png\",\n      width: \"25px\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), __jsx(Emotions, {\n      onEmojiClick: this.onEmojiClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStates = state => ({\n  sendMessageStatus: state.message.sendMessage,\n  currentUser: state.user.current\n});\n\nconst mapDispatch = {\n  sendMessage,\n  sentFileSuccess\n};\nexport default connect(mapStates, mapDispatch)(Compose);","map":null,"metadata":{},"sourceType":"module"}