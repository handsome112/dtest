{"ast":null,"code":"/* eslint-disable no-shadow */\nexport const PUBLIC_CHAT = 'public';\nexport const PRIVATE_CHAT = 'private';\nexport const GROUP_CHAT = 'group';\nexport const OFFLINE = 'offline';\nexport const MODEL_STREAM_CHANNEL = 'MODEL_STREAM_CHANNEL';\nexport let MODEL_STREAM_EVENT_NAME;\n\n(function (MODEL_STREAM_EVENT_NAME) {\n  MODEL_STREAM_EVENT_NAME[\"GROUP_START\"] = \"GROUP_START\";\n  MODEL_STREAM_EVENT_NAME[\"PRIVATE_ACCPET\"] = \"PRIVATE_ACCPET\";\n})(MODEL_STREAM_EVENT_NAME || (MODEL_STREAM_EVENT_NAME = {}));\n\nexport let BroadcastStatus;\n\n(function (BroadcastStatus) {\n  BroadcastStatus[\"FINISHED\"] = \"finished\";\n  BroadcastStatus[\"BROADCASTING\"] = \"broadcasting\";\n  BroadcastStatus[\"CREATED\"] = \"created\";\n})(BroadcastStatus || (BroadcastStatus = {}));\n\nexport let BroadcastType;\n\n(function (BroadcastType) {\n  BroadcastType[\"LiveStream\"] = \"liveStream\";\n  BroadcastType[\"IpCamera\"] = \"ipCamera\";\n  BroadcastType[\"StreamSource\"] = \"streamSource\";\n  BroadcastType[\"Vod\"] = \"Vod\";\n})(BroadcastType || (BroadcastType = {}));\n\nexport const HLS = 'hls';\nexport const WEBRTC = 'webrtc';\nexport const defaultStreamValue = {\n  publish: true,\n  publicStream: true,\n  plannedStartDate: 0,\n  plannedEndDate: 0,\n  duration: 0,\n  mp4Enabled: 0,\n  webMEnabled: 0,\n  expireDurationMS: 0,\n  speed: 0,\n  pendingPacketSize: 0,\n  hlsViewerCount: 0,\n  webRTCViewerCount: 0,\n  rtmpViewerCount: 0,\n  startTime: 0,\n  receivedBytes: 0,\n  bitrate: 900,\n  absoluteStartTimeMs: 0,\n  webRTCViewerLimit: -1,\n  hlsViewerLimit: -1\n};","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/interfaces/stream.ts"],"names":["PUBLIC_CHAT","PRIVATE_CHAT","GROUP_CHAT","OFFLINE","MODEL_STREAM_CHANNEL","MODEL_STREAM_EVENT_NAME","BroadcastStatus","BroadcastType","HLS","WEBRTC","defaultStreamValue","publish","publicStream","plannedStartDate","plannedEndDate","duration","mp4Enabled","webMEnabled","expireDurationMS","speed","pendingPacketSize","hlsViewerCount","webRTCViewerCount","rtmpViewerCount","startTime","receivedBytes","bitrate","absoluteStartTimeMs","webRTCViewerLimit","hlsViewerLimit"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,QAApB;AACP,OAAO,MAAMC,YAAY,GAAG,SAArB;AACP,OAAO,MAAMC,UAAU,GAAG,OAAnB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,oBAAoB,GAAG,sBAA7B;AAEP,WAAYC,uBAAZ;;WAAYA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;GAAAA,uB,KAAAA,uB;;AAKZ,WAAYC,eAAZ;;WAAYA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;AAAAA,EAAAA,e;GAAAA,e,KAAAA,e;;AAMZ,WAAYC,aAAZ;;WAAYA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;AAAAA,EAAAA,a;GAAAA,a,KAAAA,a;;AA2BZ,OAAO,MAAMC,GAAG,GAAG,KAAZ;AACP,OAAO,MAAMC,MAAM,GAAG,QAAf;AAEP,OAAO,MAAMC,kBAAkB,GAAG;AAChCC,EAAAA,OAAO,EAAE,IADuB;AAEhCC,EAAAA,YAAY,EAAE,IAFkB;AAGhCC,EAAAA,gBAAgB,EAAE,CAHc;AAIhCC,EAAAA,cAAc,EAAE,CAJgB;AAKhCC,EAAAA,QAAQ,EAAE,CALsB;AAMhCC,EAAAA,UAAU,EAAE,CANoB;AAOhCC,EAAAA,WAAW,EAAE,CAPmB;AAQhCC,EAAAA,gBAAgB,EAAE,CARc;AAShCC,EAAAA,KAAK,EAAE,CATyB;AAUhCC,EAAAA,iBAAiB,EAAE,CAVa;AAWhCC,EAAAA,cAAc,EAAE,CAXgB;AAYhCC,EAAAA,iBAAiB,EAAE,CAZa;AAahCC,EAAAA,eAAe,EAAE,CAbe;AAchCC,EAAAA,SAAS,EAAE,CAdqB;AAehCC,EAAAA,aAAa,EAAE,CAfiB;AAgBhCC,EAAAA,OAAO,EAAE,GAhBuB;AAiBhCC,EAAAA,mBAAmB,EAAE,CAjBW;AAkBhCC,EAAAA,iBAAiB,EAAE,CAAC,CAlBY;AAmBhCC,EAAAA,cAAc,EAAE,CAAC;AAnBe,CAA3B","sourcesContent":["/* eslint-disable no-shadow */\nexport const PUBLIC_CHAT = 'public';\nexport const PRIVATE_CHAT = 'private';\nexport const GROUP_CHAT = 'group';\nexport const OFFLINE = 'offline';\nexport const MODEL_STREAM_CHANNEL = 'MODEL_STREAM_CHANNEL';\n\nexport enum MODEL_STREAM_EVENT_NAME {\n  GROUP_START = 'GROUP_START',\n  PRIVATE_ACCPET = 'PRIVATE_ACCPET'\n}\n\nexport enum BroadcastStatus {\n  FINISHED = 'finished',\n  BROADCASTING = 'broadcasting',\n  CREATED = 'created'\n}\n\nexport enum BroadcastType {\n  LiveStream = 'liveStream',\n  IpCamera = 'ipCamera',\n  StreamSource = 'streamSource',\n  Vod = 'Vod'\n}\n\nexport interface IOneTimeToken {\n  tokenId?: string,\n  id: string,\n  expireDate?: number,\n  type: 'publish' | 'play',\n  roomId?: string\n}\n\nexport interface StreamSettings {\n  viewerURL: string,\n  publisherURL: string,\n  optionForBroadcast: 'hls' | 'webrtc',\n  optionForPrivate: 'hls' | 'webrtc',\n  secureOption: boolean,\n  defaultOfflineModelImage: string;\n  defaultPrivateCallImage: string;\n  defaultGroupChatImage: string;\n  AntMediaAppname: string\n}\n\nexport const HLS = 'hls';\nexport const WEBRTC = 'webrtc';\n\nexport const defaultStreamValue = {\n  publish: true,\n  publicStream: true,\n  plannedStartDate: 0,\n  plannedEndDate: 0,\n  duration: 0,\n  mp4Enabled: 0,\n  webMEnabled: 0,\n  expireDurationMS: 0,\n  speed: 0,\n  pendingPacketSize: 0,\n  hlsViewerCount: 0,\n  webRTCViewerCount: 0,\n  rtmpViewerCount: 0,\n  startTime: 0,\n  receivedBytes: 0,\n  bitrate: 900,\n  absoluteStartTimeMs: 0,\n  webRTCViewerLimit: -1,\n  hlsViewerLimit: -1\n};\n"]},"metadata":{},"sourceType":"module"}