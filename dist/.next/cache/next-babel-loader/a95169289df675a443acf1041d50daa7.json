{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/studio/models/stats.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Row, Col } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport { getMembers } from 'src/redux/studio/actions';\nimport React, { PureComponent } from 'react';\nimport StudioModelsSearch from '@components/studio/models-manager/search-online-status';\nimport StudioModelStatsTable from '@components/studio/models-manager/studio-models-stats-table';\nimport { connect } from 'react-redux';\nimport './index.less';\nimport { getSearchData } from 'src/lib';\n\nclass StudioModelStatsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      limit: 12,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      filter: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getMembers: dispatchGetMembers\n    } = this.props;\n    dispatchGetMembers(this.state);\n  }\n\n  componentDidUpdate(_, prevStates) {\n    const {\n      getMembers: dispatchGetMembers\n    } = this.props;\n\n    if (prevStates !== this.state) {\n      dispatchGetMembers(this.state);\n    }\n  }\n\n  handleTableChange(pagination, filters, sorter) {\n    const state = _objectSpread({}, this.state);\n\n    this.setState(getSearchData(pagination, filters, sorter, state));\n  }\n\n  onSearch(data) {\n    this.setState(data);\n  }\n\n  render() {\n    const {\n      data,\n      searching,\n      total\n    } = this.props;\n    const {\n      limit\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Performer Stats\")), __jsx(\"div\", {\n      className: \"studio-models-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(PageHeader, {\n      title: \"Models\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"studio-models-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, __jsx(Col, {\n      xs: 24,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, __jsx(StudioModelsSearch, {\n      searching: searching,\n      onSearch: this.onSearch.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    })), __jsx(Col, {\n      xs: 24,\n      sm: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    })), __jsx(StudioModelStatsTable, {\n      data: data,\n      searching: searching,\n      total: total,\n      onChange: this.handleTableChange.bind(this),\n      pageSize: limit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(StudioModelStatsPage, \"authenticate\", 'studio');\n\n_defineProperty(StudioModelStatsPage, \"layout\", 'primary');\n\nconst mapStateToProps = state => _objectSpread({}, state.studio.members);\n\nconst mapDispatchs = {\n  getMembers\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioModelStatsPage);","map":null,"metadata":{},"sourceType":"module"}