{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport './index.less';\nimport React from 'react';\n\nconst PurchasedVideoCard = ({\n  video,\n  performer,\n  onClick\n}) => {\n  var _video$video;\n\n  const {\n    title,\n    thumbnail,\n    _id\n  } = video;\n  return __jsx(\"div\", {\n    className: \"purchased-video-card\"\n  }, __jsx(\"div\", {\n    className: \"purchased-video-card-thumb\"\n  }, __jsx(\"span\", null, __jsx(PlayCircleOutlined, {\n    onClick: onClick\n  })), __jsx(\"img\", {\n    src: thumbnail || ((_video$video = video.video) === null || _video$video === void 0 ? void 0 : _video$video.thumbnails[0]),\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"purchased-video-card-name\"\n  }, __jsx(Link, {\n    href: {\n      pathname: '/videos/detail',\n      query: {\n        id: _id,\n        data: JSON.stringify(_objectSpread(_objectSpread({}, video), {}, {\n          performer\n        }))\n      }\n    },\n    as: `/video/${_id}`\n  }, __jsx(\"a\", null, title))));\n};\n\nexport default PurchasedVideoCard;","map":null,"metadata":{},"sourceType":"module"}