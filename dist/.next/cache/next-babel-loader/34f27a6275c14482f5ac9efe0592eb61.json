{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport videojs from 'video.js';\nconst Button = videojs.getComponent('Button');\n\nclass AudioMuteToggleButton extends Button {\n  constructor(player, options) {\n    super(player, options);\n\n    _defineProperty(this, \"initialized\", false);\n\n    _defineProperty(this, \"isMicMuted\", false);\n\n    _defineProperty(this, \"_options\", void 0);\n\n    this._options = options;\n\n    if (typeof this._options.isMicMuted !== 'undefined') {\n      this.isMicMuted = this._options.isMicMuted;\n    }\n\n    if (player.readyState()) {\n      this.initialized = true;\n      const text = this.isMicMuted ? 'Unmute Local Mic' : 'Mute Local Mic';\n      this.controlText(text);\n    }\n\n    this.on(player, 'timeupdate', () => {\n      if (this.initialized) {\n        this.update();\n      }\n    });\n  }\n\n  update() {}\n\n  createEl() {\n    return super.createEl('button', {\n      innerHTML: '<span role=\"img\" aria-label=\"audio\" class=\"anticon anticon-audio\"><svg viewBox=\"64 64 896 896\" focusable=\"false\" data-icon=\"audio\" width=\"1.5em\" height=\"1.5em\" fill=\"currentColor\" aria-hidden=\"true\"><path d=\"M842 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 140.3-113.7 254-254 254S258 594.3 258 454c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8 0 168.7 126.6 307.9 290 327.6V884H326.7c-13.7 0-24.7 14.3-24.7 32v36c0 4.4 2.8 8 6.2 8h407.6c3.4 0 6.2-3.6 6.2-8v-36c0-17.7-11-32-24.7-32H548V782.1c165.3-18 294-158 294-328.1zM512 624c93.9 0 170-75.2 170-168V232c0-92.8-76.1-168-170-168s-170 75.2-170 168v224c0 92.8 76.1 168 170 168zm-94-392c0-50.6 41.9-92 94-92s94 41.4 94 92v224c0 50.6-41.9 92-94 92s-94-41.4-94-92V232z\"></path></svg></span>',\n      className: 'vjs-audio vjs-control vjs-button'\n    });\n  }\n\n  buildCSSClass() {\n    return `${super.buildCSSClass()}`;\n  }\n\n  handleClick() {\n    const {\n      muteLocalMic,\n      unmuteLocalMic\n    } = this._options;\n\n    if (this.initialized) {\n      const audio = document.querySelector('.vjs-audio');\n      audio.classList.toggle('vjs-audio-off');\n      let controlText = '';\n\n      if (this.isMicMuted) {\n        unmuteLocalMic();\n        controlText = 'Mute Local Mic';\n      } else {\n        muteLocalMic();\n        controlText = 'Unmute Local Mic';\n      }\n\n      if (this.controlText() !== controlText) {\n        this.controlText(controlText);\n      }\n\n      this.isMicMuted = !this.isMicMuted;\n    }\n  }\n\n}\n\nvideojs.registerComponent('AudioMuteToggleButton', AudioMuteToggleButton);\nexport default AudioMuteToggleButton;","map":null,"metadata":{},"sourceType":"module"}