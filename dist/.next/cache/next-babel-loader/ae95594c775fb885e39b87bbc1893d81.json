{"ast":null,"code":"var __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport * as React from 'react';\nimport { Row, Col, Button, Skeleton } from 'antd';\nimport { FacebookIcon, TwitterIcon, InstagramIcon } from '@components/common/base/icons';\nimport { capitalizeFirstLetter, formatDate, getAge } from 'src/lib';\nimport Link from 'next/link';\nimport './index.less';\n\nvar renderPerformerTags = function renderPerformerTags() {\n  var tags = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return tags.map(function (tag, index) {\n    return __jsx(Link, {\n      key: \"performer-tag-\".concat(tag),\n      href: {\n        pathname: '/tag',\n        query: {\n          tags: tag\n        }\n      },\n      as: \"/tag/\".concat(tag)\n    }, __jsx(\"a\", null, __jsx(\"span\", null, \"#\", index < tags.length - 1 ? \"\".concat(tag, \", \") : tag)));\n  });\n};\n\nvar ProfileCard = function ProfileCard(_ref) {\n  var performer = _ref.performer,\n      searching = _ref.searching,\n      success = _ref.success,\n      placeholderAvatarUrl = _ref.placeholderAvatarUrl;\n  var avatar = performer.avatar,\n      username = performer.username,\n      createdAt = performer.createdAt,\n      gender = performer.gender,\n      ethnicity = performer.ethnicity,\n      country = performer.country,\n      height = performer.height,\n      weight = performer.weight,\n      dateOfBirth = performer.dateOfBirth,\n      tags = performer.tags,\n      socials = performer.socials,\n      lastStreamingTime = performer.lastStreamingTime,\n      eyes = performer.eyes;\n  return __jsx(\"div\", {\n    className: \"profile-card\"\n  }, searching ? __jsx(Skeleton, {\n    loading: true,\n    paragraph: {\n      rows: 4\n    }\n  }) : success && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"avatar\"\n  }, __jsx(\"img\", {\n    src: avatar || placeholderAvatarUrl,\n    alt: \"\"\n  })), __jsx(\"div\", {\n    className: \"profile\"\n  }, __jsx(\"table\", null, __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n    style: {\n      width: 150,\n      minWidth: 150\n    }\n  }), __jsx(\"th\", null)), __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Username\"), __jsx(\"td\", {\n    className: \"text\"\n  }, username)), gender && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Gender\"), __jsx(\"td\", {\n    className: \"text\"\n  }, gender)), createdAt && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Member Since\"), __jsx(\"td\", {\n    className: \"text\"\n  }, formatDate(createdAt, 'MMMM DD, YYYY'))), __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Last Broadcast\"), __jsx(\"td\", {\n    className: \"text\"\n  }, formatDate(lastStreamingTime, 'LLLL'))), ethnicity && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Ethnicity\"), __jsx(\"td\", {\n    className: \"text\"\n  }, ethnicity)), dateOfBirth && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Age\"), __jsx(\"td\", {\n    className: \"text\"\n  }, getAge(dateOfBirth))), country && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Country\"), __jsx(\"td\", {\n    className: \"text\"\n  }, country)), height && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Height\"), __jsx(\"td\", {\n    className: \"text\"\n  }, height)), weight && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Weight\"), __jsx(\"td\", {\n    className: \"text\"\n  }, weight)), eyes && __jsx(\"tr\", null, __jsx(\"td\", {\n    className: \"lable\"\n  }, \"Eyes\"), __jsx(\"td\", {\n    className: \"text\"\n  }, eyes))))), __jsx(\"br\", null), performer.aboutMe && __jsx(\"p\", null, \"About\", ' ', username), __jsx(\"div\", {\n    className: \"bio\"\n  }, __jsx(\"span\", null, performer.aboutMe)), __jsx(\"br\", null), __jsx(\"p\", null, \"What We do on webcam\"), tags && tags.length > 0 && __jsx(\"div\", {\n    className: \"tags\"\n  }, renderPerformerTags(tags)), performer.schedule && __jsx(React.Fragment, null, __jsx(\"p\", null, \"Working hours of \".concat(capitalizeFirstLetter(performer.username))), __jsx(Row, {\n    className: \"schedule\"\n  }, performer.schedule && Object.keys(performer.schedule).map(function (index) {\n    var _performer$schedule$i, _performer$schedule$i2, _performer$schedule$i3, _performer$schedule$i4;\n\n    return __jsx(Col, {\n      sm: {\n        span: 8\n      },\n      xs: {\n        span: 12\n      },\n      key: index\n    }, __jsx(\"span\", {\n      style: {\n        color: '#ff0066',\n        fontWeight: 'bold',\n        textTransform: 'uppercase'\n      }\n    }, \"\".concat(index, \"  \")), __jsx(\"span\", {\n      style: {\n        color: '#000000',\n        fontWeight: 'bold'\n      }\n    }, ((_performer$schedule$i = performer.schedule[index]) === null || _performer$schedule$i === void 0 ? void 0 : _performer$schedule$i.start) !== '00:00' && ((_performer$schedule$i2 = performer.schedule[index]) === null || _performer$schedule$i2 === void 0 ? void 0 : _performer$schedule$i2.end) !== '00:00' ? \"\".concat(((_performer$schedule$i3 = performer.schedule[index]) === null || _performer$schedule$i3 === void 0 ? void 0 : _performer$schedule$i3.start) || 'N/A', \" - \").concat(((_performer$schedule$i4 = performer.schedule[index]) === null || _performer$schedule$i4 === void 0 ? void 0 : _performer$schedule$i4.end) || 'N/A') : 'N/A'));\n  }))), __jsx(\"br\", null), socials && socials.length > 0 && __jsx(\"p\", null, \"Find Me On\"), __jsx(Row, {\n    className: \"social\",\n    gutter: 10\n  }, socials && socials.facebook && __jsx(Col, null, __jsx(\"a\", {\n    href: socials.facebook,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: {\n      padding: 0,\n      width: 36,\n      height: 32\n    }\n  }, __jsx(FacebookIcon, null)))), socials && socials.twitter && __jsx(Col, null, __jsx(\"a\", {\n    href: socials.twitter,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: {\n      padding: 0,\n      width: 36,\n      height: 32\n    }\n  }, __jsx(TwitterIcon, null)))), socials && socials.instagram && __jsx(Col, null, __jsx(\"a\", {\n    href: socials.instagram,\n    target: \"_blank\",\n    rel: \"noreferrer\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: {\n      padding: 0,\n      width: 36,\n      height: 32\n    }\n  }, __jsx(InstagramIcon, null)))))));\n};\n\n_c = ProfileCard;\nProfileCard.defaultProps = {\n  searching: false,\n  success: false,\n  placeholderAvatarUrl: '/no-avatar.png'\n};\nexport default ProfileCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileCard\");","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/performer/profile-card.tsx"],"names":["React","Row","Col","Button","Skeleton","FacebookIcon","TwitterIcon","InstagramIcon","capitalizeFirstLetter","formatDate","getAge","Link","renderPerformerTags","tags","map","tag","index","pathname","query","length","ProfileCard","performer","searching","success","placeholderAvatarUrl","avatar","username","createdAt","gender","ethnicity","country","height","weight","dateOfBirth","socials","lastStreamingTime","eyes","rows","width","minWidth","aboutMe","schedule","Object","keys","span","color","fontWeight","textTransform","start","end","facebook","padding","twitter","instagram","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport * as React from 'react';\nimport { IPerformer } from 'src/interfaces';\nimport {\n  Row, Col, Button, Skeleton\n} from 'antd';\nimport {\n  FacebookIcon,\n  TwitterIcon,\n  InstagramIcon\n} from '@components/common/base/icons';\nimport { capitalizeFirstLetter, formatDate, getAge } from 'src/lib';\nimport Link from 'next/link';\n\nimport './index.less';\n\ninterface IProps {\n  performer: IPerformer;\n  searching?: boolean;\n  success?: boolean;\n  placeholderAvatarUrl?: string;\n}\n\nconst renderPerformerTags = (tags: string[] = []) => tags.map((tag, index) => (\n  <Link\n    key={`performer-tag-${tag}`}\n    href={{ pathname: '/tag', query: { tags: tag } }}\n    as={`/tag/${tag}`}\n  >\n    <a>\n      <span>\n        #\n        {index < tags.length - 1 ? `${tag}, ` : tag}\n      </span>\n    </a>\n  </Link>\n));\n\nconst ProfileCard = ({\n  performer, searching, success, placeholderAvatarUrl\n}: IProps) => {\n  const {\n    avatar,\n    username,\n    createdAt,\n    gender,\n    ethnicity,\n    country,\n    height,\n    weight,\n    dateOfBirth,\n    tags,\n    socials,\n    lastStreamingTime,\n    eyes\n  } = performer;\n  return (\n    <div className=\"profile-card\">\n      {searching ? (\n        <Skeleton loading paragraph={{ rows: 4 }} />\n      ) : success && (\n        <>\n\n          <div className=\"avatar\">\n            <img src={avatar || placeholderAvatarUrl} alt=\"\" />\n          </div>\n\n          <div className=\"profile\">\n            <table>\n              <tbody>\n                <tr>\n                  <th style={{ width: 150, minWidth: 150 }} />\n                  <th />\n                </tr>\n                <tr>\n                  <td className=\"lable\">\n                    Username\n                  </td>\n                  <td className=\"text\">\n                    {username}\n                  </td>\n                </tr>\n                {gender && (\n                <tr>\n                  <td className=\"lable\">\n                    Gender\n                  </td>\n                  <td className=\"text\">\n                    {gender}\n                  </td>\n                </tr>\n                )}\n                {createdAt && (\n                <tr>\n                  <td className=\"lable\">\n                    Member Since\n                  </td>\n                  <td className=\"text\">\n                    {formatDate(createdAt, 'MMMM DD, YYYY')}\n                  </td>\n                </tr>\n                )}\n                <tr>\n                  <td className=\"lable\">\n                    Last Broadcast\n                  </td>\n                  <td className=\"text\">\n                    {formatDate(lastStreamingTime, 'LLLL')}\n                  </td>\n                </tr>\n                {ethnicity && (\n                <tr>\n                  <td className=\"lable\">\n                    Ethnicity\n                  </td>\n                  <td className=\"text\">\n                    {ethnicity}\n                  </td>\n                </tr>\n                )}\n                {/* <div className=\"orientationn\">\n              <span className=\"lable\">Orientation: </span>\n              <span className=\"\" style={{ textTransform: 'capitalize' }} />\n            </div> */}\n                {dateOfBirth && (\n                <tr>\n                  <td className=\"lable\">\n                    Age\n                  </td>\n                  <td className=\"text\">\n                    {getAge(dateOfBirth)}\n                  </td>\n                </tr>\n                )}\n                {country && (\n                <tr>\n                  <td className=\"lable\">\n                    Country\n                  </td>\n                  <td className=\"text\">\n                    {country}\n                  </td>\n                </tr>\n                )}\n                {height && (\n                <tr>\n                  <td className=\"lable\">\n                    Height\n                  </td>\n                  <td className=\"text\">\n                    {height}\n                  </td>\n                </tr>\n                )}\n                {weight && (\n                <tr>\n                  <td className=\"lable\">\n                    Weight\n                  </td>\n                  <td className=\"text\">\n                    {weight}\n                  </td>\n                </tr>\n                )}\n                {eyes && (\n                <tr>\n                  <td className=\"lable\">\n                    Eyes\n                  </td>\n                  <td className=\"text\">\n                    {eyes}\n                  </td>\n                </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n          <br />\n          {performer.aboutMe && (\n          <p>\n            About\n            {' '}\n            {username}\n          </p>\n          )}\n          <div className=\"bio\">\n            <span>{performer.aboutMe}</span>\n          </div>\n          <br />\n          <p>What We do on webcam</p>\n          {tags && tags.length > 0 && <div className=\"tags\">{renderPerformerTags(tags)}</div>}\n          {performer.schedule\n            && (\n            <>\n              <p>{`Working hours of ${capitalizeFirstLetter(performer.username)}`}</p>\n              <Row className=\"schedule\">\n                {performer.schedule\n                  && Object.keys(performer.schedule).map((index: string) => (\n                    <Col sm={{ span: 8 }} xs={{ span: 12 }} key={index}>\n                      <span\n                        style={{\n                          color: '#ff0066',\n                          fontWeight: 'bold',\n                          textTransform: 'uppercase'\n                        }}\n                      >\n                        {`${index}  `}\n                      </span>\n                      <span\n                        style={{\n                          color: '#000000',\n                          fontWeight: 'bold'\n                        }}\n                      >\n                        {performer.schedule[index]?.start !== '00:00' && performer.schedule[index]?.end !== '00:00'\n                          ? `${performer.schedule[index]?.start || 'N/A'} - ${performer.schedule[index]?.end || 'N/A'}`\n                          : 'N/A'}\n                      </span>\n                    </Col>\n                  ))}\n              </Row>\n            </>\n            )}\n          <br />\n          {socials && socials.length > 0 && <p>Find Me On</p>}\n          <Row className=\"social\" gutter={10}>\n            {socials && socials.facebook && (\n            <Col>\n              <a href={socials.facebook} target=\"_blank\" rel=\"noreferrer\">\n                <Button\n                  type=\"primary\"\n                  style={{ padding: 0, width: 36, height: 32 }}\n                >\n                  <FacebookIcon />\n                </Button>\n              </a>\n            </Col>\n            )}\n            {socials && socials.twitter && (\n            <Col>\n              <a href={socials.twitter} target=\"_blank\" rel=\"noreferrer\">\n                <Button\n                  type=\"primary\"\n                  style={{ padding: 0, width: 36, height: 32 }}\n                >\n                  <TwitterIcon />\n                </Button>\n              </a>\n            </Col>\n            )}\n            {socials && socials.instagram && (\n            <Col>\n              <a href={socials.instagram} target=\"_blank\" rel=\"noreferrer\">\n                <Button\n                  type=\"primary\"\n                  style={{ padding: 0, width: 36, height: 32 }}\n                >\n                  <InstagramIcon />\n                </Button>\n              </a>\n            </Col>\n            )}\n          </Row>\n        </>\n      )}\n    </div>\n  );\n};\nProfileCard.defaultProps = {\n  searching: false,\n  success: false,\n  placeholderAvatarUrl: '/no-avatar.png'\n};\n\nexport default ProfileCard;\n"]},"metadata":{},"sourceType":"module"}