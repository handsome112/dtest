{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport Router from 'next/router';\nimport { authService, userService, performerService, studioService } from 'src/services';\nimport { PERFORMER_ROLE, USER_ROLE, STUDIO_ROLE } from 'src/services/api-request';\nimport { message } from 'antd';\nimport { updateCurrentStudio } from '../studio/actions';\nimport { updateCurrentPerformer } from '../performer/actions';\nimport { updateCurrentUser } from '../user/actions';\nimport { login, loginSuccess, logout, loginFail, performerRegister, performerRegisterFail, setPerformerRegisterSubmitting, loginRequesting, userRegister, userRegisterFail, userRegisterSuccess, setUserRegisterSubmitting, performerRegisterSuccess, performerlogin, performerloginFail, performerloginSuccess, studioLogin, studioLoginSuccess, studioLoginFail, updatePassword, updatePasswordSuccess, updatePasswordFail, setUpdatePasswordSubmitting } from './actions';\nvar authSagas = [{\n  on: login,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var payload, resp, userResp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return put(loginRequesting());\n\n          case 3:\n            payload = data.payload;\n            _context.next = 6;\n            return authService.login(payload);\n\n          case 6:\n            resp = _context.sent.data;\n            _context.next = 9;\n            return authService.setAuthHeader(resp.token, USER_ROLE);\n\n          case 9:\n            _context.next = 11;\n            return userService.me();\n\n          case 11:\n            userResp = _context.sent.data;\n            _context.next = 14;\n            return put(updateCurrentUser(userResp));\n\n          case 14:\n            _context.next = 16;\n            return put(loginSuccess());\n\n          case 16:\n            Router.push('/');\n            _context.next = 26;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            _context.next = 23;\n            return Promise.resolve(_context.t0);\n\n          case 23:\n            error = _context.sent;\n            _context.next = 26;\n            return put(loginFail(error));\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, worker, null, [[0, 19]]);\n  })\n}, {\n  on: performerlogin,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var payload, resp, performerResp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return put(loginRequesting());\n\n          case 3:\n            payload = data.payload;\n            _context2.next = 6;\n            return authService.performerLogin(payload);\n\n          case 6:\n            resp = _context2.sent.data;\n            _context2.next = 9;\n            return authService.setAuthHeader(resp.token, PERFORMER_ROLE);\n\n          case 9:\n            _context2.next = 11;\n            return performerService.me();\n\n          case 11:\n            performerResp = _context2.sent.data;\n            _context2.next = 14;\n            return put(updateCurrentPerformer(performerResp));\n\n          case 14:\n            _context2.next = 16;\n            return put(performerloginSuccess());\n\n          case 16:\n            Router.push('/live');\n            _context2.next = 26;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.next = 23;\n            return Promise.resolve(_context2.t0);\n\n          case 23:\n            error = _context2.sent;\n            _context2.next = 26;\n            return put(performerloginFail(error));\n\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, worker, null, [[0, 19]]);\n  })\n}, {\n  on: studioLogin,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var payload, resp, studioResp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return put(loginRequesting());\n\n          case 3:\n            payload = data.payload;\n            _context3.next = 6;\n            return authService.studioLogin(payload);\n\n          case 6:\n            resp = _context3.sent.data;\n            _context3.next = 9;\n            return authService.setAuthHeader(resp.token, STUDIO_ROLE);\n\n          case 9:\n            _context3.next = 11;\n            return studioService.me();\n\n          case 11:\n            studioResp = _context3.sent.data;\n            _context3.next = 14;\n            return put(updateCurrentStudio(studioResp));\n\n          case 14:\n            _context3.next = 16;\n            return put(studioLoginSuccess());\n\n          case 16:\n            Router.push('/studio/account-settings');\n            _context3.next = 26;\n            break;\n\n          case 19:\n            _context3.prev = 19;\n            _context3.t0 = _context3[\"catch\"](0);\n            _context3.next = 23;\n            return Promise.resolve(_context3.t0);\n\n          case 23:\n            error = _context3.sent;\n            _context3.next = 26;\n            return put(studioLoginFail(error));\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, worker, null, [[0, 19]]);\n  })\n}, {\n  on: performerRegister,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var payload, resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return put(setPerformerRegisterSubmitting());\n\n          case 3:\n            payload = data.payload;\n            _context4.next = 6;\n            return authService.performersRegister(payload);\n\n          case 6:\n            resp = _context4.sent;\n            _context4.next = 9;\n            return put(performerRegisterSuccess(resp.data));\n\n          case 9:\n            _context4.next = 18;\n            break;\n\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](0);\n            _context4.next = 15;\n            return Promise.resolve(_context4.t0);\n\n          case 15:\n            error = _context4.sent;\n            _context4.next = 18;\n            return put(performerRegisterFail(error));\n\n          case 18:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, worker, null, [[0, 11]]);\n  })\n}, {\n  on: logout,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker() {\n    return _regeneratorRuntime.wrap(function worker$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return authService.removeToken();\n\n          case 3:\n            _context5.next = 5;\n            return authService.removeRemember();\n\n          case 5:\n            Router.push('/');\n            message.success('Log out!');\n            _context5.next = 12;\n            break;\n\n          case 9:\n            _context5.prev = 9;\n            _context5.t0 = _context5[\"catch\"](0);\n            message.error('Something went wrong!');\n\n          case 12:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, worker, null, [[0, 9]]);\n  })\n}, {\n  on: userRegister,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(data) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return put(setUserRegisterSubmitting());\n\n          case 3:\n            _context6.next = 5;\n            return authService.userRegister(data.payload);\n\n          case 5:\n            resp = _context6.sent;\n            _context6.next = 8;\n            return put(userRegisterSuccess(resp.data));\n\n          case 8:\n            _context6.next = 17;\n            break;\n\n          case 10:\n            _context6.prev = 10;\n            _context6.t0 = _context6[\"catch\"](0);\n            _context6.next = 14;\n            return Promise.resolve(_context6.t0);\n\n          case 14:\n            error = _context6.sent;\n            _context6.next = 17;\n            return put(userRegisterFail(error));\n\n          case 17:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}, {\n  on: updatePassword,\n  worker: /*#__PURE__*/_regeneratorRuntime.mark(function worker(action) {\n    var resp, error;\n    return _regeneratorRuntime.wrap(function worker$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return put(setUpdatePasswordSubmitting());\n\n          case 3:\n            _context7.next = 5;\n            return authService.updatePassword(action.payload);\n\n          case 5:\n            resp = _context7.sent;\n            _context7.next = 8;\n            return put(updatePasswordSuccess(resp.data));\n\n          case 8:\n            _context7.next = 17;\n            break;\n\n          case 10:\n            _context7.prev = 10;\n            _context7.t0 = _context7[\"catch\"](0);\n            _context7.next = 14;\n            return Promise.resolve(_context7.t0);\n\n          case 14:\n            error = _context7.sent;\n            _context7.next = 17;\n            return put(updatePasswordFail(error));\n\n          case 17:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, worker, null, [[0, 10]]);\n  })\n}];\nexport default flatten([createSagas(authSagas)]);","map":null,"metadata":{},"sourceType":"module"}