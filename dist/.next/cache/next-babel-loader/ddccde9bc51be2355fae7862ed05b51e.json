{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\nimport './footer.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport React from 'react';\nimport { Row, Col, Button, message } from 'antd';\nimport { PlusCircleOutlined, UserOutlined, CrownOutlined } from '@ant-design/icons';\nimport { checkUserLogin, getResponseError } from 'src/lib/utils';\nimport Router from 'next/router';\nimport Popup from '@components/common/base/popup';\nimport { transactionService } from 'src/services';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport SendTipContent from './tip/content';\nconst btnStyle = {\n  height: 50,\n  marginBottom: 1\n};\n\nconst Footer = ({\n  activeConversation,\n  performer,\n  loggedIn,\n  inGroupChat,\n  inPrivateChat,\n  user,\n  updateCurrentUserBalance,\n  settings\n}) => {\n  const tipPopupRef = /*#__PURE__*/React.createRef();\n  let contentRef;\n  const {\n    username,\n    _id\n  } = performer;\n  const [tipping, setTipping] = React.useState(false);\n  const [disableOk, setDisableOk] = React.useState(false);\n\n  const handleError = async e => {\n    const error = await Promise.resolve(e);\n    message.error(getResponseError(error));\n  };\n\n  const goChatRoom = roomName => {\n    if (!checkUserLogin(loggedIn, user)) {\n      if (false) {\n        Router.push('/auth/login');\n      }\n\n      return;\n    }\n\n    const option = roomName === 'privatechat' ? SETTING_KEYS.OPTION_FOR_PRIVATE : SETTING_KEYS.OPTION_FOR_GROUP;\n    const path = settings[option] === 'webrtc' ? 'webrtc/' : '';\n    Router.push({\n      pathname: `/stream/${path}${roomName}`,\n      query: {\n        username,\n        performer: JSON.stringify(performer)\n      }\n    }, `/stream/${path}${roomName}/${username}`);\n  };\n\n  const getMoreTokens = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      if (false) {\n        Router.push('/auth/login');\n      }\n\n      return;\n    }\n\n    Router.push('/account/user/funds-tokens');\n  };\n\n  const sendTip = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(`Please login to send tip to ${username}!`);\n      return;\n    }\n\n    tipPopupRef.current && tipPopupRef.current.setVisible(true);\n  };\n\n  const onOk = async () => {\n    var _activeConversation$d;\n\n    if (activeConversation !== null && activeConversation !== void 0 && (_activeConversation$d = activeConversation.data) !== null && _activeConversation$d !== void 0 && _activeConversation$d._id) {\n      const ref = tipPopupRef.current;\n\n      try {\n        setTipping(true);\n        const token = contentRef ? contentRef.getValueToken() : 0;\n        if (parseInt(token, 10) <= 0) return;\n        await transactionService.sendTipToken(_id, token, activeConversation.data._id);\n        ref && ref.setVisible(false);\n        updateCurrentUserBalance && updateCurrentUserBalance(-token);\n\n        const content = __jsx(NumberFormat, {\n          value: token,\n          prefix: \"You sent \",\n          suffix: \" tokens\"\n        });\n\n        message.success(content);\n      } catch (e) {\n        handleError(e);\n      } finally {\n        setTipping(false);\n        ref && ref.setVisible(false);\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"stream-footer\"\n  }, __jsx(Popup, {\n    title: `Tips to ${username}`,\n    okButtonProps: {\n      disabled: disableOk\n    },\n    content: __jsx(SendTipContent, {\n      ref: ref => contentRef = ref,\n      setDisableOk: setDisableOk\n    }),\n    ref: tipPopupRef,\n    loading: tipping,\n    onOk: onOk,\n    width: 567\n  }), __jsx(Row, {\n    gutter: [1, 1],\n    style: {\n      marginBottom: '15px',\n      marginTop: '1px'\n    }\n  }, __jsx(Col, {\n    lg: 6,\n    xs: 12,\n    md: 12\n  }, __jsx(Button, {\n    disabled: inGroupChat,\n    type: \"primary\",\n    style: _objectSpread({}, btnStyle),\n    onClick: () => goChatRoom('groupchat'),\n    block: true,\n    icon: __jsx(\"img\", {\n      className: \"anticon\",\n      src: \"/icons/group.svg\",\n      height: 16,\n      alt: \"\"\n    })\n  }, \"Group Chat\")), __jsx(Col, {\n    lg: 6,\n    xs: 12,\n    md: 12\n  }, __jsx(Button, {\n    disabled: inPrivateChat,\n    type: \"primary\",\n    style: _objectSpread({}, btnStyle),\n    onClick: () => goChatRoom('privatechat'),\n    block: true,\n    icon: __jsx(UserOutlined, null)\n  }, \"Private Chat\")), __jsx(Col, {\n    lg: 6,\n    xs: 12,\n    md: 12\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: _objectSpread({}, btnStyle),\n    block: true,\n    onClick: () => getMoreTokens(),\n    icon: __jsx(CrownOutlined, null)\n  }, \"Top-up My Tokens\")), __jsx(Col, {\n    lg: 6,\n    xs: 12,\n    md: 12\n  }, __jsx(Button, {\n    type: \"primary\",\n    style: _objectSpread({}, btnStyle),\n    onClick: () => sendTip(),\n    block: true,\n    icon: __jsx(PlusCircleOutlined, null)\n  }, \"Send Tip\"))));\n};\n\nFooter.defaultProps = {\n  updateCurrentUserBalance: null,\n  inGroupChat: false,\n  inPrivateChat: false\n};\nexport default Footer;","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/streaming/footer.tsx"],"names":["SETTING_KEYS","React","Row","Col","Button","message","PlusCircleOutlined","UserOutlined","CrownOutlined","checkUserLogin","getResponseError","Router","Popup","transactionService","NumberFormat","SendTipContent","btnStyle","height","marginBottom","Footer","activeConversation","performer","loggedIn","inGroupChat","inPrivateChat","user","updateCurrentUserBalance","settings","tipPopupRef","createRef","contentRef","username","_id","tipping","setTipping","useState","disableOk","setDisableOk","handleError","e","error","Promise","resolve","goChatRoom","roomName","push","option","OPTION_FOR_PRIVATE","OPTION_FOR_GROUP","path","pathname","query","JSON","stringify","getMoreTokens","sendTip","current","setVisible","onOk","data","ref","token","getValueToken","parseInt","sendTipToken","content","success","disabled","marginTop","defaultProps"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\nimport './footer.less';\nimport { SETTING_KEYS } from 'src/constants';\nimport React from 'react';\nimport {\n  Row, Col, Button, message\n} from 'antd';\nimport { IPerformer, IUser, StreamSettings } from 'src/interfaces';\nimport { PlusCircleOutlined, UserOutlined, CrownOutlined } from '@ant-design/icons';\nimport { checkUserLogin, getResponseError } from 'src/lib/utils';\nimport Router from 'next/router';\nimport Popup from '@components/common/base/popup';\nimport { transactionService } from 'src/services';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport SendTipContent from './tip/content';\n\nconst btnStyle = { height: 50, marginBottom: 1 };\n\ninterface Interface {\n  activeConversation: any;\n  updateCurrentUserBalance?: Function;\n  loggedIn: boolean;\n  performer: IPerformer;\n  user: IUser;\n  inGroupChat?: boolean;\n  inPrivateChat?: boolean;\n  settings: StreamSettings;\n}\n\nconst Footer = ({\n  activeConversation,\n  performer,\n  loggedIn,\n  inGroupChat,\n  inPrivateChat,\n  user,\n  updateCurrentUserBalance,\n  settings\n}: Interface) => {\n  const tipPopupRef = React.createRef<Popup>();\n  let contentRef;\n  const { username, _id } = performer;\n  const [tipping, setTipping] = React.useState(false);\n  const [disableOk, setDisableOk] = React.useState(false);\n  const handleError = async (e) => {\n    const error = await Promise.resolve(e);\n    message.error(getResponseError(error));\n  };\n  const goChatRoom = (roomName: 'privatechat' | 'groupchat') => {\n    if (!checkUserLogin(loggedIn, user)) {\n      if (process.browser) {\n        Router.push('/auth/login');\n      }\n      return;\n    }\n\n    const option = roomName === 'privatechat' ? SETTING_KEYS.OPTION_FOR_PRIVATE : SETTING_KEYS.OPTION_FOR_GROUP;\n    const path = settings[option] === 'webrtc' ? 'webrtc/' : '';\n    Router.push(\n      {\n        pathname: `/stream/${path}${roomName}`,\n        query: { username, performer: JSON.stringify(performer) }\n      },\n      `/stream/${path}${roomName}/${username}`\n    );\n  };\n\n  const getMoreTokens = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      if (process.browser) {\n        Router.push('/auth/login');\n      }\n      return;\n    }\n\n    Router.push('/account/user/funds-tokens');\n  };\n\n  const sendTip = () => {\n    if (!checkUserLogin(loggedIn, user)) {\n      message.error(`Please login to send tip to ${username}!`);\n      return;\n    }\n\n    tipPopupRef.current && tipPopupRef.current.setVisible(true);\n  };\n\n  const onOk = async () => {\n    if (activeConversation?.data?._id) {\n      const ref = tipPopupRef.current;\n      try {\n        setTipping(true);\n        const token = contentRef ? contentRef.getValueToken() : 0;\n        if (parseInt(token, 10) <= 0) return;\n\n        await transactionService.sendTipToken(\n          _id,\n          token,\n          activeConversation.data._id\n        );\n        ref && ref.setVisible(false);\n        updateCurrentUserBalance && updateCurrentUserBalance(-token);\n        const content = (\n          <NumberFormat value={token} prefix=\"You sent \" suffix=\" tokens\" />\n        );\n        message.success(content);\n      } catch (e) {\n        handleError(e);\n      } finally {\n        setTipping(false);\n        ref && ref.setVisible(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"stream-footer\">\n      <Popup\n        title={`Tips to ${username}`}\n        okButtonProps={{ disabled: disableOk }}\n        content={(\n          <SendTipContent\n            ref={(ref) => (contentRef = ref)}\n            setDisableOk={setDisableOk}\n          />\n        )}\n        ref={tipPopupRef}\n        loading={tipping}\n        onOk={onOk}\n        width={567}\n      />\n      <Row gutter={[1, 1]} style={{ marginBottom: '15px', marginTop: '1px' }}>\n        <Col lg={6} xs={12} md={12}>\n          <Button\n            disabled={inGroupChat}\n            type=\"primary\"\n            style={{ ...btnStyle }}\n            onClick={() => goChatRoom('groupchat')}\n            block\n            icon={(\n              <img\n                className=\"anticon\"\n                src=\"/icons/group.svg\"\n                height={16}\n                alt=\"\"\n              />\n            )}\n          >\n            Group Chat\n          </Button>\n        </Col>\n        <Col lg={6} xs={12} md={12}>\n          <Button\n            disabled={inPrivateChat}\n            type=\"primary\"\n            style={{ ...btnStyle }}\n            onClick={() => goChatRoom('privatechat')}\n            block\n            icon={<UserOutlined />}\n          >\n            Private Chat\n          </Button>\n        </Col>\n        <Col lg={6} xs={12} md={12}>\n          <Button\n            type=\"primary\"\n            style={{ ...btnStyle }}\n            block\n            onClick={() => getMoreTokens()}\n            icon={<CrownOutlined />}\n          >\n            Top-up My Tokens\n          </Button>\n        </Col>\n        <Col lg={6} xs={12} md={12}>\n          <Button\n            type=\"primary\"\n            style={{ ...btnStyle }}\n            onClick={() => sendTip()}\n            block\n            icon={<PlusCircleOutlined />}\n          >\n            Send Tip\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n};\nFooter.defaultProps = {\n  updateCurrentUserBalance: null,\n  inGroupChat: false,\n  inPrivateChat: false\n};\n\nexport default Footer;\n"]},"metadata":{},"sourceType":"module"}