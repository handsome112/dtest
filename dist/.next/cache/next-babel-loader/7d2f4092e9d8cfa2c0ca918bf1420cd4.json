{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/var/www/dtest.live/src/components/order/table-list.tsx\";\n\nvar __jsx = React.createElement;\nimport { Table } from 'antd';\nimport React from 'react';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { formatDate } from '@lib/date';\nimport Link from 'next/link';\nimport { PerformerUsername } from '@components/performer';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport { OrderStatus } from './order-status';\n\nvar OrderTableList = function OrderTableList(_ref) {\n  var dataSource = _ref.dataSource,\n      pagination = _ref.pagination,\n      rowKey = _ref.rowKey,\n      loading = _ref.loading,\n      onChange = _ref.onChange,\n      type = _ref.type;\n  var columns = [{\n    title: 'Number',\n    dataIndex: 'orderNumber',\n    key: 'orderNumber',\n    responsive: ['sm']\n  }, {\n    title: \"\".concat(type === 'user' ? 'Seller' : 'Buyer'),\n    dataIndex: \"\".concat(type === 'user' ? 'performerId' : 'userId'),\n    key: \"\".concat(type === 'user' ? 'performerId' : 'userId'),\n    sorter: true,\n    render: function render(data, record) {\n      var _record$buyerInfo;\n\n      if (type === 'user') {\n        if (record.sellerSource === 'system') return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 56\n          }\n        }, \"System\");\n        return record !== null && record !== void 0 && record.sellerInfo ? __jsx(PerformerUsername, {\n          performer: record.sellerInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }) : __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        }, \"N/A\");\n      }\n\n      return (record === null || record === void 0 ? void 0 : (_record$buyerInfo = record.buyerInfo) === null || _record$buyerInfo === void 0 ? void 0 : _record$buyerInfo.username) || 'N/A';\n    }\n  }, {\n    title: 'Item',\n    dataIndex: 'name',\n    key: 'name',\n    render: function render(name, record) {\n      return __jsx(\"div\", {\n        style: {\n          wordWrap: 'break-word',\n          wordBreak: 'break-word'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, __jsx(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, name), __jsx(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }), __jsx(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, record.description));\n    }\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    sorter: true,\n    key: 'type'\n  }, {\n    title: 'Quantity',\n    dataIndex: 'quantity',\n    sorter: true,\n    key: 'quantity',\n    render: function render(quantity) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }\n      }, quantity);\n    }\n  }, {\n    title: 'Total Price (tokens)',\n    dataIndex: 'totalPrice',\n    sorter: true,\n    key: 'totalPrice',\n    render: function render(data, record) {\n      if (record.payBy === 'token') {\n        return __jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }\n        }, __jsx(NumberFormat, {\n          value: record.totalPrice,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }\n        }), ' ', \"token(s)\");\n      }\n\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, \"$\", __jsx(NumberFormat, {\n        value: record.totalPrice,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }));\n    }\n  }, {\n    title: 'Delivery Status',\n    dataIndex: 'deliveryStatus',\n    key: 'deliveryStatus',\n    sorter: true,\n    render: function render(status) {\n      return __jsx(OrderStatus, {\n        status: status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }\n      });\n    }\n  }, {\n    title: 'Last updated at',\n    dataIndex: 'createdAt',\n    sorter: true,\n    key: 'createdAt',\n    render: function render(date) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 16\n        }\n      }, formatDate(date));\n    }\n  }, {\n    title: 'Actions',\n    dataIndex: '_id',\n    render: function render(id) {\n      return __jsx(Link, {\n        href: {\n          pathname: \"/account/\".concat(type, \"/orders/detail\"),\n          query: {\n            id: id\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, __jsx(EyeOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }\n      })));\n    }\n  }];\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    pagination: pagination,\n    rowKey: rowKey,\n    loading: loading,\n    onChange: onChange.bind(_this),\n    scroll: {\n      x: 1300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default OrderTableList;","map":null,"metadata":{},"sourceType":"module"}