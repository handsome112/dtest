{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { updateUIValue, loadUIValue } from './actions'; // TODO -\n\nconst initialState = {\n  theme: 'light',\n  siteName: '',\n  logo: '',\n  banner: '',\n  menus: [],\n  placeholderAvatarUrl: '/no-avatar.png',\n  placeholderLoginUrl: '/background-login.jpg',\n  footerContent: '',\n  enablePopup18Plus: true,\n  popupContent18Plus: ''\n};\nconst uiReducers = [{\n  on: updateUIValue,\n\n  reducer(state, data) {\n    if (false) {\n      Object.keys(data.payload).forEach(key => localStorage && localStorage.setItem(key, data.payload[key]));\n    }\n\n    return _objectSpread(_objectSpread({}, state), data.payload);\n  }\n\n}, {\n  on: loadUIValue,\n\n  reducer(state) {\n    const newVal = {};\n\n    if (false) {\n      Object.keys(initialState).forEach(key => {\n        const val = state[key] || localStorage.getItem(key);\n\n        if (val) {\n          newVal[key] = val;\n        }\n      });\n    }\n\n    return _objectSpread(_objectSpread({}, state), newVal);\n  }\n\n}];\nexport default merge({}, createReducers('ui', [uiReducers], initialState));","map":null,"metadata":{},"sourceType":"module"}