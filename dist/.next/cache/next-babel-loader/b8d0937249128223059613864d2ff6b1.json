{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-return-assign */\nimport React from 'react';\nimport { Form, Input, InputNumber, message } from 'antd';\nimport Popup from '@components/common/base/popup';\nimport './modal-buy-assets.less';\nimport { capitalizeFirstLetter, getResponseError, isPhysicalProduct } from 'src/lib';\nimport { purchaseItemService } from 'src/services';\nimport NumberFormat from '@components/common/layout/numberformat';\nvar initialValues = {\n  postalCode: '',\n  deliveryAddress: '',\n  quantity: 1\n};\n\nvar ModalBuyAssets = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalBuyAssets, _React$PureComponent);\n\n  var _super = _createSuper(ModalBuyAssets);\n\n  function ModalBuyAssets(props) {\n    var _this;\n\n    _classCallCheck(this, ModalBuyAssets);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"form\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"popup\", void 0);\n\n    _this.state = _objectSpread(_objectSpread({}, initialValues), {}, {\n      type: 'product',\n      purchasing: false,\n      item: undefined\n    });\n    return _this;\n  }\n\n  _createClass(ModalBuyAssets, [{\n    key: \"onOk\",\n    value: function () {\n      var _onOk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var loggedIn, item;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                loggedIn = this.props.loggedIn;\n                item = this.state.item;\n\n                if (loggedIn) {\n                  _context.next = 5;\n                  break;\n                }\n\n                message.error('Please login to buy this item!');\n                return _context.abrupt(\"return\");\n\n              case 5:\n                this.setState({\n                  purchasing: true\n                });\n                isPhysicalProduct(item) ? this.form.submit() : this.submit();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function onOk() {\n        return _onOk.apply(this, arguments);\n      }\n\n      return onOk;\n    }()\n  }, {\n    key: \"submit\",\n    value: function () {\n      var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var formError, _this$props, onSucess, onError, updateCurrentUserBalance, _this$form$getFieldsV, quantity, _this$state, type, item, error;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                formError = this.form.getFieldsError().find(function (f) {\n                  return f.errors.length;\n                });\n                _this$props = this.props, onSucess = _this$props.onSucess, onError = _this$props.onError, updateCurrentUserBalance = _this$props.updateCurrentUserBalance;\n\n                if (!formError) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\");\n\n              case 4:\n                _this$form$getFieldsV = this.form.getFieldsValue(), quantity = _this$form$getFieldsV.quantity;\n                _context2.prev = 5;\n                _this$state = this.state, type = _this$state.type, item = _this$state.item;\n                _context2.next = 9;\n                return purchaseItemService.purchaseItem(item._id, type, this.form.getFieldsValue());\n\n              case 9:\n                if (type === 'product' && item.type === 'digital') {\n                  message.success('Please check your email to view the digital product');\n                } else {\n                  message.success('Purchased Success');\n                }\n\n                updateCurrentUserBalance && updateCurrentUserBalance(parseInt(item.token, 10) * quantity * -1);\n                onSucess && onSucess(type, item._id, {\n                  isBought: true\n                });\n                _context2.next = 21;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](5);\n                _context2.next = 18;\n                return Promise.resolve(_context2.t0);\n\n              case 18:\n                error = _context2.sent;\n                message.error(getResponseError(error));\n                onError && onError(error);\n\n              case 21:\n                _context2.prev = 21;\n                this.popup && this.popup.setVisible(false);\n                this.setState({\n                  purchasing: false\n                });\n                return _context2.finish(21);\n\n              case 25:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 14, 21, 25]]);\n      }));\n\n      function submit() {\n        return _submit.apply(this, arguments);\n      }\n\n      return submit;\n    }()\n  }, {\n    key: \"showModalBuyAssets\",\n    value: function showModalBuyAssets(item, type) {\n      this.setState({\n        item: item,\n        type: type\n      });\n      this.popup && this.popup.setVisible(true);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          type = _this$state2.type,\n          item = _this$state2.item,\n          quantity = _this$state2.quantity,\n          purchasing = _this$state2.purchasing;\n      var footer = []; // if (type === 'gallery') {\n      //   footer.push();\n      // }\n\n      return __jsx(Popup, {\n        footer: footer,\n        title: \"Buy \".concat(capitalizeFirstLetter(type)),\n        okText: \"Purchase\",\n        ref: function ref(_ref2) {\n          return _this2.popup = _ref2;\n        },\n        onOk: this.onOk.bind(this),\n        loading: purchasing,\n        content: item && __jsx(React.Fragment, null, __jsx(Form, {\n          initialValues: initialValues,\n          layout: \"vertical\",\n          ref: function ref(_ref) {\n            return _this2.form = _ref;\n          },\n          onValuesChange: function onValuesChange(_, values) {\n            return _this2.setState(values);\n          },\n          hidden: !isPhysicalProduct(item),\n          onFinish: this.submit.bind(this),\n          onFinishFailed: function onFinishFailed() {\n            return _this2.setState({\n              purchasing: false\n            });\n          }\n        }, __jsx(Form.Item, {\n          name: \"deliveryAddress\",\n          rules: [{\n            required: true,\n            message: 'Please provide delivery address!'\n          }],\n          label: \"Delivery Address\"\n        }, __jsx(Input, {\n          placeholder: \"Enter your address\"\n        })), __jsx(Form.Item, {\n          name: \"postalCode\",\n          label: \"Postal Code\"\n        }, __jsx(Input, {\n          placeholder: \"Enter your postal code\"\n        })), __jsx(Form.Item, {\n          name: \"quantity\",\n          label: \"Quantity\",\n          rules: [{\n            validator: function validator(_, value) {\n              if (parseInt(value, 10) < 1) {\n                return Promise.reject(new Error('Quantity must be positive!'));\n              }\n\n              return Promise.resolve();\n            }\n          }]\n        }, __jsx(InputNumber, {\n          placeholder: \"Enter quantity\",\n          style: {\n            width: '100%'\n          }\n        })), __jsx(Form.Item, null, __jsx(\"div\", null, type === 'video' && __jsx(\"strong\", null, \"Available high-res Video\"), type === 'gallery' && __jsx(\"strong\", null, \"Available high-res Image\"), quantity === 1 && __jsx(\"h3\", null, \"Buy this\", __jsx(\"span\", {\n          className: \"color\"\n        }, ' ', item.name || item.title, ' '), \"For\", __jsx(\"span\", {\n          className: \"color\"\n        }, ' ', __jsx(NumberFormat, {\n          value: item.token\n        }), ' '), \"Tokens\"), quantity > 1 && __jsx(\"h3\", null, __jsx(NumberFormat, {\n          value: parseInt(item.token, 10) * quantity,\n          prefix: \"Buy x\".concat(quantity, \" \").concat(item.name || item.title, \" For \"),\n          suffix: \" Tokens\"\n        }))))), __jsx(NumberFormat, {\n          hidden: isPhysicalProduct(item),\n          value: parseInt(item.token, 10) * quantity,\n          prefix: \"Buy \".concat(item.name || item.title, \" For \"),\n          suffix: \" Tokens\"\n        }))\n      });\n    }\n  }]);\n\n  return ModalBuyAssets;\n}(React.PureComponent);\n\nexport default ModalBuyAssets;","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/performer-assets/common/modal-buy-assets.tsx"],"names":["React","Form","Input","InputNumber","message","Popup","capitalizeFirstLetter","getResponseError","isPhysicalProduct","purchaseItemService","NumberFormat","initialValues","postalCode","deliveryAddress","quantity","ModalBuyAssets","props","state","type","purchasing","item","undefined","loggedIn","error","setState","form","submit","formError","getFieldsError","find","f","errors","length","onSucess","onError","updateCurrentUserBalance","getFieldsValue","purchaseItem","_id","success","parseInt","token","isBought","Promise","resolve","popup","setVisible","footer","ref","onOk","bind","_","values","required","validator","value","reject","Error","width","name","title","PureComponent"],"mappings":"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","sourcesContent":["/* eslint-disable no-return-assign */\nimport React from 'react';\nimport {\n  Form, Input, InputNumber, message\n} from 'antd';\nimport Popup from '@components/common/base/popup';\nimport { FormInstance } from 'antd/lib/form';\nimport './modal-buy-assets.less';\nimport {\n  capitalizeFirstLetter,\n  getResponseError,\n  isPhysicalProduct\n} from 'src/lib';\nimport { purchaseItemService } from 'src/services';\nimport NumberFormat from '@components/common/layout/numberformat';\n\nconst initialValues = {\n  postalCode: '',\n  deliveryAddress: '',\n  quantity: 1\n};\n\ninterface IProps {\n  onSucess?: Function;\n  onError?: Function;\n  loggedIn?: boolean;\n  updateCurrentUserBalance?: Function;\n}\n\ninterface IStates {\n  purchasing: boolean;\n  type?: 'product' | 'video' | 'gallery';\n  deliveryAddress?: string;\n  postalCode?: string;\n  item: any;\n  quantity: number;\n}\n\nclass ModalBuyAssets extends React.PureComponent<React.PropsWithRef<IProps>, IStates> {\n  form: FormInstance;\n\n  popup: any;\n\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      ...initialValues,\n      type: 'product',\n      purchasing: false,\n      item: undefined\n    };\n  }\n\n  async onOk() {\n    const { loggedIn } = this.props;\n    const { item } = this.state;\n    if (!loggedIn) {\n      message.error('Please login to buy this item!');\n      return;\n    }\n\n    this.setState({ purchasing: true });\n    isPhysicalProduct(item) ? this.form.submit() : this.submit();\n  }\n\n  async submit() {\n    const formError = this.form.getFieldsError().find((f) => f.errors.length);\n    const { onSucess, onError, updateCurrentUserBalance } = this.props;\n    if (formError) return;\n\n    const { quantity } = this.form.getFieldsValue();\n    try {\n      const { type, item } = this.state;\n      await purchaseItemService.purchaseItem(\n        item._id,\n        type,\n        this.form.getFieldsValue()\n      );\n      if (type === 'product' && item.type === 'digital') {\n        message.success('Please check your email to view the digital product');\n      } else {\n        message.success('Purchased Success');\n      }\n      updateCurrentUserBalance\n        && updateCurrentUserBalance(parseInt(item.token, 10) * quantity * -1);\n      onSucess && onSucess(type, item._id, { isBought: true });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n      onError && onError(error);\n    } finally {\n      this.popup && this.popup.setVisible(false);\n      this.setState({ purchasing: false });\n    }\n  }\n\n  showModalBuyAssets(item, type) {\n    this.setState({ item, type });\n    this.popup && this.popup.setVisible(true);\n  }\n\n  render() {\n    const {\n      type, item, quantity, purchasing\n    } = this.state;\n    const footer = [];\n    // if (type === 'gallery') {\n    //   footer.push();\n    // }\n\n    return (\n      <Popup\n        footer={footer}\n        title={`Buy ${capitalizeFirstLetter(type)}`}\n        okText=\"Purchase\"\n        ref={(ref) => (this.popup = ref)}\n        onOk={this.onOk.bind(this)}\n        loading={purchasing}\n        content={\n          item && (\n            <>\n              <Form\n                initialValues={initialValues}\n                layout=\"vertical\"\n                ref={(ref) => (this.form = ref)}\n                onValuesChange={(_, values: IStates) => this.setState(values)}\n                hidden={!isPhysicalProduct(item)}\n                onFinish={this.submit.bind(this)}\n                onFinishFailed={() => this.setState({ purchasing: false })}\n              >\n                <Form.Item\n                  name=\"deliveryAddress\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Please provide delivery address!'\n                    }\n                  ]}\n                  label=\"Delivery Address\"\n                >\n                  <Input placeholder=\"Enter your address\" />\n                </Form.Item>\n                <Form.Item name=\"postalCode\" label=\"Postal Code\">\n                  <Input placeholder=\"Enter your postal code\" />\n                </Form.Item>\n                <Form.Item\n                  name=\"quantity\"\n                  label=\"Quantity\"\n                  rules={[\n                    {\n                      validator(_, value) {\n                        if (parseInt(value, 10) < 1) {\n                          return Promise.reject(\n                            new Error('Quantity must be positive!')\n                          );\n                        }\n                        return Promise.resolve();\n                      }\n                    }\n                  ]}\n                >\n                  <InputNumber\n                    placeholder=\"Enter quantity\"\n                    style={{ width: '100%' }}\n                  />\n                </Form.Item>\n                <Form.Item>\n                  <div>\n                    {type === 'video' && (\n                      <strong>Available high-res Video</strong>\n                    )}\n                    {type === 'gallery' && (\n                      <strong>Available high-res Image</strong>\n                    )}\n                    {quantity === 1 && (\n                      <h3>\n                        {/* <NumberFormat value={item.token} prefix={`Buy this ${item.name || item.title} For `} suffix=\" Tokens\" /> */}\n                        Buy this\n                        <span className=\"color\">\n                          {' '}\n                          {item.name || item.title}\n                          {' '}\n                        </span>\n                        For\n                        <span className=\"color\">\n                          {' '}\n                          <NumberFormat value={item.token} />\n                          {' '}\n                        </span>\n                        Tokens\n                      </h3>\n                    )}\n                    {quantity > 1 && (\n                      <h3>\n                        <NumberFormat\n                          value={parseInt(item.token, 10) * quantity}\n                          prefix={`Buy x${quantity} ${\n                            item.name || item.title\n                          } For `}\n                          suffix=\" Tokens\"\n                        />\n                      </h3>\n                    )}\n                  </div>\n                </Form.Item>\n              </Form>\n              <NumberFormat\n                hidden={isPhysicalProduct(item)}\n                value={parseInt(item.token, 10) * quantity}\n                prefix={`Buy ${item.name || item.title} For `}\n                suffix=\" Tokens\"\n              />\n            </>\n          )\n        }\n      />\n    );\n  }\n}\n\nexport default ModalBuyAssets;\n"]},"metadata":{},"sourceType":"module"}