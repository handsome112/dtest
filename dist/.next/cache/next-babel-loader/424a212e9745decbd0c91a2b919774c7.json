{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from 'next/head';\nimport { message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport React, { PureComponent } from 'react';\nimport { postService } from '@services/post.service';\nimport { connect } from 'react-redux';\nimport Loader from '@components/common/base/loader';\nimport { getResponseError } from 'src/lib';\n\nvar PostDetail = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PostDetail, _PureComponent);\n\n  var _super = _createSuper(PostDetail);\n\n  function PostDetail(props) {\n    var _this;\n\n    _classCallCheck(this, PostDetail);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fetching: false,\n      post: null\n    };\n    return _this;\n  }\n\n  _createClass(PostDetail, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.getPost();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(prevProps) {\n        var id;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = this.props.id;\n\n                if (prevProps.id !== id) {\n                  this.getPost();\n                }\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidUpdate(_x) {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: \"getPost\",\n    value: function () {\n      var _getPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var id, resp, error;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = this.props.id;\n                _context3.prev = 1;\n                this.setState({\n                  fetching: true\n                });\n                _context3.next = 5;\n                return postService.findById(id);\n\n              case 5:\n                resp = _context3.sent;\n                this.setState({\n                  post: resp.data\n                });\n                _context3.next = 15;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                _context3.next = 13;\n                return Promise.resolve(_context3.t0);\n\n              case 13:\n                error = _context3.sent;\n                message.error(getResponseError(error));\n\n              case 15:\n                _context3.prev = 15;\n                this.setState({\n                  fetching: false\n                });\n                return _context3.finish(15);\n\n              case 18:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9, 15, 18]]);\n      }));\n\n      function getPost() {\n        return _getPost.apply(this, arguments);\n      }\n\n      return getPost;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          post = _this$state.post,\n          fetching = _this$state.fetching; // const { ui } = this.props;\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, post && post.title)), fetching && __jsx(Loader, {\n        spinning: true,\n        fullScreen: true\n      }), __jsx(\"div\", {\n        className: \"page-container\"\n      }, __jsx(PageHeader, {\n        title: post && post.title\n      }), __jsx(\"div\", {\n        className: \"page-content\" // eslint-disable-next-line react/no-danger\n        ,\n        dangerouslySetInnerHTML: {\n          __html: post && post.content\n        }\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref) {\n        var ctx, query;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                ctx = _ref.ctx;\n                query = ctx.query;\n                return _context4.abrupt(\"return\", query);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return PostDetail;\n}(PureComponent);\n\n_defineProperty(PostDetail, \"authenticate\", false);\n\nvar mapProps = function mapProps(state) {\n  return {\n    ui: state.ui\n  };\n};\n\nexport default connect(mapProps)(PostDetail);","map":null,"metadata":{},"sourceType":"module"}