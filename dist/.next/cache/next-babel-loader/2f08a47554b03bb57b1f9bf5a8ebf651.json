{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { useState } from 'react';\nimport Link from 'next/link';\nimport { Form, Input, Button, Space, Checkbox, Alert } from 'antd';\nimport { getResponseError } from '@lib/utils';\nimport { connect } from 'react-redux';\nimport { updateUIValue } from 'src/redux/ui/actions';\nimport FormFooterLogin from './footer-login-form';\nvar FormItem = Form.Item;\n\nvar LoginForm = function LoginForm(_ref) {\n  var requesting = _ref.requesting,\n      submit = _ref.submit,\n      error = _ref.error,\n      success = _ref.success,\n      onRemember = _ref.onRemember,\n      singularTextModel = _ref.singularTextModel;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var onPressEnter = function onPressEnter() {\n    form.submit();\n  };\n\n  return __jsx(Form, {\n    layout: \"vertical\",\n    onFinish: submit\n  }, __jsx(\"h1\", null, \"User Sign In\"), __jsx(FormItem, {\n    hasFeedback: true,\n    label: \"Email\",\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your email!'\n    }]\n  }, __jsx(Input, {\n    onPressEnter: onPressEnter,\n    placeholder: \"youremail@example.com\"\n  })), __jsx(FormItem, {\n    hasFeedback: true,\n    label: __jsx(Space, null, __jsx(\"span\", null, \"Password\")),\n    className: \"input-password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 6,\n      max: 14,\n      message: '6-14 characters'\n    }]\n  }, __jsx(Input.Password, {\n    onPressEnter: onPressEnter,\n    placeholder: \"Password\"\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      width: '100%',\n      margin: '15px 0'\n    }\n  }, __jsx(Checkbox, {\n    onChange: function onChange(e) {\n      return onRemember(e.target.checked);\n    }\n  }, \"Remember me\"), __jsx(Link, {\n    href: \"/auth/forgot-password\"\n  }, __jsx(\"a\", null, \"Forgot password?\"))), (error || success) && __jsx(FormItem, null, error && __jsx(Alert, {\n    message: \"Error\",\n    description: error.message && error.message === 'ACCOUNT_INACTIVE' ? 'You do not have permission' : getResponseError(error),\n    type: \"error\",\n    showIcon: true\n  }), success && __jsx(Alert, {\n    message: \"Login success\",\n    type: \"success\",\n    description: \"Redirecting...\"\n  })), __jsx(FormItem, {\n    className: \"row-button-auth\"\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: requesting,\n    loading: requesting\n  }, \"Sign in\")), __jsx(FormFooterLogin, {\n    account: \"user\",\n    singularTextModel: singularTextModel\n  }));\n};\n\nvar mapStates = function mapStates(state) {\n  return _objectSpread({}, state.ui);\n};\n\nvar mapDispatch = {\n  updateUIValue: updateUIValue\n};\nexport default connect(mapStates, mapDispatch)(LoginForm);","map":null,"metadata":{},"sourceType":"module"}