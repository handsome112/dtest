{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga'; // import { composeWithDevTools } from 'remote-redux-devtools';\n\nimport storeHolder from '@lib/storeHolder';\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\nconst bindMiddleware = middleware => {\n  if (false) {\n    return applyMiddleware(...middleware);\n  }\n\n  return applyMiddleware(...middleware);\n};\n/**\n * const composeEnhancers = composeWithDevTools({\n * realtime: true,\n * name: 'xcams user',\n * hostname: 'localhost',\n * port: 8000 // the port your remotedev server is running at\n * });\n*/\n\n\nfunction configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, bindMiddleware([sagaMiddleware]));\n  /**\n   * redux dev tool\n   * const store = createStore(rootReducer, initialState, composeEnhancers(bindMiddleware([sagaMiddleware]))) as any;\n   */\n\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  storeHolder.setStore(store);\n  return store;\n}\n\nexport default configureStore;","map":null,"metadata":{},"sourceType":"module"}