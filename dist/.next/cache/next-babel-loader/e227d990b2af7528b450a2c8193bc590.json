{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Row, Col, Drawer, Button, Menu } from 'antd';\nimport './performer-filter.less';\n\nvar PerformerFilter = function PerformerFilter(_ref) {\n  _s();\n\n  var countries = _ref.countries,\n      categories = _ref.categories,\n      setFilter = _ref.setFilter,\n      category = _ref.category,\n      country = _ref.country,\n      gender = _ref.gender,\n      clearFilter = _ref.clearFilter;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedMenuKeys = _React$useState4[0],\n      setSelectedMenuKeys = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      lastSelectedMenuKey = _React$useState6[0],\n      setLastSelectedMenuKey = _React$useState6[1];\n\n  var onOpenChange = function onOpenChange(keys) {\n    var menuKeys = keys.filter(function (key) {\n      return key !== lastSelectedMenuKey;\n    });\n    setSelectedMenuKeys(menuKeys);\n    setLastSelectedMenuKey(menuKeys[0]);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Drawer, {\n    visible: visible,\n    placement: \"left\",\n    onClose: function onClose() {\n      return setVisible(false);\n    },\n    title: __jsx(Row, {\n      justify: \"space-between\",\n      align: \"middle\"\n    }, __jsx(Col, null, \"Filter by:\"), __jsx(Col, null, __jsx(Button, {\n      type: \"link\",\n      onClick: function onClick() {\n        return clearFilter();\n      },\n      size: \"small\",\n      style: {\n        marginRight: 10\n      }\n    }, \"Clear Filter\")))\n  }, __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: function onSelect(_ref2) {\n      var key = _ref2.key;\n      return setFilter('category', key);\n    },\n    onDeselect: function onDeselect() {\n      return setFilter('category', '');\n    },\n    selectedKeys: [category],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange\n  }, __jsx(Menu.SubMenu, {\n    title: \"Category\",\n    key: \"category\"\n  }, categories.length > 0 && categories.map(function (c) {\n    return __jsx(Menu.Item, {\n      key: c._id\n    }, c.name);\n  }))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    onSelect: function onSelect(_ref3) {\n      var key = _ref3.key;\n      return setFilter('gender', key);\n    },\n    onDeselect: function onDeselect() {\n      return setFilter('gender', '');\n    },\n    selectedKeys: [gender],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange\n  }, __jsx(Menu.SubMenu, {\n    title: \"Gender\",\n    key: \"gender\"\n  }, __jsx(Menu.Item, {\n    key: \"female\"\n  }, \"Female\"), __jsx(Menu.Item, {\n    key: \"transgender\"\n  }, \"Transgender\"), __jsx(Menu.Item, {\n    key: \"male\"\n  }, \"Male\"))), __jsx(Menu, {\n    mode: \"inline\",\n    style: {\n      borderRight: 0\n    },\n    multiple: false,\n    onSelect: function onSelect(_ref4) {\n      var key = _ref4.key;\n      return setFilter('country', key);\n    },\n    onDeselect: function onDeselect() {\n      return setFilter('country', '');\n    },\n    selectedKeys: [country],\n    openKeys: selectedMenuKeys,\n    onOpenChange: onOpenChange\n  }, __jsx(Menu.SubMenu, {\n    title: \"Country\",\n    key: \"country\"\n  }, countries.length > 0 && countries.map(function (c) {\n    return __jsx(Menu.Item, {\n      key: c.name\n    }, c.name);\n  })))));\n};\n\n_s(PerformerFilter, \"KDfhxqxIJhpdcya1cm7PGXam5Xk=\");\n\n_c = PerformerFilter;\nPerformerFilter.defaultProps = {\n  countries: [],\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  country: ''\n};\nexport default PerformerFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerformerFilter\");","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/user/performer-filter.tsx"],"names":["React","Row","Col","Drawer","Button","Menu","PerformerFilter","countries","categories","setFilter","category","country","gender","clearFilter","useState","visible","setVisible","selectedMenuKeys","setSelectedMenuKeys","lastSelectedMenuKey","setLastSelectedMenuKey","onOpenChange","keys","menuKeys","filter","key","marginRight","borderRight","length","map","c","_id","name","defaultProps"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,GADF,EACOC,GADP,EACYC,MADZ,EACoBC,MADpB,EAC4BC,IAD5B,QAEO,MAFP;AAMA,OAAO,yBAAP;;AAcA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAQV;AAAA;;AAAA,MAPZC,SAOY,QAPZA,SAOY;AAAA,MANZC,UAMY,QANZA,UAMY;AAAA,MALZC,SAKY,QALZA,SAKY;AAAA,MAJZC,QAIY,QAJZA,QAIY;AAAA,MAHZC,OAGY,QAHZA,OAGY;AAAA,MAFZC,MAEY,QAFZA,MAEY;AAAA,MADZC,WACY,QADZA,WACY;;AACZ,wBAA8Bb,KAAK,CAACc,QAAN,CAAwB,KAAxB,CAA9B;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AACA,yBAAgDhB,KAAK,CAACc,QAAN,CAAyB,EAAzB,CAAhD;AAAA;AAAA,MAAOG,gBAAP;AAAA,MAAyBC,mBAAzB;;AACA,yBAAsDlB,KAAK,CAACc,QAAN,EAAtD;AAAA;AAAA,MAAOK,mBAAP;AAAA,MAA4BC,sBAA5B;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAoB;AACvC,QAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAY,UAACC,GAAD;AAAA,aAASA,GAAG,KAAKN,mBAAjB;AAAA,KAAZ,CAAjB;AACAD,IAAAA,mBAAmB,CAACK,QAAD,CAAnB;AACAH,IAAAA,sBAAsB,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAtB;AACD,GAJD;;AAKA,SACE,4BAEE,MAAC,MAAD;AACE,IAAA,OAAO,EAAER,OADX;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,UAAU,CAAC,KAAD,CAAhB;AAAA,KAHX;AAIE,IAAA,KAAK,EACH,MAAC,GAAD;AAAK,MAAA,OAAO,EAAC,eAAb;AAA6B,MAAA,KAAK,EAAC;AAAnC,OACE,MAAC,GAAD,qBADF,EAEE,MAAC,GAAD,QACE,MAAC,MAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMH,WAAW,EAAjB;AAAA,OAFX;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,KAAK,EAAE;AAAEa,QAAAA,WAAW,EAAE;AAAf;AAJT,sBADF,CAFF;AALJ,KAqBE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAFT;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,QAAQ,EAAE;AAAA,UAAGF,GAAH,SAAGA,GAAH;AAAA,aAAahB,SAAS,CAAC,UAAD,EAAagB,GAAb,CAAtB;AAAA,KAJZ;AAKE,IAAA,UAAU,EAAE;AAAA,aAAMhB,SAAS,CAAC,UAAD,EAAa,EAAb,CAAf;AAAA,KALd;AAME,IAAA,YAAY,EAAE,CAACC,QAAD,CANhB;AAOE,IAAA,QAAQ,EAAEO,gBAPZ;AAQE,IAAA,YAAY,EAAEI;AARhB,KAUE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC,UAApB;AAA+B,IAAA,GAAG,EAAC;AAAnC,KACGb,UAAU,CAACoB,MAAX,GAAoB,CAApB,IACIpB,UAAU,CAACqB,GAAX,CAAe,UAACC,CAAD;AAAA,WAChB,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAEA,CAAC,CAACC;AAAlB,OAAwBD,CAAC,CAACE,IAA1B,CADgB;AAAA,GAAf,CAFP,CAVF,CArBF,EAsCE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEL,MAAAA,WAAW,EAAE;AAAf,KAFT;AAGE,IAAA,QAAQ,EAAE;AAAA,UAAGF,GAAH,SAAGA,GAAH;AAAA,aAAahB,SAAS,CAAC,QAAD,EAAWgB,GAAX,CAAtB;AAAA,KAHZ;AAIE,IAAA,UAAU,EAAE;AAAA,aAAMhB,SAAS,CAAC,QAAD,EAAW,EAAX,CAAf;AAAA,KAJd;AAKE,IAAA,YAAY,EAAE,CAACG,MAAD,CALhB;AAME,IAAA,QAAQ,EAAEK,gBANZ;AAOE,IAAA,YAAY,EAAEI;AAPhB,KASE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC,QAApB;AAA6B,IAAA,GAAG,EAAC;AAAjC,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC;AAAf,cADF,EAEE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC;AAAf,mBAFF,EAGE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,GAAG,EAAC;AAAf,YAHF,CATF,CAtCF,EAsDE,MAAC,IAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,KAAK,EAAE;AAAEM,MAAAA,WAAW,EAAE;AAAf,KAFT;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,QAAQ,EAAE;AAAA,UAAGF,GAAH,SAAGA,GAAH;AAAA,aAAahB,SAAS,CAAC,SAAD,EAAYgB,GAAZ,CAAtB;AAAA,KAJZ;AAKE,IAAA,UAAU,EAAE;AAAA,aAAMhB,SAAS,CAAC,SAAD,EAAY,EAAZ,CAAf;AAAA,KALd;AAME,IAAA,YAAY,EAAE,CAACE,OAAD,CANhB;AAOE,IAAA,QAAQ,EAAEM,gBAPZ;AAQE,IAAA,YAAY,EAAEI;AARhB,KAUE,MAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,EAAC,SAApB;AAA8B,IAAA,GAAG,EAAC;AAAlC,KACGd,SAAS,CAACqB,MAAV,GAAmB,CAAnB,IACIrB,SAAS,CAACsB,GAAV,CAAc,UAACC,CAAD;AAAA,WACf,MAAC,IAAD,CAAM,IAAN;AAAW,MAAA,GAAG,EAAEA,CAAC,CAACE;AAAlB,OAAyBF,CAAC,CAACE,IAA3B,CADe;AAAA,GAAd,CAFP,CAVF,CAtDF,CAFF,CADF;AA6ED,CA9FD;;GAAM1B,e;;KAAAA,e;AA+FNA,eAAe,CAAC2B,YAAhB,GAA+B;AAC7B1B,EAAAA,SAAS,EAAE,EADkB;AAE7BC,EAAAA,UAAU,EAAE,EAFiB;AAG7B;AACA;AACAI,EAAAA,MAAM,EAAE,EALqB;AAM7BF,EAAAA,QAAQ,EAAE,EANmB;AAO7BC,EAAAA,OAAO,EAAE;AAPoB,CAA/B;AAUA,eAAeL,eAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Row, Col, Drawer, Button, Menu, Space\n} from 'antd';\nimport { FilterOutlined } from '@ant-design/icons';\nimport { ICountries, IPerformerCategogies } from 'src/interfaces';\nimport classnames from 'classnames';\nimport './performer-filter.less';\n\ninterface IProps {\n  countries?: ICountries[];\n  categories?: IPerformerCategogies[];\n  // offset?: number;\n  // limit?: number;\n  gender?: string;\n  category?: string;\n  country?: string;\n  setFilter: Function;\n  clearFilter: () => void;\n}\n\nconst PerformerFilter = ({\n  countries,\n  categories,\n  setFilter,\n  category,\n  country,\n  gender,\n  clearFilter\n}: IProps) => {\n  const [visible, setVisible] = React.useState<boolean>(false);\n  const [selectedMenuKeys, setSelectedMenuKeys] = React.useState<string[]>([]);\n  const [lastSelectedMenuKey, setLastSelectedMenuKey] = React.useState<string>();\n  const onOpenChange = (keys: string[]) => {\n    const menuKeys = keys.filter((key) => key !== lastSelectedMenuKey);\n    setSelectedMenuKeys(menuKeys);\n    setLastSelectedMenuKey(menuKeys[0]);\n  };\n  return (\n    <>\n      \n      <Drawer\n        visible={visible}\n        placement=\"left\"\n        onClose={() => setVisible(false)}\n        title={(\n          <Row justify=\"space-between\" align=\"middle\">\n            <Col>Filter by:</Col>\n            <Col>\n              <Button\n                type=\"link\"\n                onClick={() => clearFilter()}\n                size=\"small\"\n                style={{ marginRight: 10 }}\n              >\n                Clear Filter\n              </Button>\n            </Col>\n          </Row>\n        )}\n      >\n        {/* Select multiple category */}\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          multiple={false}\n          onSelect={({ key }) => setFilter('category', key)}\n          onDeselect={() => setFilter('category', '')}\n          selectedKeys={[category]}\n          openKeys={selectedMenuKeys}\n          onOpenChange={onOpenChange}\n        >\n          <Menu.SubMenu title=\"Category\" key=\"category\">\n            {categories.length > 0\n              && categories.map((c) => (\n                <Menu.Item key={c._id}>{c.name}</Menu.Item>\n              ))}\n          </Menu.SubMenu>\n        </Menu>\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          onSelect={({ key }) => setFilter('gender', key)}\n          onDeselect={() => setFilter('gender', '')}\n          selectedKeys={[gender]}\n          openKeys={selectedMenuKeys}\n          onOpenChange={onOpenChange}\n        >\n          <Menu.SubMenu title=\"Gender\" key=\"gender\">\n            <Menu.Item key=\"female\">Female</Menu.Item>\n            <Menu.Item key=\"transgender\">Transgender</Menu.Item>\n            <Menu.Item key=\"male\">Male</Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n        {/* Select multiple country */}\n        <Menu\n          mode=\"inline\"\n          style={{ borderRight: 0 }}\n          multiple={false}\n          onSelect={({ key }) => setFilter('country', key)}\n          onDeselect={() => setFilter('country', '')}\n          selectedKeys={[country]}\n          openKeys={selectedMenuKeys}\n          onOpenChange={onOpenChange}\n        >\n          <Menu.SubMenu title=\"Country\" key=\"country\">\n            {countries.length > 0\n              && countries.map((c) => (\n                <Menu.Item key={c.name}>{c.name}</Menu.Item>\n              ))}\n          </Menu.SubMenu>\n        </Menu>\n      </Drawer>\n    </>\n  );\n};\nPerformerFilter.defaultProps = {\n  countries: [],\n  categories: [],\n  // offset: 0,\n  // limit: 0,\n  gender: '',\n  category: '',\n  country: ''\n};\n\nexport default PerformerFilter;\n"]},"metadata":{},"sourceType":"module"}