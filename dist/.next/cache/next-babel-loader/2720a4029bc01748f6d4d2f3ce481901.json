{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/var/www/dtest.live/src/components/videos/video-grid.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { Card, Space } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { PlayCircleOutlined, EditOutlined } from '@ant-design/icons';\nimport { capitalizeFirstLetter } from 'src/lib/string';\nimport TrashButton from '@components/common/base/trash'; // import Loader from '@components/common/base/loader';\n\nimport './index.less';\n\nvar VideoGrid = function VideoGrid(_ref) {\n  var data = _ref.data,\n      success = _ref.success,\n      title = _ref.title,\n      hasMore = _ref.hasMore,\n      addVideos = _ref.addVideos,\n      remove = _ref.remove,\n      onViewVideo = _ref.onViewVideo;\n  return __jsx(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: addVideos,\n    hasMore: hasMore,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, __jsx(Card, {\n    className: \"video-grid\",\n    title: title,\n    bordered: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, success && (data.length > 0 ? data.map(function (video) {\n    var _video$video;\n\n    return __jsx(Card.Grid, {\n      className: \"video-box\",\n      key: video._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"video-thumbnail\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: video.thumbnail || \"\".concat(video === null || video === void 0 ? void 0 : (_video$video = video.video) === null || _video$video === void 0 ? void 0 : _video$video.thumbnails[0]) || '/no-image.jpg',\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }), __jsx(\"a\", {\n      className: \"play-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, __jsx(PlayCircleOutlined, {\n      onClick: function onClick() {\n        return onViewVideo(video);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }))), __jsx(\"div\", {\n      className: \"video-info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Status:\", ' ', __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }, capitalizeFirstLetter(video.status))), __jsx(Space, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: '/account/performer/videos/update',\n        query: {\n          video: JSON.stringify(video)\n        }\n      },\n      as: \"/account/performer/videos/\".concat(video._id, \"/update\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, __jsx(EditOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }\n    }))), __jsx(TrashButton, {\n      confirm: function confirm() {\n        return remove(video._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }))));\n  }) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"There is no videos, click\", ' ', __jsx(Link, {\n    href: \"/account/performer/videos/add\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"here\")), ' ', \"to upload\"))));\n};\n\nVideoGrid.defaultProps = {\n  success: false,\n  title: '',\n  addVideos: null,\n  hasMore: false,\n  remove: false,\n  onViewVideo: false\n};\nexport default VideoGrid;","map":null,"metadata":{},"sourceType":"module"}