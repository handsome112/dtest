{"ast":null,"code":"var __jsx = React.createElement;\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { Card, Space, Tag } from 'antd';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { EditOutlined } from '@ant-design/icons';\nimport { capitalizeFirstLetter } from 'src/lib/string';\nimport { formatDate } from 'src/lib';\nimport TrashButton from '@components/common/base/trash'; // import Loader from '@components/common/base/loader';\n\nimport './index.less';\n\nvar renderActiveTag = function renderActiveTag(status) {\n  switch (status) {\n    case 'active':\n      return __jsx(Tag, {\n        color: \"#87d068\",\n        className: \"photo-status\"\n      }, \"Active\");\n\n    case 'inactive':\n      return __jsx(Tag, {\n        color: \"#f50\",\n        className: \"photo-status\"\n      }, \"Inactive\");\n\n    case 'draft':\n      return __jsx(Tag, {\n        className: \"photo-status\"\n      }, \"Inactive\");\n\n    default:\n      return __jsx(React.Fragment, null);\n  }\n};\n\nvar PhotoDashboard = function PhotoDashboard(_ref) {\n  var data = _ref.data,\n      searching = _ref.searching,\n      title = _ref.title,\n      hasMore = _ref.hasMore,\n      addPhotos = _ref.addPhotos,\n      success = _ref.success,\n      remove = _ref.remove;\n  return __jsx(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: addPhotos,\n    hasMore: hasMore,\n    loader: __jsx(\"p\", null, \"Loading...\")\n  }, __jsx(Card, {\n    className: \"photo-grid\",\n    title: title,\n    bordered: false\n  }, !searching ? success && (data.length > 0 ? data.map(function (photo) {\n    return __jsx(Card.Grid, {\n      className: \"photo-box\",\n      key: photo._id\n    }, __jsx(\"div\", {\n      className: \"photo-thumbnail\"\n    }, __jsx(\"img\", {\n      src: photo.photo.thumbnails[0] || '/no-image.jpg',\n      alt: \"\"\n    }), __jsx(Space, {\n      className: \"actions\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/account/performer/photos/update',\n        query: {\n          data: JSON.stringify(photo)\n        }\n      },\n      as: \"/account/performer/photos/\".concat(photo._id, \"/update\")\n    }, __jsx(EditOutlined, {\n      style: {\n        color: '#ff0066'\n      }\n    })), __jsx(TrashButton, {\n      confirm: function confirm() {\n        return remove(photo._id);\n      }\n    })), renderActiveTag(photo.status)), __jsx(\"div\", {\n      className: \"photo-info\"\n    }, __jsx(\"span\", null, capitalizeFirstLetter(photo.title))), __jsx(\"div\", {\n      className: \"photo-description\"\n    }, \"Created at\", ' ', formatDate(photo.createdAt, 'DD MMMM YYYY')), __jsx(\"div\", {\n      className: \"photo-description\"\n    }, __jsx(Link, {\n      href: {\n        pathname: '/account/performer/galleries/update',\n        query: {\n          data: JSON.stringify(photo.gallery)\n        }\n      },\n      as: \"/account/performer/galleries/\".concat(photo.gallery._id, \"/update\")\n    }, photo.gallery.name)));\n  }) : __jsx(\"p\", null, \"No items\")) : __jsx(\"p\", null, \"Loading...\")));\n};\n\nPhotoDashboard.defaultProps = {\n  success: false,\n  // error: null,\n  searching: false,\n  title: '',\n  addPhotos: null,\n  hasMore: false,\n  remove: null\n};\nexport default PhotoDashboard;","map":null,"metadata":{},"sourceType":"module"}