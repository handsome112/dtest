{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport videojs from 'video.js';\nimport AudioMuteToggleButton from './audio-mute-toggle-button';\nvar Plugin = videojs.getPlugin('plugin');\n\nvar MicControlsPlugin = /*#__PURE__*/function (_Plugin) {\n  _inherits(MicControlsPlugin, _Plugin);\n\n  var _super = _createSuper(MicControlsPlugin);\n\n  function MicControlsPlugin(player, options) {\n    var _this;\n\n    _classCallCheck(this, MicControlsPlugin);\n\n    _this = _super.call(this, player, options);\n\n    _defineProperty(_assertThisInitialized(_this), \"muteTogglesButton\", void 0);\n\n    _this.muteTogglesButton = new AudioMuteToggleButton(_this.player, options);\n\n    _this.player.controlBar.addChild(_this.muteTogglesButton, {\n      componentClass: 'muteToggleButton'\n    });\n\n    return _this;\n  }\n\n  _createClass(MicControlsPlugin, [{\n    key: \"dispose\",\n    value: function dispose() {\n      _get(_getPrototypeOf(MicControlsPlugin.prototype), \"dispose\", this).call(this);\n    }\n  }]);\n\n  return MicControlsPlugin;\n}(Plugin);\n\nexport { MicControlsPlugin as default };","map":null,"metadata":{},"sourceType":"module"}