{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport cookie from 'js-cookie';\nimport { APIRequest, TOKEN, ROLE } from './api-request';\nexport var AuthService = /*#__PURE__*/function (_APIRequest) {\n  _inherits(AuthService, _APIRequest);\n\n  var _super = _createSuper(AuthService);\n\n  function AuthService() {\n    _classCallCheck(this, AuthService);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AuthService, [{\n    key: \"login\",\n    value: function login(data) {\n      return this.post('/auth/users/login', data);\n    }\n  }, {\n    key: \"setAuthHeader\",\n    value: function setAuthHeader(token, role) {\n      // https://github.com/js-cookie/js-cookie\n      // since Safari does not support, need a better solution\n      cookie.set(TOKEN, token, {\n        expires: 365\n      });\n      cookie.set(ROLE, role, {\n        expires: 365\n      });\n      this.setAuthHeaderToken(token);\n    }\n  }, {\n    key: \"performerLogin\",\n    value: function performerLogin(data) {\n      return this.post('/auth/performers/login', data);\n    }\n  }, {\n    key: \"studioLogin\",\n    value: function studioLogin(data) {\n      return this.post('/auth/studio/login', data);\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(token) {\n      // https://github.com/js-cookie/js-cookie\n      // since Safari does not support, need a better solution\n      cookie.set(TOKEN, token, {\n        expires: 365\n      });\n      this.setAuthHeaderToken(token);\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken() {\n      var token = cookie.get(TOKEN);\n      return token || null;\n    }\n  }, {\n    key: \"getRole\",\n    value: function getRole() {\n      var role = cookie.get(ROLE);\n      return role || null;\n    }\n  }, {\n    key: \"removeToken\",\n    value: function removeToken() {\n      cookie.remove(TOKEN);\n      cookie.remove(ROLE);\n    }\n  }, {\n    key: \"removeRemember\",\n    value: function removeRemember() {\n      true && cookie.remove('rememberMe');\n    }\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(body) {\n      return this.put('/auth/users/me/password', body);\n    }\n  }, {\n    key: \"performersRegister\",\n    value: function performersRegister(data) {\n      return this.register('/auth/performers/register', data);\n    }\n  }, {\n    key: \"userRegister\",\n    value: function userRegister(data) {\n      return this.post('/auth/users/register', data);\n    }\n  }, {\n    key: \"studioRegister\",\n    value: function studioRegister(data) {\n      return this.register('/auth/studio/register', data);\n    }\n  }, {\n    key: \"forgotPassword\",\n    value: function forgotPassword(email, type) {\n      var data = {\n        email: email,\n        type: type\n      };\n      return this.post('/auth/users/forgot', data);\n    }\n  }, {\n    key: \"resendVerificationEmail\",\n    value: function resendVerificationEmail(data) {\n      return this.post('/verification/resend-verification-email', data);\n    }\n  }]);\n\n  return AuthService;\n}(APIRequest);\nexport var authService = new AuthService();","map":null,"metadata":{},"sourceType":"module"}