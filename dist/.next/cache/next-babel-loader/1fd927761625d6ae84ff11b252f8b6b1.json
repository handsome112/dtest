{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/dtest.live/pages/videos/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Card, message, Alert } from 'antd';\nimport Head from 'next/head';\nimport { connect } from 'react-redux';\nimport React, { PureComponent } from 'react';\nimport { getPerformersVideos, addPerformerVideos } from 'src/redux/videos/actions';\nimport { withRouter } from 'next/router';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport VideoSingleCard from '@components/videos/video-single-card';\nimport { getResponseError } from 'src/lib';\nimport { videoService, performerService } from 'src/services';\nimport './index.less';\nimport Loader from '@components/common/base/loader';\n\nvar VideosPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(VideosPage, _PureComponent);\n\n  var _super = _createSuper(VideosPage);\n\n  function VideosPage(props) {\n    var _this;\n\n    _classCallCheck(this, VideosPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      limit: 12,\n      offset: 0\n    };\n    return _this;\n  }\n\n  _createClass(VideosPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          router = _this$props.router,\n          dispatchGetPerformersVideos = _this$props.getPerformersVideos,\n          performer = _this$props.performer;\n      var performerId = performer ? performer._id : '';\n      dispatchGetPerformersVideos(_objectSpread(_objectSpread(_objectSpread({}, router.query), this.state), {}, {\n        performerId: performerId\n      }));\n    }\n  }, {\n    key: \"loadMore\",\n    value: function () {\n      var _loadMore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var offset, limit, _this$props2, query, performer, dispatchAddPerformerVideos, performerId, resp;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                offset = this.state.offset;\n                limit = this.state.limit;\n                _this$props2 = this.props, query = _this$props2.router.query, performer = _this$props2.performer, dispatchAddPerformerVideos = _this$props2.addPerformerVideos;\n                performerId = performer ? performer._id : '';\n                offset = limit + offset;\n                _context.next = 8;\n                return videoService.search(_objectSpread(_objectSpread({}, query), {}, {\n                  performerId: performerId,\n                  limit: limit,\n                  offset: offset\n                }));\n\n              case 8:\n                resp = _context.sent;\n                dispatchAddPerformerVideos(resp.data.data);\n                this.setState({\n                  offset: offset\n                });\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](0);\n                this.showError(_context.t0);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 13]]);\n      }));\n\n      function loadMore() {\n        return _loadMore.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  }, {\n    key: \"showError\",\n    value: function () {\n      var _showError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var err;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Promise.resolve(e);\n\n              case 2:\n                err = _context2.sent;\n                message.error(getResponseError(err));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function showError(_x) {\n        return _showError.apply(this, arguments);\n      }\n\n      return showError;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          ids = _this$props3.ids,\n          data = _this$props3.data,\n          searching = _this$props3.searching,\n          success = _this$props3.success,\n          error = _this$props3.error,\n          total = _this$props3.total,\n          performer = _this$props3.performer,\n          query = _this$props3.router.query;\n      var username = performer && performer.username;\n      var hasMore = ids.length < total;\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, \"\".concat(username, \"'s \") || '', ' ', \"Videos\", ' ')), searching && __jsx(Loader, {\n        spinning: true,\n        fullScreen: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }\n      }), error && __jsx(Alert, {\n        type: \"error\",\n        message: \"Error request\",\n        banner: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }), success && __jsx(\"div\", {\n        className: \"videos-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }\n      }, query.username && !performer && __jsx(Alert, {\n        message: \"Performer not found.\",\n        banner: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }), __jsx(InfiniteScroll, {\n        loadMore: this.loadMore.bind(this),\n        hasMore: hasMore,\n        loader: __jsx(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 23\n          }\n        }, \"Loading...\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        title: \"\".concat(username || '', \" Videos\"),\n        bordered: false,\n        hoverable: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }\n      }, ids.length > 0 && ids.map(function (id) {\n        return __jsx(Card.Grid, {\n          hoverable: false,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        }, __jsx(VideoSingleCard, _extends({}, data[id], {\n          key: id,\n          video: data[id],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 23\n          }\n        })));\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref) {\n        var ctx, query, resp;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                ctx = _ref.ctx;\n                _context3.prev = 1;\n                query = ctx.query;\n\n                if (!query.performer) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", {\n                  performer: JSON.parse(query.performer)\n                });\n\n              case 5:\n                if (!query.username) {\n                  _context3.next = 10;\n                  break;\n                }\n\n                _context3.next = 8;\n                return performerService.details(query.username);\n\n              case 8:\n                resp = _context3.sent;\n                return _context3.abrupt(\"return\", {\n                  performer: resp.data\n                });\n\n              case 10:\n                return _context3.abrupt(\"return\", {});\n\n              case 13:\n                _context3.prev = 13;\n                _context3.t0 = _context3[\"catch\"](1);\n                return _context3.abrupt(\"return\", {});\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[1, 13]]);\n      }));\n\n      function getInitialProps(_x2) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return VideosPage;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.videos);\n};\n\nvar mapDispatchs = {\n  getPerformersVideos: getPerformersVideos,\n  addPerformerVideos: addPerformerVideos\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchs)(VideosPage));","map":null,"metadata":{},"sourceType":"module"}