{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PureComponent, createRef } from 'react';\nimport { Alert, InputNumber, Radio, Space } from 'antd';\nimport './content.less';\nvar tokens = [20, 50, 100, 200];\n\nvar SendTipContent = /*#__PURE__*/function (_PureComponent) {\n  _inherits(SendTipContent, _PureComponent);\n\n  var _super = _createSuper(SendTipContent);\n\n  function SendTipContent(props) {\n    var _this;\n\n    _classCallCheck(this, SendTipContent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNumberRef\", void 0);\n\n    _this.state = {\n      radioValue: 20,\n      errorMessage: '',\n      token: 1\n    };\n    return _this;\n  }\n\n  _createClass(SendTipContent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.inputNumberRef = /*#__PURE__*/createRef();\n    }\n  }, {\n    key: \"onRadioChange\",\n    value: function onRadioChange(e) {\n      var setDisableOk = this.props.setDisableOk;\n      setDisableOk(false);\n      this.setState({\n        radioValue: e.target.value\n      });\n      if (e.target.value > 0) this.setState({\n        token: e.target.value\n      });\n    }\n  }, {\n    key: \"onInputChange\",\n    value: function onInputChange(value) {\n      var setDisableOk = this.props.setDisableOk;\n      setDisableOk(false);\n\n      if (typeof value !== 'number') {\n        return;\n      }\n\n      if (value <= 0 || value % 1 !== 0) {\n        setDisableOk(true);\n        this.setState({\n          errorMessage: 'Token must be positive interger number!'\n        });\n        return;\n      }\n\n      this.setState({\n        token: value,\n        errorMessage: ''\n      });\n    }\n  }, {\n    key: \"getValueToken\",\n    value: function getValueToken() {\n      var token = this.state.token;\n      return token;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          radioValue = _this$state.radioValue,\n          token = _this$state.token,\n          errorMessage = _this$state.errorMessage;\n      return __jsx(\"div\", null, __jsx(\"strong\", null, \"Tipping A Model Is Simple!\"), __jsx(\"h3\", null, \"How Many Tokens Would You Like To Tip?\"), errorMessage && __jsx(Alert, {\n        type: \"error\",\n        message: errorMessage\n      }), __jsx(Radio.Group, {\n        value: radioValue,\n        defaultValue: radioValue,\n        onChange: this.onRadioChange.bind(this),\n        size: \"large\"\n      }, tokens.map(function (v) {\n        return __jsx(Radio, {\n          value: v,\n          key: v\n        }, __jsx(Space, {\n          className: \"token-radio\",\n          align: \"start\"\n        }, __jsx(\"span\", null, \"\".concat(v, \" Tokens\")), __jsx(\"span\", {\n          className: \"tip-description\"\n        }, \"Tip The Model \".concat(v, \" Tokens!\"))));\n      }), __jsx(Radio, {\n        value: -1\n      }, __jsx(Space, {\n        className: \"token-radio\"\n      }, __jsx(\"span\", null, \"Custom Amount\"), __jsx(InputNumber, {\n        className: \"amount\",\n        ref: this.inputNumberRef,\n        onFocus: function onFocus() {\n          return _this2.setState({\n            radioValue: -1\n          });\n        },\n        type: \"number\",\n        min: 1,\n        max: 1000,\n        step: 10,\n        placeholder: \"Enter Amount\",\n        onChange: this.onInputChange.bind(this),\n        value: token\n      })))));\n    }\n  }]);\n\n  return SendTipContent;\n}(PureComponent);\n\nexport { SendTipContent as default };","map":null,"metadata":{},"sourceType":"module"}