{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport Head from 'next/head';\nimport { Button, Space, message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport { connect } from 'react-redux';\nimport { getMyPhotos, removeMyPhoto, addMyPhotos, getMyGalleries, removeMyGalleries, addMyGalleries } from '@redux/performer/actions';\nimport { getResponseError } from '@lib/utils';\nimport Router from 'next/router';\nimport GalleriesGrid from '@components/galleries/gallery-dashboard-grid';\nimport './index.less';\nimport { photoService, galleryService } from 'src/services';\n\nvar PerformerPhotoPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PerformerPhotoPage, _PureComponent);\n\n  var _super = _createSuper(PerformerPhotoPage);\n\n  function PerformerPhotoPage(props) {\n    var _this;\n\n    _classCallCheck(this, PerformerPhotoPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      limit: 12,\n      offset: 0\n    };\n    return _this;\n  }\n\n  _createClass(PerformerPhotoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadGalleries();\n    }\n  }, {\n    key: \"onRemove\",\n    value: function () {\n      var _onRemove = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n        var dispatchRemoveMyGalleries;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatchRemoveMyGalleries = this.props.removeMyGalleries;\n                _context.prev = 1;\n                _context.next = 4;\n                return galleryService.remove(id);\n\n              case 4:\n                message.success('Removed!');\n                dispatchRemoveMyGalleries(id);\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                this.showError(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 8]]);\n      }));\n\n      function onRemove(_x) {\n        return _onRemove.apply(this, arguments);\n      }\n\n      return onRemove;\n    }()\n  }, {\n    key: \"loadGalleries\",\n    value: function loadGalleries() {\n      var dispatchGetMyGalleries = this.props.getMyGalleries;\n      dispatchGetMyGalleries(_objectSpread({}, this.state));\n    }\n  }, {\n    key: \"addGalleries\",\n    value: function () {\n      var _addGalleries = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var dispatchAddMyGalleries, limit, offset, resp;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatchAddMyGalleries = this.props.addMyGalleries;\n                _context2.prev = 1;\n                limit = this.state.limit;\n                offset = this.state.offset;\n                offset = limit + offset;\n                _context2.next = 7;\n                return photoService.myPhotos(_objectSpread(_objectSpread({}, this.state), {}, {\n                  offset: offset\n                }));\n\n              case 7:\n                resp = _context2.sent;\n                dispatchAddMyGalleries(resp.data.data);\n                this.setState({\n                  offset: offset\n                });\n                _context2.next = 15;\n                break;\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.showError(_context2.t0);\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 12]]);\n      }));\n\n      function addGalleries() {\n        return _addGalleries.apply(this, arguments);\n      }\n\n      return addGalleries;\n    }()\n  }, {\n    key: \"showError\",\n    value: function () {\n      var _showError = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(e) {\n        var err;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Promise.resolve(e);\n\n              case 2:\n                err = _context3.sent;\n                message.error(getResponseError(err));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function showError(_x2) {\n        return _showError.apply(this, arguments);\n      }\n\n      return showError;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          searching = _this$props.searching,\n          total = _this$props.total,\n          success = _this$props.success;\n      var galleriesGridProps = {\n        data: data,\n        searching: searching,\n        success: success,\n        total: total,\n        hasMore: !searching && data.length < total,\n        addGalleries: this.addGalleries.bind(this),\n        remove: this.onRemove.bind(this),\n        title: ''\n      };\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My Galleries\")), __jsx(\"div\", {\n        className: \"performer-gallries-page\"\n      }, __jsx(PageHeader, {\n        title: \"Galleries\",\n        extra: __jsx(Space, null, __jsx(Button, {\n          type: \"primary\",\n          onClick: function onClick() {\n            return Router.push('/account/performer/galleries/add');\n          }\n        }, \"Add a new photo gallery\"), __jsx(Button, {\n          type: \"primary\",\n          onClick: function onClick() {\n            return Router.push('/account/performer/photos/add');\n          }\n        }, \"Add a new photo\"))\n      }), __jsx(GalleriesGrid, galleriesGridProps)));\n    }\n  }]);\n\n  return PerformerPhotoPage;\n}(PureComponent);\n\n_defineProperty(PerformerPhotoPage, \"authenticate\", true);\n\n_defineProperty(PerformerPhotoPage, \"layout\", 'primary');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.performer.assets.galleries);\n};\n\nvar mapDispatchs = {\n  getMyPhotos: getMyPhotos,\n  removeMyPhoto: removeMyPhoto,\n  addMyPhotos: addMyPhotos,\n  getMyGalleries: getMyGalleries,\n  removeMyGalleries: removeMyGalleries,\n  addMyGalleries: addMyGalleries\n};\nexport default connect(mapStateToProps, mapDispatchs)(PerformerPhotoPage);","map":null,"metadata":{},"sourceType":"module"}