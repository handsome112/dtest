{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/messages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/react-in-jsx-scope */\nimport { Layout } from 'antd';\nimport { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport Head from 'next/head';\nimport Messenger from '@components/messages/Messenger';\nimport { resetMessageState } from '@redux/message/actions';\nconst {\n  Content\n} = Layout;\n\nclass Messages extends PureComponent {\n  static getInitialProps({\n    ctx\n  }) {\n    return {\n      query: ctx.query\n    };\n  }\n\n  componentWillUnmount() {\n    const {\n      resetMessageState: resetStateHandler\n    } = this.props;\n    resetStateHandler();\n  }\n\n  render() {\n    const {\n      query = {}\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, \"Messages\")), __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, __jsx(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, __jsx(Messenger, {\n      toSource: query.toSource,\n      toId: query.toId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\n_defineProperty(Messages, \"authenticate\", true);\n\n_defineProperty(Messages, \"layout\", 'primary');\n\nconst mapStates = state => ({\n  ui: _objectSpread({}, state.ui)\n});\n\nconst mapDispatch = {\n  resetMessageState\n};\nexport default connect(mapStates, mapDispatch)(Messages);","map":null,"metadata":{},"sourceType":"module"}