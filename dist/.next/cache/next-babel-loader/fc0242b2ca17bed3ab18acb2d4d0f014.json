{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/photos/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\nimport { message, Button, List, Row, Col } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { getPerformerPhotos } from '@redux/photos/actions';\nimport { updateCurrentUserBalance } from '@redux/user/actions';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport nextCookie from 'next-cookies';\nimport Error from 'pages/_error';\nimport { getResponseError, capitalizeFirstLetter } from 'src/lib';\nimport { galleryService, photoService } from 'src/services';\nimport './index.less';\nimport ModalBuyAssets from '@components/performer-assets/common/modal-buy-assets';\nimport Loader from '@components/common/base/loader';\nimport NumberFormat from '@components/common/layout/numberformat';\n\nconst ListItem = ({\n  description,\n  title\n}) => __jsx(List.Item, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }\n}, __jsx(Row, {\n  style: {\n    width: '100%'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, __jsx(Col, {\n  className: \"light-text\",\n  sm: {\n    span: 6\n  },\n  xs: {\n    span: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n}, title), __jsx(Col, {\n  style: {\n    fontWeight: 'bold'\n  },\n  sm: {\n    span: 18\n  },\n  xs: {\n    span: 12\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}, description)));\n\nclass PhotosPages extends PureComponent {\n  static async getInitialProps({\n    ctx\n  }) {\n    try {\n      const {\n        query\n      } = ctx;\n      if (query.data) return {\n        data: JSON.parse(query.data),\n        isBrowser: false\n      };\n\n      if (query.id) {\n        const {\n          token\n        } = nextCookie(ctx);\n        const headers = {\n          Authorization: token\n        };\n        const resp = await galleryService.publicdetails(query.id, headers);\n        return {\n          data: resp.data,\n          isBrowser: false\n        };\n      }\n    } catch {\n      return {};\n    }\n\n    return {};\n  }\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"buyAssetsRef\", void 0);\n\n    this.state = {\n      photos: [],\n      limit: 12,\n      offset: 0,\n      totalPhoto: 0,\n      selectedItem: 0,\n      loading: false,\n      success: true,\n      searching: false,\n      gallery: null\n    };\n  }\n\n  componentDidMount() {\n    this.getPhotosByGallery();\n    const {\n      data,\n      isBrowser\n    } = this.props;\n    isBrowser ? this.getGalleryDetail() : this.setState({\n      gallery: data,\n      success: true,\n      loading: false\n    });\n  }\n\n  handleBuyClick() {\n    const {\n      data\n    } = this.props;\n    this.buyAssetsRef && this.buyAssetsRef.showModalBuyAssets(data, 'gallery');\n  }\n\n  onSucess() {\n    this.getPhotosByGallery();\n  }\n\n  async getGalleryDetail() {\n    const {\n      data\n    } = this.props;\n    this.setState({\n      success: false,\n      loading: true\n    });\n\n    try {\n      const resp = await galleryService.publicdetails(data._id);\n      this.setState({\n        gallery: resp.data,\n        success: true\n      });\n    } catch (error) {\n      this.responseError(error);\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  async getPhotosByGallery() {\n    const {\n      data\n    } = this.props;\n    const {\n      limit,\n      offset\n    } = this.state;\n\n    try {\n      this.setState({\n        searching: true\n      });\n      const resp = await photoService.searchByGallery(data._id, {\n        limit,\n        offset\n      });\n      this.setState({\n        photos: resp.data.data,\n        totalPhoto: resp.data.total\n      });\n    } catch (error) {\n      this.responseError(error);\n    } finally {\n      this.setState({\n        searching: false\n      });\n    }\n  }\n\n  async loadMore(index) {\n    const {\n      totalPhoto,\n      photos,\n      limit\n    } = this.state;\n    let {\n      offset\n    } = this.state;\n    const {\n      data\n    } = this.props;\n    const position = index + 1;\n    if (position !== photos.length) return;\n    const hasMore = photos.length < totalPhoto;\n\n    if (hasMore) {\n      try {\n        offset = limit + offset;\n        const resp = await photoService.searchByGallery(data._id, {\n          limit,\n          offset\n        });\n        this.setState({\n          photos: [...photos, ...resp.data.data],\n          offset\n        });\n      } catch (error) {\n        this.responseError(error);\n      } finally {\n        this.setState({\n          searching: false\n        });\n      }\n    }\n  }\n\n  async responseError(e) {\n    const err = await Promise.resolve(e);\n    message.error(getResponseError(err));\n  }\n\n  render() {\n    const {\n      photos,\n      selectedItem,\n      success,\n      loading,\n      gallery,\n      searching\n    } = this.state;\n    const {\n      data\n    } = this.props;\n    if (!data) return __jsx(Error, {\n      statusCode: 404,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 23\n      }\n    });\n    const {\n      name,\n      description,\n      token,\n      isSale,\n      numOfItems\n    } = data;\n    const dataSource = [{\n      title: 'Name',\n      description: name\n    }, {\n      title: 'Description',\n      description\n    }, {\n      title: 'Photos',\n      description: numOfItems\n    }, {\n      title: 'Price',\n      description: !isSale ? 'Free' : __jsx(NumberFormat, {\n        value: token,\n        suffix: \" tokens\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 57\n        }\n      })\n    }];\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    }, \" Photos \")), __jsx(ModalBuyAssets, _extends({\n      ref: ref => this.buyAssetsRef = ref,\n      onSucess: this.onSucess.bind(this)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }\n    })), __jsx(\"div\", {\n      className: \"photo-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, __jsx(PageHeader, {\n      title: `${capitalizeFirstLetter(name)} Gallery`,\n      extra: __jsx(Button, {\n        type: \"primary\",\n        hidden: gallery === null || gallery === void 0 ? void 0 : gallery.isBought,\n        onClick: this.handleBuyClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }, \"Buy this gallery!\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), success && !loading && __jsx(\"div\", {\n      className: \"photo-carousel-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, searching && __jsx(Loader, {\n      spinning: true,\n      fullScreen: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 30\n      }\n    }), __jsx(Carousel, {\n      dynamicHeight: true,\n      onClickItem: index => this.setState({\n        selectedItem: index + 1\n      }),\n      selectedItem: selectedItem,\n      onChange: this.loadMore.bind(this),\n      showIndicators: true,\n      swipeable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 15\n      }\n    }, photos.length > 0 && photos.map(p => __jsx(\"div\", {\n      key: p._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }, __jsx(\"img\", {\n      alt: \"\",\n      src: p.photo.url,\n      style: {\n        objectFit: 'contain'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }), __jsx(\"p\", {\n      className: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }\n    }, p.title)))), __jsx(List, {\n      dataSource: dataSource,\n      renderItem: item => __jsx(ListItem, {\n        description: item.description,\n        title: item.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(PhotosPages, \"authenticate\", false);\n\n_defineProperty(PhotosPages, \"layout\", 'public');\n\nconst mapStates = state => ({\n  photos: state.photos.data,\n  total: state.photos.total,\n  searching: state.photos.searching,\n  success: state.photos.success,\n  loggedIn: state.auth.loggedIn\n});\n\nconst mapDispatchs = {\n  getPerformerPhotos,\n  updateCurrentUserBalance\n};\nexport default connect(mapStates, mapDispatchs)(PhotosPages);","map":null,"metadata":{},"sourceType":"module"}