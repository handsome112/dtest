{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/dtest.live/src/components/performer/earning-history-table.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { Table, Tag } from 'antd';\nimport { formatDate } from 'src/lib';\nimport NumberFormat from '@components/common/layout/numberformat';\nvar breakPoint = ['md'];\n\nvar EarningHistoryTable = function EarningHistoryTable(_ref) {\n  var earnings = _ref.earnings,\n      searching = _ref.searching,\n      total = _ref.total,\n      pageSize = _ref.pageSize,\n      onChange = _ref.onChange;\n  var columns = [{\n    title: 'Transaction',\n    dataIndex: 'transactionTokenId',\n    key: 'transaction',\n    responsive: breakPoint,\n    render: function render(transactionTokenId) {\n      return (transactionTokenId === null || transactionTokenId === void 0 ? void 0 : transactionTokenId.slice(16, 24).toUpperCase()) || 'N/A';\n    }\n  }, {\n    title: 'From',\n    dataIndex: 'sourceInfo',\n    key: 'from',\n    render: function render(sourceInfo) {\n      return (sourceInfo === null || sourceInfo === void 0 ? void 0 : sourceInfo.username) || 'N/A';\n    }\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    render: function render(type) {\n      return __jsx(Tag, {\n        color: \"magenta\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, type);\n    }\n  }, {\n    title: 'Gross Price',\n    dataIndex: 'grossPrice',\n    key: 'grossPrice',\n    render: function render(grossPrice) {\n      return __jsx(NumberFormat, {\n        value: grossPrice,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 39\n        }\n      });\n    },\n    sorter: true\n  }, {\n    title: 'Net Price',\n    dataIndex: 'netPrice',\n    key: 'netPrice',\n    render: function render(netPrice) {\n      return __jsx(NumberFormat, {\n        value: netPrice,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }\n      });\n    },\n    sorter: true\n  }, {\n    title: 'Earned Money',\n    dataIndex: 'price',\n    key: 'price',\n    render: function render(price) {\n      return __jsx(NumberFormat, {\n        value: price,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 34\n        }\n      });\n    }\n  }, {\n    title: 'Percent',\n    dataIndex: 'commission',\n    key: 'commission'\n  }, {\n    title: 'Is Paid?',\n    key: 'isPaid',\n    dataIndex: 'isPaid',\n    render: function render(isPaid) {\n      return __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 36\n        }\n      }, isPaid ? 'YES' : 'NO');\n    }\n  }, {\n    title: 'Date',\n    key: 'createdAt',\n    dataIndex: 'createdAt',\n    render: function render(createdAt) {\n      return __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 36\n        }\n      }, formatDate(createdAt));\n    },\n    sorter: true\n  }];\n  var dataSource = earnings.map(function (p) {\n    return _objectSpread(_objectSpread({}, p), {}, {\n      key: p._id\n    });\n  });\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    className: \"table\",\n    pagination: {\n      total: total,\n      pageSize: pageSize\n    },\n    scroll: {\n      x: true\n    },\n    showSorterTooltip: false,\n    loading: searching,\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default EarningHistoryTable;","map":null,"metadata":{},"sourceType":"module"}