{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"token\", \"price\", \"buying\", \"currencySymbol\"];\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button } from 'antd';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport './token-card.less';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nvar TokenCard = function TokenCard(_ref) {\n  var token = _ref.token,\n      price = _ref.price,\n      buying = _ref.buying,\n      currencySymbol = _ref.currencySymbol,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return __jsx(\"div\", {\n    className: \"token-card\"\n  }, __jsx(\"div\", {\n    className: \"card-image\"\n  }, __jsx(\"div\", {\n    className: \"coin\"\n  }, __jsx(\"div\", {\n    className: \"current-coin\"\n  }, __jsx(\"img\", {\n    src: \"/crown.png\",\n    alt: \"\"\n  }), __jsx(\"span\", null, \"x\", token)))), __jsx(NumberFormat, {\n    value: token,\n    suffix: \" Token for \"\n  }), __jsx(NumberFormat, {\n    value: price,\n    prefix: currencySymbol\n  }), __jsx(\"br\", null), __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return props.onBuyToken();\n    },\n    loading: buying,\n    disabled: buying\n  }, \"Buy Now\"));\n};\n\nTokenCard.defaultProps = {\n  onBuyToken: null,\n  buying: false,\n  currencySymbol: '$'\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.ui);\n};\n\nexport default connect(mapStateToProps)(TokenCard);","map":null,"metadata":{},"sourceType":"module"}