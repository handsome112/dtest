{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { cloneDeep } from 'lodash';\nimport * as pathToRegexp from 'path-to-regexp';\nimport moment from 'moment';\nimport { SORT } from '@services/api-request';\nimport classnames from 'classnames';\n/**\n * Convert an array to a tree-structured array.\n * @param   {array}     array     The Array need to Converted.\n * @param   {string}    id        The alias of the unique ID of the object in the array.\n * @param   {string}    parentId       The alias of the parent ID of the object in the array.\n * @param   {string}    children  The alias of children of the object in the array.\n * @return  {array}    Return a tree-structured array.\n */\n\nexport function arrayToTree(array) {\n  var id = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n  var parentId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'pid';\n  var children = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'children';\n  var result = [];\n  var hash = {};\n  var data = cloneDeep(array);\n  data.forEach(function (item, index) {\n    hash[data[index][id]] = data[index];\n  });\n  data.forEach(function (item) {\n    var hashParent = hash[item[parentId]];\n\n    if (hashParent) {\n      !hashParent[children] && (hashParent[children] = []);\n      hashParent[children].push(item);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n}\n/**\n * Whether the path matches the regexp if the language prefix is ignored, https://github.com/pillarjs/path-to-regexp.\n * @param   {string|regexp|array}     regexp     Specify a string, array of strings, or a regular expression.\n * @param   {string}                  pathname   Specify the pathname to match.\n * @return  {array|null}              Return the result of the match or null.\n */\n\nexport function pathMatchRegexp(regexp, pathname) {\n  return pathToRegexp.pathToRegexp(regexp).exec(pathname);\n}\n/**\n * In an array of objects, specify an object that traverses the objects whose parent ID matches.\n * @param   {array}     array     The Array need to Converted.\n * @param   {string}    current   Specify the object that needs to be queried.\n * @param   {string}    parentId  The alias of the parent ID of the object in the array.\n * @param   {string}    id        The alias of the unique ID of the object in the array.\n * @return  {array}    Return a key array.\n */\n\nexport function queryAncestors(array, current, parentId) {\n  var id = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'id';\n  var result = [current];\n  var hashMap = new Map();\n  array.forEach(function (item) {\n    return hashMap.set(item[id], item);\n  }); // eslint-disable-next-line no-shadow\n\n  var getPath = function getPath(current) {\n    var currentParentId = hashMap.get(current[id])[parentId];\n\n    if (currentParentId) {\n      result.push(hashMap.get(currentParentId));\n      getPath(hashMap.get(currentParentId));\n    }\n  };\n\n  getPath(current);\n  return result;\n}\nexport function getResponseError(data) {\n  if (!data) {\n    return '';\n  }\n\n  if (typeof data === 'string') {\n    return data;\n  }\n\n  if (Array.isArray(data.message)) {\n    var item = data.message[0];\n\n    if (!item.constraints) {\n      return data.error || 'Bad request!';\n    }\n\n    return Object.values(item.constraints)[0];\n  } // TODO - parse for langauge or others\n\n\n  return typeof data.message === 'string' ? data.message : 'Bad request!';\n}\nexport function isMobile() {\n  if (navigator.userAgent.match(/Android/i) || navigator.userAgent.match(/webOS/i) || navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/BlackBerry/i) || navigator.userAgent.match(/Windows Phone/i)) {\n    return true;\n  }\n\n  return false;\n} // eslint-disable-next-line consistent-return\n\nexport function getUrlParameter(sParam) {\n  var sPageURL = decodeURIComponent(window.location.search.substring(1));\n  var sURLVariables = sPageURL.split('&');\n  var sParameterName;\n  var i;\n\n  for (i = 0; i < sURLVariables.length; i += 1) {\n    sParameterName = sURLVariables[i].split('=');\n\n    if (sParameterName[0] === sParam) {\n      return sParameterName[1] === undefined ? true : sParameterName[1];\n    }\n  }\n}\nexport var DAY_OF_WEEK = {\n  mon: 'Monday',\n  tue: 'Tuesday',\n  wed: 'Wednesday',\n  thu: 'Thursday',\n  fri: 'Friday',\n  sat: 'Saturday',\n  sun: 'Sunday'\n};\nexport function getDefaultSchedule() {\n  var defaultVal = {\n    start: null,\n    end: null,\n    closed: true\n  };\n  return {\n    mon: _objectSpread({}, defaultVal),\n    tue: _objectSpread({}, defaultVal),\n    wed: _objectSpread({}, defaultVal),\n    thu: _objectSpread({}, defaultVal),\n    fri: _objectSpread({}, defaultVal),\n    sat: _objectSpread({}, defaultVal),\n    sun: _objectSpread({}, defaultVal)\n  };\n}\nexport function getNextShow(schedule) {\n  var weekDay = parseInt(moment().format('e'), 10);\n  var i = 0;\n  var nextShow;\n  var performerShows = Object.keys(schedule).filter(function (key) {\n    return !schedule[key].closed;\n  });\n\n  do {\n    var date = moment().day(weekDay).format('ddd').toLowerCase();\n\n    if (performerShows.indexOf(date) > -1) {\n      nextShow = date;\n    }\n\n    weekDay += 1;\n    i += 1;\n  } while (i < 7 && !nextShow);\n\n  if (nextShow) {\n    return \"\".concat(schedule[nextShow].start, \" \").concat(moment().day(weekDay - 1).format('DD/MM/YYYY'));\n  }\n\n  return '';\n}\nexport function getSearchData(pagination, filters, sorter, state) {\n  var sort = state.sort,\n      sortBy = state.sortBy,\n      filter = state.filter;\n  var limit = state.limit;\n\n  if (filters) {\n    Object.keys(filters).forEach(function (key) {\n      if (filters[key] && filters[key].length) {\n        // eslint-disable-next-line prefer-destructuring\n        filter[key] = filters[key][0];\n      }\n\n      if (!filters[key]) {\n        filter[key] = '';\n      }\n    });\n  } else {\n    filter = {};\n  }\n\n  if (sorter) {\n    if (sorter.order) {\n      var field = sorter.field,\n          order = sorter.order;\n      sort = SORT[order];\n      sortBy = field;\n    } else {\n      sortBy = 'createdAt';\n      sort = 'desc';\n    }\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread({}, state), filter), {}, {\n    sort: sort,\n    sortBy: sortBy,\n    offset: (pagination.current - 1) * limit\n  });\n}\nexport function getBase64(originFileObj) {\n  var status = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'uploading';\n  var file = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    if (originFileObj) {\n      reader.readAsDataURL(originFileObj);\n\n      reader.onload = function () {\n        return resolve(_objectSpread(_objectSpread({}, originFileObj), {}, {\n          status: status,\n          name: originFileObj.name,\n          url: reader.result,\n          originFileObj: originFileObj\n        }));\n      };\n\n      reader.onerror = function (error) {\n        return reject(error);\n      };\n    } else {\n      resolve(file);\n    }\n  });\n}\nexport function convertConnectionData(data) {\n  var arr = data.split('%/%');\n  var serverData = arr[1] && JSON.parse(arr[1]);\n  var clientData = arr[0] && JSON.parse(arr[0]);\n  return {\n    serverData: serverData,\n    clientData: clientData\n  };\n}\nexport function checkUserLogin(isLoggedIn, user) {\n  if (!isLoggedIn) return false;\n  if (!user && !user._id) return false;\n  return true;\n}\nexport function getCurrentUser(user, performer) {\n  if (user && user._id) return user;\n  if (performer && performer._id) return performer;\n  return null;\n}\nexport function isPhysicalProduct(item) {\n  if (item && item.type === 'physical') return true;\n  return false;\n}\nexport function chatBoxMessageClassName(req) {\n  var isMine = req.isMine,\n      startsSequence = req.startsSequence,\n      endsSequence = req.endsSequence,\n      type = req.data.type;\n  return classnames('message', {\n    mine: isMine && type !== 'tip'\n  }, {\n    tip: type === 'tip'\n  }, {\n    start: !!startsSequence\n  }, {\n    end: !!endsSequence\n  });\n}\n\nfunction convertFeetToCm(feet, inch) {\n  var _feet$split = feet.split('.'),\n      _feet$split2 = _slicedToArray(_feet$split, 1),\n      f = _feet$split2[0];\n\n  var _inch$split = inch.split('.'),\n      _inch$split2 = _slicedToArray(_inch$split, 1),\n      i = _inch$split2[0];\n\n  return (parseInt(f, 10) * 12 + parseInt(i, 10)) * 2.54;\n}\n\nexport function formatDataWeight() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 99;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 319;\n  var i = min;\n  var result = [];\n\n  do {\n    result[i] = (i * 0.45).toFixed(2);\n    i += 1;\n  } while (i < max);\n\n  return result.map(function (v, index) {\n    return {\n      label: \"\".concat(index, \"  lbs (\").concat(v, \"kg)\"),\n      value: \"\".concat(index, \" lbs\")\n    };\n  });\n}\nexport function formatDataHeight() {\n  var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4;\n  var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 7;\n  var result = [];\n\n  for (var feet = min; feet < max; feet += 1) {\n    for (var inch = 0; inch <= 11; inch += 1) {\n      var a = convertFeetToCm(feet.toFixed(1).toString(), inch.toFixed(1).toString());\n      result.push(\"\".concat(feet, \"'\").concat(inch, \"\\\" (\").concat(a.toFixed(2), \" cm)\"));\n    }\n  }\n\n  return result.map(function (f) {\n    return {\n      label: \"\".concat(f),\n      value: \"\".concat(f)\n    };\n  });\n}\nexport function formatPrice(price) {\n  var fractionDigits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n  if (price) {\n    return price.toFixed(fractionDigits);\n  }\n\n  return '';\n}","map":null,"metadata":{},"sourceType":"module"}