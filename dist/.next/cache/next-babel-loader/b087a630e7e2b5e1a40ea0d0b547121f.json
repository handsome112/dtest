{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/var/www/dtest.live/src/components/common/base/popup.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport { Modal, Button } from 'antd';\nimport './popup.less';\n\nvar Popup = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Popup, _PureComponent);\n\n  var _super = _createSuper(Popup);\n\n  function Popup(props) {\n    var _this;\n\n    _classCallCheck(this, Popup);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      visible: false\n    };\n    return _this;\n  }\n\n  _createClass(Popup, [{\n    key: \"onOk\",\n    value: function onOk() {\n      var onOk = this.props.onOk;\n      onOk && onOk();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      var onCancel = this.props.onCancel;\n      onCancel && onCancel();\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: \"setVisible\",\n    value: function setVisible(visible) {\n      this.setState({\n        visible: visible\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var visible = this.state.visible;\n      var _this$props = this.props,\n          content = _this$props.content,\n          loading = _this$props.loading,\n          okText = _this$props.okText,\n          cancelText = _this$props.cancelText,\n          okButtonProps = _this$props.okButtonProps;\n      var footer = this.props.footer;\n\n      if (footer) {\n        footer = [__jsx(Button, {\n          key: \"back\",\n          type: \"default\",\n          onClick: this.onCancel.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }\n        }, cancelText || 'Cancel')].concat(_toConsumableArray(footer), [__jsx(Button, _extends({\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.onOk.bind(this),\n          loading: loading\n        }, okButtonProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }\n        }), okText || 'OK')]);\n      } else {\n        footer = [__jsx(Button, {\n          key: \"back\",\n          type: \"default\",\n          onClick: this.onCancel.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }\n        }, cancelText || 'Cancel'), __jsx(Button, _extends({\n          key: \"submit\",\n          type: \"primary\",\n          onClick: this.onOk.bind(this),\n          disabled: loading,\n          loading: loading\n        }, okButtonProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 9\n          }\n        }), okText || 'OK')];\n      }\n\n      return __jsx(Modal, _extends({}, this.props, {\n        visible: visible,\n        centered: true,\n        closeIcon: true,\n        className: \"popup\",\n        footer: footer,\n        onCancel: this.onCancel.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }), content);\n    }\n  }]);\n\n  return Popup;\n}(PureComponent);\n\nexport default Popup;","map":null,"metadata":{},"sourceType":"module"}