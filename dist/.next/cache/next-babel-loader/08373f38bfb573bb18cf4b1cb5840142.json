{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport BaseLayout from '@layouts/base-layout';\nimport { authService, userService, performerService, studioService, bannerService } from '@services/index';\nimport Router from 'next/router';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentPerformer } from '@redux/performer/actions';\nimport { settingService } from '@services/setting.service';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { PERFORMER_ROLE, USER_ROLE } from 'src/services/api-request';\nimport { Socket } from 'src/socket';\nimport '../style/index.less';\nimport { updateSettings } from '@redux/settings/actions';\nimport { getBannersSuccess } from '@redux/banner/actions';\nimport { SETTING_KEYS } from 'src/constants';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { pick } from 'lodash';\nimport cookie from 'cookie';\nexport var ROLE = {\n  STUDIO: 'studio',\n  PERFORMER: 'performer',\n  USER: 'user'\n};\n\nfunction redirectLogin(ctx, authenticate) {\n  if (true) {\n    authService.removeToken();\n    authService.removeRemember();\n\n    if (authenticate && authenticate === ROLE.STUDIO) {\n      Router.push('/studio/login');\n      return;\n    }\n\n    Router.push('/auth/login/user');\n    return;\n  } // fix for production build\n  // ctx.res.clearCookie && ctx.res.clearCookie('token');\n\n\n  var authCookie = cookie.serialize('token', '', {\n    maxAge: -1\n  });\n  ctx.res.writeHead && ctx.res.writeHead(302, {\n    'Set-Cookie': authCookie,\n    Location: authenticate && authenticate === ROLE.STUDIO ? '/studio/login' : '/auth/login/user'\n  });\n  ctx.res.end && ctx.res.end();\n}\n\nfunction auth(_x, _x2) {\n  return _auth.apply(this, arguments);\n}\n\nfunction _auth() {\n  _auth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx, authenticate) {\n    var store, state, _nextCookie, token, role, resp;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(true && !authenticate)) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            store = ctx.store;\n            state = store.getState();\n\n            if (!(state.auth && state.auth.loggedIn)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            // TODO - move to a service\n            _nextCookie = nextCookie(ctx), token = _nextCookie.token, role = _nextCookie.role;\n\n            if (!(token && role)) {\n              _context2.next = 28;\n              break;\n            }\n\n            authService.setAuthHeaderToken(token);\n\n            if (!(role === PERFORMER_ROLE)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 13;\n            return performerService.me({\n              Authorization: token\n            });\n\n          case 13:\n            resp = _context2.sent;\n            store.dispatch(updateCurrentPerformer(resp.data));\n\n          case 15:\n            if (!(role === USER_ROLE)) {\n              _context2.next = 20;\n              break;\n            }\n\n            _context2.next = 18;\n            return userService.me({\n              Authorization: token\n            });\n\n          case 18:\n            resp = _context2.sent;\n            store.dispatch(updateCurrentUser(resp.data));\n\n          case 20:\n            if (!(role === ROLE.STUDIO)) {\n              _context2.next = 25;\n              break;\n            }\n\n            _context2.next = 23;\n            return studioService.me({\n              Authorization: token\n            });\n\n          case 23:\n            resp = _context2.sent;\n            store.dispatch(updateCurrentStudio(resp.data));\n\n          case 25:\n            // TODO - check permission\n            store.dispatch(loginSuccess());\n            _context2.next = 31;\n            break;\n\n          case 28:\n            if (!authenticate) {\n              _context2.next = 31;\n              break;\n            }\n\n            redirectLogin(ctx, authenticate);\n            return _context2.abrupt(\"return\");\n\n          case 31:\n            _context2.next = 36;\n            break;\n\n          case 33:\n            _context2.prev = 33;\n            _context2.t0 = _context2[\"catch\"](0);\n\n            if (authenticate) {\n              redirectLogin(ctx, authenticate);\n            }\n\n          case 36:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 33]]);\n  }));\n  return _auth.apply(this, arguments);\n}\n\nfunction updateSettingsStore(_x3, _x4) {\n  return _updateSettingsStore.apply(this, arguments);\n}\n\nfunction _updateSettingsStore() {\n  _updateSettingsStore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(ctx, settings) {\n    var store;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            try {\n              store = ctx.store;\n              store.dispatch(updateSettings({\n                tipSound: settings.tipSound\n              }));\n              store.dispatch(getBannersSuccess(settings.banners));\n              store.dispatch(updateUIValue({\n                placeholderLoginUrl: settings.placeholderLoginUrl,\n                placeholderAvatarUrl: settings.placeholderAvatarUrl,\n                logo: settings.logoUrl,\n                siteName: settings.siteName,\n                menus: settings.menus,\n                footerContent: settings.footerContent,\n                currencySymbol: settings.currencySymbol,\n                singularTextModel: settings.singularTextModel,\n                pluralTextModel: settings.pluralTextModel,\n                popup18Enabled: settings.popup18Enabled,\n                popup18ContentId: settings.popup18ContentId\n              }));\n              store.dispatch(updateLiveStreamSettings(pick(settings, [SETTING_KEYS.VIEWER_URL, SETTING_KEYS.PUBLISHER_URL, SETTING_KEYS.SUBSCRIBER_URL, SETTING_KEYS.OPTION_FOR_BROADCAST, SETTING_KEYS.OPTION_FOR_PRIVATE, SETTING_KEYS.OPTION_FOR_GROUP, SETTING_KEYS.DEFAULT_OFFLINE_MODEL_IMAGE, SETTING_KEYS.DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE, SETTING_KEYS.DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE, SETTING_KEYS.ANT_MEDIA_APPNAME]))); // TODO - update others like meta data\n            } catch (e) {\n              // TODO - implement me\n              // eslint-disable-next-line no-console\n              console.log(e);\n            }\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _updateSettingsStore.apply(this, arguments);\n}\n\nvar Application = /*#__PURE__*/function (_App) {\n  _inherits(Application, _App);\n\n  var _super = _createSuper(Application);\n\n  function Application() {\n    _classCallCheck(this, Application);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Application, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store,\n          settings = _this$props.settings;\n      var layout = Component.layout;\n      return __jsx(Provider, {\n        store: store\n      }, __jsx(Socket, null, __jsx(BaseLayout, {\n        layout: layout,\n        maintenanceMode: settings.maintenanceMode\n      }, __jsx(Component, pageProps))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: // TODO - consider if we need to use get static props in children component instead?\n    // or check in render?\n    function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, settings, _banner$data, _yield$Promise$all, _yield$Promise$all2, _settings, _banner, pageProps;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                _context.next = 3;\n                return auth(ctx, Component.authenticate);\n\n              case 3:\n                // server side to load settings, once time only\n                settings = {};\n\n                if (true) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 7;\n                return Promise.all([settingService.all(), bannerService.search({\n                  status: 'active'\n                })]);\n\n              case 7:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                _settings = _yield$Promise$all2[0];\n                _banner = _yield$Promise$all2[1];\n                // TODO encrypt, decypt header script, footer script or other info if needed\n                settings = _settings.data || {};\n                _context.next = 14;\n                return updateSettingsStore(ctx, _objectSpread(_objectSpread({}, settings), {}, {\n                  banners: (_banner === null || _banner === void 0 ? void 0 : (_banner$data = _banner.data) === null || _banner$data === void 0 ? void 0 : _banner$data.data) || []\n                }));\n\n              case 14:\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 19;\n                  break;\n                }\n\n                _context.next = 18;\n                return Component.getInitialProps({\n                  ctx: ctx\n                });\n\n              case 18:\n                pageProps = _context.sent;\n\n              case 19:\n                return _context.abrupt(\"return\", {\n                  settings: settings,\n                  pageProps: pageProps,\n                  layout: Component.layout\n                });\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x5) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Application;\n}(App);\n\n_defineProperty(Application, \"settingQuery\", false);\n\nexport default _c = withReduxSaga(Application);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/pages/_app.tsx"],"names":["App","React","Provider","nextCookie","withReduxSaga","BaseLayout","authService","userService","performerService","studioService","bannerService","Router","loginSuccess","updateCurrentUser","updateCurrentPerformer","settingService","updateCurrentStudio","updateUIValue","PERFORMER_ROLE","USER_ROLE","Socket","updateSettings","getBannersSuccess","SETTING_KEYS","updateLiveStreamSettings","pick","cookie","ROLE","STUDIO","PERFORMER","USER","redirectLogin","ctx","authenticate","removeToken","removeRemember","push","authCookie","serialize","maxAge","res","writeHead","Location","end","auth","store","state","getState","loggedIn","token","role","setAuthHeaderToken","me","Authorization","resp","dispatch","data","updateSettingsStore","settings","tipSound","banners","placeholderLoginUrl","placeholderAvatarUrl","logo","logoUrl","siteName","menus","footerContent","currencySymbol","singularTextModel","pluralTextModel","popup18Enabled","popup18ContentId","VIEWER_URL","PUBLISHER_URL","SUBSCRIBER_URL","OPTION_FOR_BROADCAST","OPTION_FOR_PRIVATE","OPTION_FOR_GROUP","DEFAULT_OFFLINE_MODEL_IMAGE","DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE","DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE","ANT_MEDIA_APPNAME","e","console","log","Application","props","Component","pageProps","layout","maintenanceMode","Promise","all","search","status","_settings","_banner","getInitialProps"],"mappings":"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","sourcesContent":["import App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport { Store } from 'redux';\nimport BaseLayout from '@layouts/base-layout';\nimport {\n  authService,\n  userService,\n  performerService,\n  studioService,\n  bannerService\n} from '@services/index';\nimport Router from 'next/router';\nimport { NextPageContext } from 'next';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateCurrentPerformer } from '@redux/performer/actions';\nimport { settingService } from '@services/setting.service';\nimport { updateCurrentStudio } from '@redux/studio/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { PERFORMER_ROLE, USER_ROLE, IResponse } from 'src/services/api-request';\nimport { Socket } from 'src/socket';\nimport '../style/index.less';\nimport { updateSettings } from '@redux/settings/actions';\nimport { getBannersSuccess } from '@redux/banner/actions';\nimport { SETTING_KEYS } from 'src/constants';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { pick } from 'lodash';\nimport Head from 'next/head';\nimport cookie from 'cookie';\nimport { IUIConfig } from 'src/interfaces';\n\ndeclare global {\n  interface Window {\n    ReactSocketIO: any;\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n  }\n}\n\nexport const ROLE = {\n  STUDIO: 'studio',\n  PERFORMER: 'performer',\n  USER: 'user'\n};\nfunction redirectLogin(ctx: NextPageContext, authenticate: boolean | string) {\n  if (process.browser) {\n    authService.removeToken();\n    authService.removeRemember();\n    if (authenticate && authenticate === ROLE.STUDIO) {\n      Router.push('/studio/login');\n      return;\n    }\n\n    Router.push('/auth/login/user');\n    return;\n  }\n\n  // fix for production build\n  // ctx.res.clearCookie && ctx.res.clearCookie('token');\n  const authCookie = cookie.serialize('token', '', {\n    maxAge: -1\n  });\n  ctx.res.writeHead\n    && ctx.res.writeHead(302, {\n      'Set-Cookie': authCookie,\n      Location:\n        authenticate && authenticate === ROLE.STUDIO\n          ? '/studio/login'\n          : '/auth/login/user'\n    });\n  ctx.res.end && ctx.res.end();\n}\n\nasync function auth(ctx: NextPageContext, authenticate: boolean | string) {\n  try {\n    if (process.browser && !authenticate) return;\n\n    const { store } = ctx;\n    const state = store.getState();\n    if (state.auth && state.auth.loggedIn) {\n      return;\n    }\n\n    // TODO - move to a service\n    const { token, role } = nextCookie(ctx);\n    if (token && role) {\n      authService.setAuthHeaderToken(token);\n      let resp: IResponse<any>;\n      if (role === PERFORMER_ROLE) {\n        resp = await performerService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentPerformer(resp.data));\n      }\n\n      if (role === USER_ROLE) {\n        resp = await userService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentUser(resp.data));\n      }\n\n      if (role === ROLE.STUDIO) {\n        resp = await studioService.me({\n          Authorization: token\n        });\n        store.dispatch(updateCurrentStudio(resp.data));\n      }\n\n      // TODO - check permission\n      store.dispatch(loginSuccess());\n    } else if (authenticate) {\n      redirectLogin(ctx, authenticate);\n      return;\n    }\n  } catch (e) {\n    if (authenticate) {\n      redirectLogin(ctx, authenticate);\n    }\n  }\n}\n\nasync function updateSettingsStore(ctx: NextPageContext, settings) {\n  try {\n    const { store } = ctx;\n    store.dispatch(updateSettings({ tipSound: settings.tipSound }));\n    store.dispatch(getBannersSuccess(settings.banners));\n    store.dispatch(\n      updateUIValue({\n        placeholderLoginUrl: settings.placeholderLoginUrl,\n        placeholderAvatarUrl: settings.placeholderAvatarUrl,\n        logo: settings.logoUrl,\n        siteName: settings.siteName,\n        menus: settings.menus,\n        footerContent: settings.footerContent,\n        currencySymbol: settings.currencySymbol,\n        singularTextModel: settings.singularTextModel,\n        pluralTextModel: settings.pluralTextModel,\n        popup18Enabled: settings.popup18Enabled,\n        popup18ContentId: settings.popup18ContentId\n      })\n    );\n    store.dispatch(\n      updateLiveStreamSettings(\n        pick(settings, [\n          SETTING_KEYS.VIEWER_URL,\n          SETTING_KEYS.PUBLISHER_URL,\n          SETTING_KEYS.SUBSCRIBER_URL,\n          SETTING_KEYS.OPTION_FOR_BROADCAST,\n          SETTING_KEYS.OPTION_FOR_PRIVATE,\n          SETTING_KEYS.OPTION_FOR_GROUP,\n          SETTING_KEYS.DEFAULT_OFFLINE_MODEL_IMAGE,\n          SETTING_KEYS.DEFAULT_MODEL_PRIVATECALL_WITH_USER_IMAGE,\n          SETTING_KEYS.DEFAULT_MODEL_IN_GROUP_CHAT_IMAGE,\n          SETTING_KEYS.ANT_MEDIA_APPNAME\n        ])\n      )\n    );\n    // TODO - update others like meta data\n  } catch (e) {\n    // TODO - implement me\n    // eslint-disable-next-line no-console\n    console.log(e);\n  }\n}\n\ninterface AppComponent extends NextPageContext {\n  layout: string;\n}\n\ninterface IApp {\n  store: Store;\n  layout: string;\n  authenticate: boolean;\n  Component: AppComponent;\n  settings: IUIConfig;\n}\n\nclass Application extends App<IApp> {\n  static settingQuery = false;\n\n  // TODO - consider if we need to use get static props in children component instead?\n  // or check in render?\n  static async getInitialProps({ Component, ctx }) {\n    // won't check auth for un-authenticated page such as login, register\n    // use static field in the component\n    await auth(ctx, Component.authenticate);\n\n    // server side to load settings, once time only\n    let settings = {};\n    if (!process.browser) {\n      const [_settings, _banner] = await Promise.all([\n        settingService.all(),\n        bannerService.search({ status: 'active' })\n      ]);\n      // TODO encrypt, decypt header script, footer script or other info if needed\n      settings = _settings.data || {};\n      await updateSettingsStore(ctx, {\n        ...settings,\n        banners: _banner?.data?.data || []\n      });\n    }\n\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    // TODO - overwrite for ui config by using redux-store\n    return {\n      settings,\n      pageProps,\n      layout: Component.layout\n    };\n  }\n\n  render() {\n    const {\n      Component, pageProps, store, settings\n    } = this.props;\n    const { layout } = Component;\n    return (\n      <Provider store={store}>\n        \n        <Socket>\n          <BaseLayout\n            layout={layout}\n            maintenanceMode={settings.maintenanceMode}\n          >\n            <Component {...pageProps} />\n          </BaseLayout>\n        </Socket>\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxSaga(Application);\n"]},"metadata":{},"sourceType":"module"}