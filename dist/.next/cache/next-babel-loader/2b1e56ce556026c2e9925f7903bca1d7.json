{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/* eslint-disable no-return-assign */\nimport { Input, message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport { getMembersCommissions, updateMemberCommision } from 'src/redux/studio/actions';\nimport React, { PureComponent } from 'react';\nimport StudioCommissionsTable from '@components/studio/models-manager/studio-commissions-table';\nimport { connect } from 'react-redux';\nimport './index.less';\nimport { getResponseError, getSearchData } from 'src/lib';\nimport Popup from '@components/common/base/popup';\nimport { studioService } from 'src/services';\n\nvar StudioModelsPage = /*#__PURE__*/function (_PureComponent) {\n  _inherits(StudioModelsPage, _PureComponent);\n\n  var _super = _createSuper(StudioModelsPage);\n\n  function StudioModelsPage(props) {\n    var _this;\n\n    _classCallCheck(this, StudioModelsPage);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"popupRef\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", void 0);\n\n    _this.state = {\n      limit: 12,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      filter: {},\n      commissionId: null\n    };\n    return _this;\n  }\n\n  _createClass(StudioModelsPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatchGetMembersCommissions = this.props.getMembersCommissions;\n      dispatchGetMembersCommissions(this.state);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_, prevStates) {\n      var dispatchGetMembersCommissions = this.props.getMembersCommissions;\n\n      if (prevStates !== this.state) {\n        dispatchGetMembersCommissions(this.state);\n      }\n    }\n  }, {\n    key: \"handleTableChange\",\n    value: function handleTableChange(pagination, filters, sorter) {\n      var oldState = this.state;\n      this.setState(getSearchData(pagination, filters, sorter, oldState));\n    }\n  }, {\n    key: \"onOk\",\n    value: function () {\n      var _onOk = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var dispatchUpdateMemberCommision, commissionId, value, err;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatchUpdateMemberCommision = this.props.updateMemberCommision;\n                commissionId = this.state.commissionId;\n\n                if (!(!commissionId || !this.inputRef)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 4:\n                _context.prev = 4;\n                value = this.inputRef.state.value;\n                _context.next = 8;\n                return studioService.updateMemberCommission(commissionId, parseInt(value, 10));\n\n              case 8:\n                dispatchUpdateMemberCommision({\n                  id: commissionId,\n                  memberCommission: parseInt(value, 10)\n                });\n                message.success('Update success');\n                this.popupRef && this.popupRef.setVisible(false);\n                _context.next = 19;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](4);\n                _context.next = 17;\n                return Promise.resolve(_context.t0);\n\n              case 17:\n                err = _context.sent;\n                message.error(getResponseError(err));\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 13]]);\n      }));\n\n      function onOk() {\n        return _onOk.apply(this, arguments);\n      }\n\n      return onOk;\n    }()\n  }, {\n    key: \"update\",\n    value: function update(id) {\n      this.setState({\n        commissionId: id\n      });\n      this.popupRef && this.popupRef.setVisible(true);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          data = _this$props.data,\n          searching = _this$props.searching,\n          total = _this$props.total;\n      var limit = this.state.limit;\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Commissions\")), __jsx(Popup, {\n        ref: function ref(_ref2) {\n          return _this2.popupRef = _ref2;\n        },\n        content: __jsx(Input, {\n          type: \"number\",\n          min: 0,\n          max: 100,\n          ref: function ref(_ref) {\n            return _this2.inputRef = _ref;\n          }\n        }),\n        onOk: this.onOk.bind(this)\n      }), __jsx(\"div\", {\n        className: \"studio-commisson-background\"\n      }, __jsx(PageHeader, {\n        title: \"Commissions\"\n      }), __jsx(\"div\", {\n        className: \"studio-commisson-box\"\n      }, __jsx(StudioCommissionsTable, {\n        data: data,\n        searching: searching,\n        total: total,\n        update: this.update.bind(this),\n        onChange: this.handleTableChange.bind(this),\n        pageSize: limit\n      }))));\n    }\n  }]);\n\n  return StudioModelsPage;\n}(PureComponent);\n\n_defineProperty(StudioModelsPage, \"authenticate\", 'studio');\n\n_defineProperty(StudioModelsPage, \"layout\", 'primary');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.studio.commissions);\n};\n\nvar mapDispatchs = {\n  getMembersCommissions: getMembersCommissions,\n  updateMemberCommision: updateMemberCommision\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioModelsPage);","map":null,"metadata":{},"sourceType":"module"}