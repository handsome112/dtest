{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/performer/earning-history-table.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Table, Tag } from 'antd';\nimport { formatDate } from 'src/lib';\nimport NumberFormat from '@components/common/layout/numberformat';\nconst breakPoint = ['md'];\n\nconst EarningHistoryTable = ({\n  earnings,\n  searching,\n  total,\n  pageSize,\n  onChange\n}) => {\n  const columns = [{\n    title: 'Transaction',\n    dataIndex: 'transactionTokenId',\n    key: 'transaction',\n    responsive: breakPoint,\n    render: transactionTokenId => (transactionTokenId === null || transactionTokenId === void 0 ? void 0 : transactionTokenId.slice(16, 24).toUpperCase()) || 'N/A'\n  }, {\n    title: 'From',\n    dataIndex: 'sourceInfo',\n    key: 'from',\n    render: sourceInfo => (sourceInfo === null || sourceInfo === void 0 ? void 0 : sourceInfo.username) || 'N/A'\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    render: type => __jsx(Tag, {\n      color: \"magenta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, type)\n  }, {\n    title: 'Gross Price',\n    dataIndex: 'grossPrice',\n    key: 'grossPrice',\n    render: grossPrice => __jsx(NumberFormat, {\n      value: grossPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 39\n      }\n    }),\n    sorter: true\n  }, {\n    title: 'Net Price',\n    dataIndex: 'netPrice',\n    key: 'netPrice',\n    render: netPrice => __jsx(NumberFormat, {\n      value: netPrice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }),\n    sorter: true\n  }, {\n    title: 'Earned Money',\n    dataIndex: 'price',\n    key: 'price',\n    render: price => __jsx(NumberFormat, {\n      value: price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 34\n      }\n    })\n  }, {\n    title: 'Percent',\n    dataIndex: 'commission',\n    key: 'commission'\n  }, {\n    title: 'Is Paid?',\n    key: 'isPaid',\n    dataIndex: 'isPaid',\n    render: isPaid => __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 36\n      }\n    }, isPaid ? 'YES' : 'NO')\n  }, {\n    title: 'Date',\n    key: 'createdAt',\n    dataIndex: 'createdAt',\n    render: createdAt => __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 36\n      }\n    }, formatDate(createdAt)),\n    sorter: true\n  }];\n  const dataSource = earnings.map(p => _objectSpread(_objectSpread({}, p), {}, {\n    key: p._id\n  }));\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    className: \"table\",\n    pagination: {\n      total,\n      pageSize\n    },\n    scroll: {\n      x: true\n    },\n    showSorterTooltip: false,\n    loading: searching,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default EarningHistoryTable;","map":null,"metadata":{},"sourceType":"module"}