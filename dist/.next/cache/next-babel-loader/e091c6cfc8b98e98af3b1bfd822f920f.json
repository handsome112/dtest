{"ast":null,"code":"var _this = this;\n\nvar __jsx = React.createElement;\nimport { Table, Tag } from 'antd';\nimport React from 'react';\nimport { formatDate } from 'src/lib';\nexport var TransactionHistoryTable = function TransactionHistoryTable(_ref) {\n  var transactions = _ref.transactions,\n      rowKey = _ref.rowKey,\n      pageSize = _ref.pageSize,\n      total = _ref.total,\n      onChange = _ref.onChange;\n  var columns = [{\n    title: 'Transaction ID',\n    dataIndex: '_id',\n    key: '_id',\n    render: function render(_id) {\n      return (_id === null || _id === void 0 ? void 0 : _id.slice(16, 24).toUpperCase()) || 'N/A';\n    }\n  }, {\n    title: 'Products',\n    dataIndex: 'products',\n    key: 'products',\n    render: function render(products) {\n      return (products || []).map(function (product) {\n        var _product$description;\n\n        return __jsx(\"p\", null, __jsx(\"strong\", null, product.name), ' ', __jsx(\"br\", null), __jsx(\"small\", null, (product === null || product === void 0 ? void 0 : (_product$description = product.description) === null || _product$description === void 0 ? void 0 : _product$description.slice(0, 150)) || ''));\n      });\n    }\n  }, {\n    title: 'Price',\n    dataIndex: 'totalPrice',\n    key: 'totalPrice',\n    align: 'center',\n    sorter: true,\n    render: function render(totalPrice) {\n      return (totalPrice === null || totalPrice === void 0 ? void 0 : totalPrice.toFixed(2)) || 'N/A';\n    }\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    filters: [{\n      text: 'Success',\n      value: 'success'\n    }, {\n      text: 'Pending',\n      value: 'pending'\n    }, {\n      text: 'Canceled',\n      value: 'canceled'\n    }],\n    onFilter: function onFilter(value, record) {\n      return record.status.includes(value);\n    },\n    render: function render(status) {\n      switch (status) {\n        case 'success':\n          return __jsx(Tag, {\n            color: \"green\"\n          }, \"Success\");\n\n        case 'pending':\n          return __jsx(Tag, {\n            color: \"warning\"\n          }, \"Pending\");\n\n        case 'canceled':\n          return __jsx(Tag, {\n            color: \"default\"\n          }, \"Canceled\");\n\n        default:\n          return __jsx(Tag, {\n            color: \"default\"\n          }, \"Canceled\");\n      }\n    }\n  }, {\n    title: 'Created At',\n    dataIndex: 'createdAt',\n    sorter: true,\n    key: 'createdAt',\n    render: function render(date) {\n      return __jsx(\"span\", null, formatDate(date));\n    }\n  }];\n  return __jsx(Table, {\n    columns: columns,\n    rowKey: rowKey,\n    dataSource: transactions,\n    pagination: {\n      total: total,\n      pageSize: pageSize\n    },\n    onChange: onChange.bind(_this)\n  });\n};","map":null,"metadata":{},"sourceType":"module"}