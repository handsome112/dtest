{"ast":null,"code":"var __jsx = React.createElement;\nimport { Table } from 'antd';\nimport React from 'react';\nimport { EyeOutlined } from '@ant-design/icons';\nimport { formatDate } from '@lib/date';\nimport Link from 'next/link';\nimport { PerformerUsername } from '@components/performer';\nimport NumberFormat from '@components/common/layout/numberformat';\nimport { OrderStatus } from './order-status';\n\nconst OrderTableList = ({\n  dataSource,\n  pagination,\n  rowKey,\n  loading,\n  onChange,\n  type\n}) => {\n  const columns = [{\n    title: 'Number',\n    dataIndex: 'orderNumber',\n    key: 'orderNumber',\n    responsive: ['sm']\n  }, {\n    title: `${type === 'user' ? 'Seller' : 'Buyer'}`,\n    dataIndex: `${type === 'user' ? 'performerId' : 'userId'}`,\n    key: `${type === 'user' ? 'performerId' : 'userId'}`,\n    sorter: true,\n\n    render(data, record) {\n      var _record$buyerInfo;\n\n      if (type === 'user') {\n        if (record.sellerSource === 'system') return __jsx(\"span\", null, \"System\");\n        return record !== null && record !== void 0 && record.sellerInfo ? __jsx(PerformerUsername, {\n          performer: record.sellerInfo\n        }) : __jsx(\"span\", null, \"N/A\");\n      }\n\n      return (record === null || record === void 0 ? void 0 : (_record$buyerInfo = record.buyerInfo) === null || _record$buyerInfo === void 0 ? void 0 : _record$buyerInfo.username) || 'N/A';\n    }\n\n  }, {\n    title: 'Item',\n    dataIndex: 'name',\n    key: 'name',\n\n    render(name, record) {\n      return __jsx(\"div\", {\n        style: {\n          wordWrap: 'break-word',\n          wordBreak: 'break-word'\n        }\n      }, __jsx(\"strong\", null, name), __jsx(\"br\", null), __jsx(\"small\", null, record.description));\n    }\n\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    sorter: true,\n    key: 'type'\n  }, {\n    title: 'Quantity',\n    dataIndex: 'quantity',\n    sorter: true,\n    key: 'quantity',\n\n    render(quantity) {\n      return __jsx(\"span\", null, quantity);\n    }\n\n  }, {\n    title: 'Total Price (tokens)',\n    dataIndex: 'totalPrice',\n    sorter: true,\n    key: 'totalPrice',\n\n    render(data, record) {\n      if (record.payBy === 'token') {\n        return __jsx(\"span\", null, __jsx(NumberFormat, {\n          value: record.totalPrice\n        }), ' ', \"token(s)\");\n      }\n\n      return __jsx(\"span\", null, \"$\", __jsx(NumberFormat, {\n        value: record.totalPrice\n      }));\n    }\n\n  }, {\n    title: 'Delivery Status',\n    dataIndex: 'deliveryStatus',\n    key: 'deliveryStatus',\n    sorter: true,\n\n    render(status) {\n      return __jsx(OrderStatus, {\n        status: status\n      });\n    }\n\n  }, {\n    title: 'Last updated at',\n    dataIndex: 'createdAt',\n    sorter: true,\n    key: 'createdAt',\n\n    render(date) {\n      return __jsx(\"span\", null, formatDate(date));\n    }\n\n  }, {\n    title: 'Actions',\n    dataIndex: '_id',\n\n    render(id) {\n      return __jsx(Link, {\n        href: {\n          pathname: `/account/${type}/orders/detail`,\n          query: {\n            id\n          }\n        }\n      }, __jsx(\"a\", null, __jsx(EyeOutlined, null)));\n    }\n\n  }];\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    pagination: pagination,\n    rowKey: rowKey,\n    loading: loading,\n    onChange: onChange.bind(this),\n    scroll: {\n      x: 1300\n    }\n  });\n};\n\nexport default OrderTableList;","map":null,"metadata":{},"sourceType":"module"}