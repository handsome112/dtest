{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Dropdown, Menu, message } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { getResponseError } from '@lib/utils';\nimport { performerService } from '@services/perfomer.service';\n\nvar StreamingChatUsers = function StreamingChatUsers(_ref) {\n  _s();\n\n  var loggedIn = _ref.loggedIn,\n      members = _ref.members,\n      currentPerformer = _ref.currentPerformer,\n      placeholderAvatarUrl = _ref.placeholderAvatarUrl;\n  var blockUser = React.useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var key, error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              key = _ref2.key;\n\n              if (window.confirm('Are you sure to block this user?')) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return performerService.geoBlock({\n                userIds: [key]\n              });\n\n            case 6:\n              _context.next = 14;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](3);\n              _context.next = 12;\n              return Promise.resolve(_context.t0);\n\n            case 12:\n              error = _context.sent;\n              message.error(getResponseError(error));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [members]);\n  return __jsx(\"div\", {\n    className: \"conversation-users\"\n  }, __jsx(\"div\", {\n    className: \"users\"\n  }, members.length > 0 && members.map(function (m) {\n    return __jsx(\"div\", {\n      className: \"user\",\n      key: m._id\n    }, loggedIn && currentPerformer && currentPerformer._id ? __jsx(Dropdown, {\n      overlay: __jsx(Menu, null, __jsx(Menu.Item, {\n        onClick: blockUser,\n        key: m._id\n      }, __jsx(\"span\", null, __jsx(StopOutlined, {\n        size: 16\n      }), ' ', \"Block this user\"))),\n      placement: \"bottomLeft\",\n      trigger: ['hover', 'click']\n    }, __jsx(\"span\", {\n      className: \"username\"\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || placeholderAvatarUrl,\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      }\n    }), m.username, ' ', __jsx(DownOutlined, null))) : __jsx(\"span\", {\n      className: \"username\"\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || '/default-user-icon.png',\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      }\n    }), m.username));\n  })));\n};\n\n_s(StreamingChatUsers, \"fOphxAhbFqgpVAOMK3b7eJkQvws=\");\n\n_c = StreamingChatUsers;\n\nvar mapStates = function mapStates(state) {\n  return {\n    placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n  };\n};\n\nexport default connect(mapStates)(StreamingChatUsers);\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamingChatUsers\");","map":{"version":3,"sources":["E:/WorkStation/Moldova/DTEST/src/components/stream-chat/UserList.tsx"],"names":["React","Dropdown","Menu","message","DownOutlined","StopOutlined","connect","getResponseError","performerService","StreamingChatUsers","loggedIn","members","currentPerformer","placeholderAvatarUrl","blockUser","useCallback","key","window","confirm","geoBlock","userIds","Promise","resolve","error","length","map","m","_id","avatar","borderRadius","marginRight","username","mapStates","state","ui"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Dropdown, Menu, message } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { IPerformer, IUser } from 'src/interfaces';\nimport { connect } from 'react-redux';\nimport { getResponseError } from '@lib/utils';\nimport { performerService } from '@services/perfomer.service';\n\ninterface P {\n  loggedIn: Boolean;\n  members: Array<IUser>;\n  currentPerformer: IPerformer;\n  placeholderAvatarUrl: string;\n}\n\nconst StreamingChatUsers = ({\n  loggedIn,\n  members,\n  currentPerformer,\n  placeholderAvatarUrl\n}: P) => {\n  const blockUser = React.useCallback(async ({ key }) => {\n    if (!window.confirm('Are you sure to block this user?')) return;\n    try {\n      await performerService.geoBlock({ userIds: [key] });\n    } catch (e) {\n      const error = await Promise.resolve(e);\n      message.error(getResponseError(error));\n    }\n  }, [members]);\n  return (\n    <div className=\"conversation-users\">\n      <div className=\"users\">\n        {members.length > 0\n        && members.map((m) => (\n          <div className=\"user\" key={m._id}>\n            {loggedIn && currentPerformer && currentPerformer._id ? (\n              <Dropdown\n                overlay={(\n                  <Menu>\n                    <Menu.Item onClick={blockUser} key={m._id}>\n                      <span>\n                        <StopOutlined size={16} />\n                        {' '}\n                        Block this user\n                      </span>\n                    </Menu.Item>\n                  </Menu>\n                )}\n                placement=\"bottomLeft\"\n                trigger={['hover', 'click']}\n              >\n                <span className=\"username\">\n                  <img\n                    alt=\"avatar\"\n                    src={m?.avatar || placeholderAvatarUrl}\n                    width=\"35px\"\n                    style={{ borderRadius: '50%', marginRight: '5px' }}\n                  />\n                  {m.username}\n                  {' '}\n                  <DownOutlined />\n                </span>\n              </Dropdown>\n            ) : (\n              <span className=\"username\">\n                <img\n                  alt=\"avatar\"\n                  src={m?.avatar || '/default-user-icon.png'}\n                  width=\"35px\"\n                  style={{ borderRadius: '50%', marginRight: '5px' }}\n                />\n                {m.username}\n              </span>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStates = (state: any) => ({\n  placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n});\nexport default connect(mapStates)(StreamingChatUsers);\n"]},"metadata":{},"sourceType":"module"}