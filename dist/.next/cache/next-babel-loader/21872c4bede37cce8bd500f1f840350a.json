{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/common/base/select/countries.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { Select } from 'antd';\nconst {\n  Option\n} = Select;\n\nconst filter = (value, option) => option.children.toLowerCase().indexOf(value.toLowerCase()) > -1;\n\nconst CountriesSelect = _ref => {\n  let {\n    defaultValue,\n    onChange,\n    countries\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"defaultValue\", \"onChange\", \"countries\"]);\n\n  const [value, setValue] = React.useState(defaultValue);\n\n  const handleSelectChange = v => {\n    setValue(v);\n    onChange && onChange(v);\n  };\n\n  return __jsx(Select, _extends({}, props, {\n    value: value,\n    onChange: handleSelectChange,\n    showSearch: true,\n    filterOption: filter,\n    placeholder: \"Select your counties\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), countries.map(country => __jsx(Option, {\n    key: country.code,\n    value: country.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, country.name)));\n};\n\nCountriesSelect.defaultProps = {\n  autoFocus: false,\n  disabled: false,\n  mode: '',\n  onChange: null\n};\nexport default CountriesSelect;","map":null,"metadata":{},"sourceType":"module"}