{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/dtest.live/src/components/performer/profile-edit-form.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-shadow */\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable prefer-promise-reject-errors */\n\n/* eslint-disable prefer-const */\n\n/* eslint-disable react/require-default-props */\nimport * as React from 'react';\nimport { Form, Input, Button, Select, DatePicker } from 'antd';\nimport moment from 'moment';\nimport './index.less';\nimport { OptionProfile } from '@components/common/base/select/profile';\nimport { formatDataWeight, formatDataHeight } from 'src/lib/utils';\nvar TextArea = Input.TextArea;\nvar hairDataSource = [{\n  label: 'Brown',\n  value: 'brown'\n}, {\n  label: 'Blonde',\n  value: 'blonde'\n}, {\n  label: 'Black',\n  value: 'black'\n}, {\n  label: 'Red',\n  value: 'red'\n}, {\n  label: 'Unknown',\n  value: 'unknown'\n}];\nvar pubicHairDataSource = [{\n  label: 'Trimmed',\n  value: 'trimmed'\n}, {\n  label: 'Shaved',\n  value: 'shaved'\n}, {\n  label: 'Hairy',\n  value: 'hairy'\n}, {\n  label: 'Unknown',\n  value: 'unknown'\n}];\nvar bustDataSource = [{\n  label: 'Large',\n  value: 'large'\n}, {\n  label: 'Medium',\n  value: 'medium'\n}, {\n  label: 'Small',\n  value: 'small'\n}, {\n  label: 'Unknown',\n  value: 'unknown'\n}];\nvar weightDataSource = formatDataWeight();\nvar heightDatasource = formatDataHeight();\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nvar tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 0\n    }\n  }\n};\n\nvar UserProfile = function UserProfile(_ref) {\n  var onFinish = _ref.onFinish,\n      firstName = _ref.firstName,\n      lastName = _ref.lastName,\n      countries = _ref.countries,\n      country = _ref.country,\n      city = _ref.city,\n      loading = _ref.loading,\n      address = _ref.address,\n      state = _ref.state,\n      aboutMe = _ref.aboutMe,\n      dateOfBirth = _ref.dateOfBirth,\n      gender = _ref.gender,\n      sexualReference = _ref.sexualReference,\n      ethnicity = _ref.ethnicity,\n      eyes = _ref.eyes,\n      hair = _ref.hair,\n      height = _ref.height,\n      weight = _ref.weight,\n      categoryIds = _ref.categoryIds,\n      tags = _ref.tags,\n      pubicHair = _ref.pubicHair,\n      bust = _ref.bust,\n      categoriesData = _ref.categoriesData,\n      socials = _ref.socials;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _React$useState = React.useState((socials === null || socials === void 0 ? void 0 : socials.facebook) || ''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      facebook = _React$useState2[0],\n      setFb = _React$useState2[1];\n\n  var _React$useState3 = React.useState((socials === null || socials === void 0 ? void 0 : socials.twitter) || ''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      twitter = _React$useState4[0],\n      setTw = _React$useState4[1];\n\n  var _React$useState5 = React.useState((socials === null || socials === void 0 ? void 0 : socials.instagram) || ''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      instagram = _React$useState6[0],\n      setIta = _React$useState6[1];\n\n  return __jsx(Form, _extends({}, formItemLayout, {\n    form: form,\n    onFinish: function (_onFinish) {\n      function onFinish(_x) {\n        return _onFinish.apply(this, arguments);\n      }\n\n      onFinish.toString = function () {\n        return _onFinish.toString();\n      };\n\n      return onFinish;\n    }(function (values) {\n      var data = _objectSpread(_objectSpread({}, values), {\n        socials: {\n          facebook: facebook,\n          twitter: twitter,\n          instagram: instagram\n        }\n      });\n\n      onFinish(data);\n    }),\n    name: \"contactSettingForm\",\n    className: \"performerEditForm\",\n    initialValues: {\n      firstName: firstName,\n      lastName: lastName,\n      city: city,\n      address: address,\n      state: state,\n      aboutMe: aboutMe,\n      country: country,\n      dateOfBirth: moment(dateOfBirth),\n      gender: gender,\n      sexualReference: sexualReference,\n      ethnicity: ethnicity,\n      eyes: eyes,\n      hair: hair,\n      height: height,\n      weight: weight,\n      categoryIds: categoryIds,\n      pubicHair: pubicHair,\n      bust: bust,\n      tags: tags,\n      socials: socials\n    },\n    layout: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }), __jsx(Form.Item, {\n    name: \"firstName\",\n    label: \"First Name\",\n    rules: [{\n      pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n      message: 'Alphanumeric'\n    }, {\n      whitespace: true,\n      message: 'Please input your first name!'\n    }, {\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"First name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    rules: [{\n      pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n      message: 'Alphanumeric'\n    }, {\n      whitespace: true,\n      message: 'Please input your last name!'\n    }, {\n      required: true,\n      message: 'Please input your first name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"Last name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"aboutMe\",\n    label: \"About me\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, __jsx(TextArea, {\n    rows: 2,\n    placeholder: \"Tell your fans something about you\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"gender\",\n    label: \"Gender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(Select.Option, {\n    value: \"male\",\n    key: \"male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Male\"), __jsx(Select.Option, {\n    value: \"female\",\n    key: \"female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Female\"), __jsx(Select.Option, {\n    value: \"transgender\",\n    key: \"transgender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"Transgender\"))), __jsx(Form.Item, {\n    name: \"sexualReference\",\n    label: \"Sexual Preference\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"Sexual Preference\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"dateOfBirth\",\n    label: \"Date of Birth\",\n    rules: [{\n      required: true,\n      message: 'Please input date of birth!'\n    }, {\n      validator: function validator(rule, value) {\n        if (!value) return Promise.resolve();\n        var years = moment().diff(value, 'years');\n\n        if (years >= 18) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject('Minimum of 18 years');\n      }\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, __jsx(DatePicker, {\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"ethnicity\",\n    label: \"Ethnicity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, __jsx(Select.Option, {\n    value: \"White\",\n    key: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, \"White\"), __jsx(Select.Option, {\n    value: \"Asian\",\n    key: \"asian\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Asian\"), __jsx(Select.Option, {\n    value: \"Black\",\n    key: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, \"Black\"), __jsx(Select.Option, {\n    value: \"India\",\n    key: \"india\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, \"India\"), __jsx(Select.Option, {\n    value: \"Latin\",\n    key: \"latin\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, \"Latin\"), __jsx(Select.Option, {\n    value: \"Unknown\",\n    key: \"unknown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, \"Unknown\"))), __jsx(Form.Item, {\n    name: \"eyes\",\n    label: \"Eyes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, __jsx(Select.Option, {\n    value: \"Blue\",\n    key: \"blue\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, \"Blue\"), __jsx(Select.Option, {\n    value: \"Brown\",\n    key: \"brown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 11\n    }\n  }, \"Brown\"), __jsx(Select.Option, {\n    value: \"Green\",\n    key: \"green\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, \"Green\"), __jsx(Select.Option, {\n    value: \"Unknown\",\n    key: \"unknown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 11\n    }\n  }, \"Unknown\"))), __jsx(OptionProfile, {\n    label: \"Hair\",\n    dataSource: hairDataSource,\n    name: \"hair\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }), __jsx(OptionProfile, {\n    label: \"Weight\",\n    dataSource: weightDataSource,\n    name: \"weight\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }), __jsx(OptionProfile, {\n    label: \"Height\",\n    dataSource: heightDatasource,\n    name: \"height\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }), __jsx(OptionProfile, {\n    label: \"Pubic Hair\",\n    dataSource: pubicHairDataSource,\n    name: \"pubicHair\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }\n  }), __jsx(OptionProfile, {\n    label: \"Bust\",\n    dataSource: bustDataSource,\n    name: \"bust\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }), __jsx(Form.Item, {\n    name: \"categoryIds\",\n    label: \"Categories\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    mode: \"multiple\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 9\n    }\n  }, categoriesData.map(function (c) {\n    return __jsx(Select.Option, {\n      value: c._id,\n      key: c._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 13\n      }\n    }, c.name);\n  }))), __jsx(Form.Item, {\n    name: \"tags\",\n    label: \"Tags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    mode: \"tags\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"country\",\n    label: \"Country\",\n    rules: [{\n      required: true,\n      message: 'Please input your country!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    showSearch: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }\n  }, countries.length > 0 && countries.map(function (country) {\n    return __jsx(Select.Option, {\n      value: country.name,\n      key: country.code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, country.name);\n  }))), __jsx(Form.Item, {\n    name: \"state\",\n    label: \"State Name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"samplestate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"city\",\n    label: \"City\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"samplecity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"zipcode\",\n    label: \"Zip\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"012345-678\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"address\",\n    label: \"Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"Address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    label: \"Facebook\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"https://www.facebook.com\",\n    value: facebook,\n    onChange: function onChange(e) {\n      return setFb(facebook = e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    label: \"Twitter\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"https://www.twitter.com\",\n    value: twitter,\n    onChange: function onChange(e) {\n      return setTw(twitter = e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    label: \"Instagram\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"https://www.instagram.com\",\n    value: instagram,\n    onChange: function onChange(e) {\n      return setIta(instagram = e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, _extends({}, tailFormItemLayout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: loading,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  }, \"Save Changes\")));\n};\n\nexport default UserProfile;","map":null,"metadata":{},"sourceType":"module"}