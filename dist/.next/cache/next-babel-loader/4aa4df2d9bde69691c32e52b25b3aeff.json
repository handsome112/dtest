{"ast":null,"code":"import { createAction, createAsyncAction } from '@lib/redux';\nexport const {\n  getConversations,\n  getConversationsSuccess,\n  getConversationsFail\n} = createAsyncAction('getConversations', 'LOAD_CONVERSATIONS');\nexport const {\n  searchConversations,\n  searchConversationsSuccess,\n  searchConversationsFail\n} = createAsyncAction('searchConversations', 'SEARCH_CONVERSATIONS');\nexport const {\n  readMessages\n} = createAsyncAction('readMessages', 'READ_MESSAGES');\nexport const {\n  sendMessage,\n  sendMessageSuccess,\n  sendMessageFail\n} = createAsyncAction('sendMessage', 'SEND_MESSAGE');\nexport const {\n  receiveMessageSuccess\n} = createAsyncAction('receiveMessageSuccess', 'RECEIVE_MESSAGE_SUCCESS');\nexport const {\n  sentFileSuccess\n} = createAsyncAction('sentFileSuccess', 'SENT_FILE_SUCCESS');\nexport const {\n  deactiveConversation\n} = createAsyncAction('deactiveConversation', 'DEACTIVE_CONVERSATION');\nexport const updateLastMessage = createAction('updateLastMessage');\nexport const {\n  setActiveConversation,\n  setActiveConversationSuccess,\n  setActiveConversationFail\n} = createAsyncAction('setActiveConversation', 'SET_ACTIVE_CONVERSATION_RECEIVER');\nexport const {\n  loadMessages,\n  loadMessagesSuccess,\n  loadMessagesFail\n} = createAsyncAction('loadMessages', 'LOAD_MESSAGES');\nexport const {\n  loadMoreMessages,\n  loadMoreMessagesSuccess,\n  loadMoreMessagesFail\n} = createAsyncAction('loadMoreMessages', 'LOAD_MORE_MESSAGES');\nexport const fetchingMessage = createAction('fetchingMessage');\nexport const resetMessageState = createAction('resetMessageState');\nexport const {\n  getConversationDetail,\n  getConversationDetailSuccess,\n  getConversationDetailFail\n} = createAsyncAction('getConversationDetail', 'LOAD_CONVERSATION_ITEM');\nexport const countNotReadMessage = createAction('COUNT_TOTAL_NOT_READ_MESSAGE');","map":null,"metadata":{},"sourceType":"module"}