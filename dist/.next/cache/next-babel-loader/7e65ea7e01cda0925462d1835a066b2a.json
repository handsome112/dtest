{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/pages/studio/commissions/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-return-assign */\nimport { Input, message } from 'antd';\nimport PageHeader from '@components/common/layout/page-header';\nimport Head from 'next/head';\nimport { getMembersCommissions, updateMemberCommision } from 'src/redux/studio/actions';\nimport React, { PureComponent } from 'react';\nimport StudioCommissionsTable from '@components/studio/models-manager/studio-commissions-table';\nimport { connect } from 'react-redux';\nimport './index.less';\nimport { getResponseError, getSearchData } from 'src/lib';\nimport Popup from '@components/common/base/popup';\nimport { studioService } from 'src/services';\n\nclass StudioModelsPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"popupRef\", void 0);\n\n    _defineProperty(this, \"inputRef\", void 0);\n\n    this.state = {\n      limit: 12,\n      offset: 0,\n      sortBy: 'createdAt',\n      sort: 'desc',\n      filter: {},\n      commissionId: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getMembersCommissions: dispatchGetMembersCommissions\n    } = this.props;\n    dispatchGetMembersCommissions(this.state);\n  }\n\n  componentDidUpdate(_, prevStates) {\n    const {\n      getMembersCommissions: dispatchGetMembersCommissions\n    } = this.props;\n\n    if (prevStates !== this.state) {\n      dispatchGetMembersCommissions(this.state);\n    }\n  }\n\n  handleTableChange(pagination, filters, sorter) {\n    const oldState = this.state;\n    this.setState(getSearchData(pagination, filters, sorter, oldState));\n  }\n\n  async onOk() {\n    const {\n      updateMemberCommision: dispatchUpdateMemberCommision\n    } = this.props;\n    const {\n      commissionId\n    } = this.state;\n    if (!commissionId || !this.inputRef) return;\n\n    try {\n      const {\n        value\n      } = this.inputRef.state;\n      await studioService.updateMemberCommission(commissionId, parseInt(value, 10));\n      dispatchUpdateMemberCommision({\n        id: commissionId,\n        memberCommission: parseInt(value, 10)\n      });\n      message.success('Update success');\n      this.popupRef && this.popupRef.setVisible(false);\n    } catch (e) {\n      const err = await Promise.resolve(e);\n      message.error(getResponseError(err));\n    }\n  }\n\n  update(id) {\n    this.setState({\n      commissionId: id\n    });\n    this.popupRef && this.popupRef.setVisible(true);\n  }\n\n  render() {\n    const {\n      data,\n      searching,\n      total\n    } = this.props;\n    const {\n      limit\n    } = this.state;\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Commissions\")), __jsx(Popup, {\n      ref: ref => this.popupRef = ref,\n      content: __jsx(Input, {\n        type: \"number\",\n        min: 0,\n        max: 100,\n        ref: ref => this.inputRef = ref,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }),\n      onOk: this.onOk.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }), __jsx(\"div\", {\n      className: \"studio-commisson-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, __jsx(PageHeader, {\n      title: \"Commissions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      className: \"studio-commisson-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }\n    }, __jsx(StudioCommissionsTable, {\n      data: data,\n      searching: searching,\n      total: total,\n      update: this.update.bind(this),\n      onChange: this.handleTableChange.bind(this),\n      pageSize: limit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\n_defineProperty(StudioModelsPage, \"authenticate\", 'studio');\n\n_defineProperty(StudioModelsPage, \"layout\", 'primary');\n\nconst mapStateToProps = state => _objectSpread({}, state.studio.commissions);\n\nconst mapDispatchs = {\n  getMembersCommissions,\n  updateMemberCommision\n};\nexport default connect(mapStateToProps, mapDispatchs)(StudioModelsPage);","map":null,"metadata":{},"sourceType":"module"}