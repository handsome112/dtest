{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/dtest.live/src/components/studio/models-manager/studio-add-model-form.tsx\";\n\nvar __jsx = React.createElement;\nimport { Form, Input, Button, Alert, Space, Select } from 'antd';\nimport { getResponseError } from '@lib/utils';\nimport Router from 'next/router';\nimport React from 'react';\n\nvar StudioAddModelForm = function StudioAddModelForm(_ref) {\n  var loading = _ref.loading,\n      error = _ref.error,\n      message = _ref.message,\n      onFinish = _ref.onFinish;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  return __jsx(Form, {\n    form: form,\n    name: \"studioAddModelForm\",\n    onFinish: onFinish,\n    scrollToFirstError: true,\n    style: {\n      margin: 'auto',\n      textAlign: 'center',\n      maxWidth: '400px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    name: \"firstName\",\n    rules: [{\n      required: true,\n      message: 'Please input first name!'\n    }, {\n      pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n      message: 'Alphanumeric'\n    }, {\n      whitespace: true,\n      message: 'Please input first name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"Model's first name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"lastName\",\n    rules: [{\n      required: true,\n      message: 'Please input last name!'\n    }, {\n      pattern: new RegExp('^[a-zA-Z0-9 ]*$'),\n      message: 'Alphanumeric'\n    }, {\n      whitespace: true,\n      message: 'Please input last name!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"Model's last name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Username is required!'\n    }, {\n      pattern: new RegExp('^[a-zA-Z0-9]*$'),\n      message: 'Dont allow special chars or space'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"Username\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      message: 'The input is not valid E-mail!'\n    }, {\n      required: true,\n      message: 'Please input your E-mail!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(Input, {\n    placeholder: \"E-mail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"gender\",\n    rules: [{\n      required: true,\n      message: 'Please select your gender!'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    placeholder: \"Gender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Select.Option, {\n    value: \"male\",\n    key: \"male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Male\"), __jsx(Select.Option, {\n    value: \"female\",\n    key: \"female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Female\"), __jsx(Select.Option, {\n    value: \"transgender\",\n    key: \"transgender\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Transgender\"))), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }, {\n      min: 6,\n      max: 14,\n      message: '6-14 characters'\n    }],\n    hasFeedback: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, __jsx(Input.Password, {\n    placeholder: \"Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  })), __jsx(Form.Item, {\n    name: \"confirm\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please confirm your password!'\n    }, function (_ref2) {\n      var getFieldValue = _ref2.getFieldValue;\n      return {\n        validator: function validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, __jsx(Input.Password, {\n    placeholder: \"Confirm Password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  })), error && __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, __jsx(Alert, {\n    description: getResponseError(message),\n    type: \"error\",\n    message: \"Error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), __jsx(Form.Item, {\n    style: {\n      textAlign: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, __jsx(Space, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    onClick: function onClick() {\n      return Router.push('/studio/models');\n    },\n    className: \"btn-submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: loading,\n    disabled: loading,\n    className: \"btn-submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Create\"))));\n};\n\nexport default StudioAddModelForm;","map":null,"metadata":{},"sourceType":"module"}