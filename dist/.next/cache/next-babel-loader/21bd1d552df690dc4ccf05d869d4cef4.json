{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/var/www/dtest.live/src/components/stream-chat/UserList.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { Dropdown, Menu, message } from 'antd';\nimport { DownOutlined, StopOutlined } from '@ant-design/icons';\nimport { connect } from 'react-redux';\nimport { getResponseError } from '@lib/utils';\nimport { performerService } from '@services/perfomer.service';\n\nvar StreamingChatUsers = function StreamingChatUsers(_ref) {\n  var loggedIn = _ref.loggedIn,\n      members = _ref.members,\n      currentPerformer = _ref.currentPerformer,\n      placeholderAvatarUrl = _ref.placeholderAvatarUrl;\n  var blockUser = React.useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var key, error;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              key = _ref2.key;\n\n              if (window.confirm('Are you sure to block this user?')) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 3:\n              _context.prev = 3;\n              _context.next = 6;\n              return performerService.geoBlock({\n                userIds: [key]\n              });\n\n            case 6:\n              _context.next = 14;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](3);\n              _context.next = 12;\n              return Promise.resolve(_context.t0);\n\n            case 12:\n              error = _context.sent;\n              message.error(getResponseError(error));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[3, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [members]);\n  return __jsx(\"div\", {\n    className: \"conversation-users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"users\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, members.length > 0 && members.map(function (m) {\n    return __jsx(\"div\", {\n      className: \"user\",\n      key: m._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, loggedIn && currentPerformer && currentPerformer._id ? __jsx(Dropdown, {\n      overlay: __jsx(Menu, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, __jsx(Menu.Item, {\n        onClick: blockUser,\n        key: m._id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }\n      }, __jsx(StopOutlined, {\n        size: 16,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }), ' ', \"Block this user\"))),\n      placement: \"bottomLeft\",\n      trigger: ['hover', 'click'],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      className: \"username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || placeholderAvatarUrl,\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }), m.username, ' ', __jsx(DownOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }))) : __jsx(\"span\", {\n      className: \"username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      alt: \"avatar\",\n      src: (m === null || m === void 0 ? void 0 : m.avatar) || '/default-user-icon.png',\n      width: \"35px\",\n      style: {\n        borderRadius: '50%',\n        marginRight: '5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), m.username));\n  })));\n};\n\nvar mapStates = function mapStates(state) {\n  return {\n    placeholderAvatarUrl: state.ui.placeholderAvatarUrl\n  };\n};\n\nexport default connect(mapStates)(StreamingChatUsers);","map":null,"metadata":{},"sourceType":"module"}