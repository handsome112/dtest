{"ast":null,"code":"var _jsxFileName = \"/var/www/dtest.live/src/components/products/products-table.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Table, Button, Space, Menu, Input } from 'antd';\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from '@ant-design/icons';\nimport Link from 'next/link';\n\nconst ProductsTable = ({\n  products,\n  searching,\n  remove,\n  total,\n  pageSize,\n  onChange\n}) => {\n  const columns = [{\n    title: 'Product Image',\n    dataIndex: 'image',\n    key: 'image',\n    responsive: ['md'],\n    render: (image, product) => __jsx(Link, {\n      href: {\n        pathname: '/account/performer/products/update',\n        query: {\n          id: product._id,\n          product: JSON.stringify(product)\n        }\n      },\n      as: `/account/performer/products/${product._id}/update`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: image,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    })))\n  }, {\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'q',\n    render: (name, product) => __jsx(Link, {\n      href: {\n        pathname: '/account/performer/products/update',\n        query: {\n          id: product._id,\n          product: JSON.stringify(product)\n        }\n      },\n      as: `/account/performer/products/${product._id}/update`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, name)),\n    filterIcon: filtered => __jsx(SearchOutlined, {\n      style: {\n        color: filtered ? '#ff0066' : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }),\n    filterDropdown: ({\n      setSelectedKeys,\n      confirm,\n      clearFilters\n    }) => __jsx(\"div\", {\n      style: {\n        padding: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, __jsx(Input, {\n      placeholder: \"Product Name\",\n      size: \"large\",\n      onChange: event => {\n        if (!event.target.value) {\n          setSelectedKeys([]);\n          clearFilters();\n        }\n      },\n      onPressEnter: event => {\n        setSelectedKeys([event.currentTarget.value]);\n        confirm();\n      },\n      allowClear: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }))\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    filterIcon: filtered => __jsx(SearchOutlined, {\n      style: {\n        color: filtered ? '#ff0066' : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }),\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => __jsx(\"div\", {\n      style: {\n        padding: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, __jsx(Menu, {\n      style: {\n        borderRight: 'none'\n      },\n      onSelect: param => {\n        setSelectedKeys([param.key]);\n        confirm();\n      },\n      selectedKeys: selectedKeys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(Menu.Item, {\n      key: \"physical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Physical\"), __jsx(Menu.Item, {\n      key: \"digital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Digital\")), __jsx(Button, {\n      onClick: () => {\n        setSelectedKeys([]);\n        clearFilters();\n      },\n      style: {\n        width: '100%',\n        color: selectedKeys.length ? '#ff0066' : undefined,\n        borderColor: selectedKeys.length ? '#ff0066' : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Reset\")),\n    render: type => __jsx(\"span\", {\n      style: {\n        textTransform: 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, type)\n  }, {\n    title: 'Tokens',\n    dataIndex: 'token',\n    key: 'token',\n    sorter: true\n  }, {\n    title: 'In Stock',\n    dataIndex: 'stock',\n    key: 'stock',\n    render: (stock, item) => item.type === 'physical' ? stock : 'N/A',\n    sorter: true\n  }, {\n    title: 'Is Publish?',\n    key: 'publish',\n    dataIndex: 'publish',\n    render: text => __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }\n    }, text ? 'YES' : 'NO'),\n    filterIcon: filtered => __jsx(SearchOutlined, {\n      style: {\n        color: filtered ? '#ff0066' : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }),\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters\n    }) => __jsx(\"div\", {\n      style: {\n        padding: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, __jsx(Menu, {\n      style: {\n        borderRight: 'none'\n      },\n      onSelect: param => {\n        setSelectedKeys([param.key]);\n        confirm();\n      },\n      selectedKeys: selectedKeys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, __jsx(Menu.Item, {\n      key: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, \"YES\"), __jsx(Menu.Item, {\n      key: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, \"NO\")), __jsx(Button, {\n      onClick: () => {\n        setSelectedKeys([]);\n        clearFilters();\n      },\n      style: {\n        width: '100%',\n        color: selectedKeys.length ? '#ff0066' : undefined,\n        borderColor: selectedKeys.length ? '#ff0066' : undefined\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, \"Reset\"))\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: product => {\n      const {\n        _id\n      } = product;\n      return __jsx(Space, {\n        size: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, __jsx(Link, {\n        as: `/account/performer/products/${_id}/update`,\n        href: {\n          pathname: '/account/performer/products/update',\n          query: {\n            id: _id,\n            product: JSON.stringify(product)\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, __jsx(\"a\", {\n        style: {\n          color: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, __jsx(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      }))), __jsx(DeleteOutlined, {\n        onClick: () => remove(_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }));\n    }\n  }];\n  const dataSource = products.map(p => _objectSpread(_objectSpread({}, p), {}, {\n    key: p._id\n  }));\n  return __jsx(Table, {\n    dataSource: dataSource,\n    columns: columns,\n    className: \"table\",\n    pagination: {\n      total,\n      pageSize\n    },\n    showSorterTooltip: false,\n    loading: searching,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  });\n};\n\nProductsTable.defaultProps = {\n  remove: null\n};\nexport default ProductsTable;","map":null,"metadata":{},"sourceType":"module"}